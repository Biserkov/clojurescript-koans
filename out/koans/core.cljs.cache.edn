;; Analyzed by ClojureScript 1.7.228
{:use-macros {deftemplate dommy.macros}, :excludes #{}, :name koans.core, :imports nil, :requires {cljs cljs.js, cljs.tools.reader cljs.tools.reader, dommy dommy.core, cljs.js cljs.js, meditations koans.meditations, clojure.set clojure.set, jayq.core jayq.core, koans.meditations koans.meditations, $ jayq.core, dommy.core dommy.core, clojure.string clojure.string, jayq.util jayq.util}, :uses {log jayq.util, $ jayq.core, read-string cljs.tools.reader, wait jayq.util}, :defs {error-message {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 59, :column 14, :end-line 59, :end-column 27, :arglists (quote ([]))}, :name koans.core/error-message, :variadic false, :file "src/koans/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, input-with-code {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 47, :column 14, :end-line 47, :end-column 29, :arglists (quote ([koan]))}, :name koans.core/input-with-code, :variadic false, :file "src/koans/core.cljs", :end-column 29, :method-params ([koan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([koan]))}, fadeout-time {:name koans.core/fadeout-time, :file "src/koans/core.cljs", :line 25, :column 1, :end-line 25, :end-column 18, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 25, :column 6, :end-line 25, :end-column 18}}, hash-objects {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([]))}, :name koans.core/hash-objects, :variadic false, :file "src/koans/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, load-next-koan {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 83, :column 7, :end-line 83, :end-column 21, :arglists (quote ([]))}, :name koans.core/load-next-koan, :variadic false, :file "src/koans/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 83, :end-line 83, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, category-name {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 94, :column 7, :end-line 94, :end-column 20, :arglists (quote ([koan-index]))}, :name koans.core/category-name, :variadic false, :file "src/koans/core.cljs", :end-column 20, :method-params ([koan-index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 1, :fn-var true, :arglists (quote ([koan-index]))}, show-error-message {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 150, :column 7, :end-line 150, :end-column 25, :arglists (quote ([]))}, :name koans.core/show-error-message, :variadic false, :file "src/koans/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 150, :end-line 150, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, current-koan-index {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 17, :column 7, :end-line 17, :end-column 25, :arglists (quote ([]))}, :name koans.core/current-koan-index, :variadic false, :file "src/koans/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 17, :end-line 17, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-static-pages {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 91, :column 7, :end-line 91, :end-column 26, :arglists (quote ([]))}, :name koans.core/remove-static-pages, :variadic false, :file "src/koans/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 91, :end-line 91, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, valid-input? {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 69, :column 7, :end-line 69, :end-column 19, :arglists (quote ([el]))}, :name koans.core/valid-input?, :variadic false, :file "src/koans/core.cljs", :end-column 19, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 69, :end-line 69, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, init {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 189, :column 7, :end-line 189, :end-column 11, :arglists (quote ([]))}, :name koans.core/init, :variadic false, :file "src/koans/core.cljs", :end-column 11, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 189, :end-line 189, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, render-static-page {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 115, :column 7, :end-line 115, :end-column 25, :arglists (quote ([selector]))}, :name koans.core/render-static-page, :variadic false, :file "src/koans/core.cljs", :end-column 25, :method-params ([selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 115, :end-line 115, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selector]))}, input-with-code-block {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 33, :column 7, :end-line 33, :end-column 28, :arglists (quote ([parts]))}, :name koans.core/input-with-code-block, :variadic false, :file "src/koans/core.cljs", :end-column 28, :method-params ([parts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([parts]))}, evaluate-koan {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 167, :column 7, :end-line 167, :end-column 20, :arglists (quote ([]))}, :name koans.core/evaluate-koan, :variadic false, :file "src/koans/core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 167, :end-line 167, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, char-width {:name koans.core/char-width, :file "src/koans/core.cljs", :line 26, :column 1, :end-line 26, :end-column 16, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 26, :column 6, :end-line 26, :end-column 16}}, render-current-koan {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 124, :column 7, :end-line 124, :end-column 26, :arglists (quote ([]))}, :name koans.core/render-current-koan, :variadic false, :file "src/koans/core.cljs", :end-column 26, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-hashchange {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 185, :column 7, :end-line 185, :end-column 24, :arglists (quote ([]))}, :name koans.core/handle-hashchange, :variadic false, :file "src/koans/core.cljs", :end-column 24, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 185, :end-line 185, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, handle-document-ready {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 178, :column 7, :end-line 178, :end-column 28, :arglists (quote ([]))}, :name koans.core/handle-document-ready, :variadic false, :file "src/koans/core.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 178, :end-line 178, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, update-location-hash {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 21, :column 7, :end-line 21, :end-column 27, :arglists (quote ([]))}, :name koans.core/update-location-hash, :variadic false, :file "src/koans/core.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, remove-active-koan {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 86, :column 7, :end-line 86, :end-column 25, :arglists (quote ([]))}, :name koans.core/remove-active-koan, :variadic false, :file "src/koans/core.cljs", :end-column 25, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, parentheses-classes-count {:name koans.core/parentheses-classes-count, :file "src/koans/core.cljs", :line 28, :column 1, :end-line 28, :end-column 31, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 28, :column 6, :end-line 28, :end-column 31}}, compiler-state {:name koans.core/compiler-state, :file "src/koans/core.cljs", :line 164, :column 1, :end-line 164, :end-column 24, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 164, :column 10, :end-line 164, :end-column 24}}, input-with-element-content {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 62, :column 7, :end-line 62, :end-column 33, :arglists (quote ([el]))}, :name koans.core/input-with-element-content, :variadic false, :file "src/koans/core.cljs", :end-column 33, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, parentheses-class-name {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 30, :column 7, :end-line 30, :end-column 29, :arglists (quote ([index]))}, :name koans.core/parentheses-class-name, :variadic false, :file "src/koans/core.cljs", :end-column 29, :method-params ([index]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([index]))}, render-koan {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 98, :column 7, :end-line 98, :end-column 18, :arglists (quote ([koan]))}, :name koans.core/render-koan, :variadic false, :file "src/koans/core.cljs", :end-column 18, :method-params ([koan]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 1, :fn-var true, :arglists (quote ([koan]))}, resize-input {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 136, :column 7, :end-line 136, :end-column 19, :arglists (quote ([input]))}, :name koans.core/resize-input, :variadic false, :file "src/koans/core.cljs", :end-column 19, :method-params ([input]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 136, :end-line 136, :max-fixed-arity 1, :fn-var true, :arglists (quote ([input]))}, input-string {:protocol-inline nil, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 75, :column 7, :end-line 75, :end-column 19, :arglists (quote ([]))}, :name koans.core/input-string, :variadic false, :file "src/koans/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, enter-key {:name koans.core/enter-key, :file "src/koans/core.cljs", :line 27, :column 1, :end-line 27, :end-column 15, :meta {:file "/Users/mkremins/Projects/clojurescript-koans/src/koans/core.cljs", :line 27, :column 6, :end-line 27, :end-column 15}}}, :require-macros {dommy.macros dommy.macros, cljs cljs.js, cljs.js cljs.js}, :cljs.analyzer/constants {:seen #{:description :.shadow :.static :category :pre :index :.text :else :name :value :.code-box :keypress :.koan ns :div :click :code-parts :.error :class :fn-strings :error :input :body :.category :span cljs.user :eval}, :order [:category :index :input :span :class :name :else :description :code-parts :fn-strings :div :pre :.koan :.static :.category :body :.shadow :.code-box :.error :eval :error :value :click :.text :keypress ns cljs.user]}, :doc nil}