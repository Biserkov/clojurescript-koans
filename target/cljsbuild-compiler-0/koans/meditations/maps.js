// Compiled by ClojureScript 0.0-2014
goog.provide('koans.meditations.maps');
goog.require('cljs.core');
koans.meditations.maps.koans = cljs.core.list("Don't get lost when creating a map",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true),cljs.core.list(new cljs.core.Symbol(null,"hash-map","hash-map",-1493492266,null),new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"__","__",1013907282))),"A value must be supplied for each key",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1], true),cljs.core.list(new cljs.core.Symbol(null,"hash-map","hash-map",-1493492266,null),new cljs.core.Keyword(null,"a","a",1013904339),new cljs.core.Keyword(null,"__","__",1013907282))),"The size is the number of entries",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"count","count",-1545680184,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true))),"You can look up the value for a given key",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"get","get",-1640429297,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true),new cljs.core.Keyword(null,"b","b",1013904340))),"Maps can be used as functions to do lookups",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true),new cljs.core.Keyword(null,"a","a",1013904339))),"And so can keywords",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Keyword(null,"a","a",1013904339),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true))),"But map keys need not be keywords",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(cljs.core.PersistentArrayMap.fromArray([2006,"Torino",2010,"Vancouver",2014,"Sochi"], true),2010)),"You may not be able to find an entry for a key",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"get","get",-1640429297,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true),new cljs.core.Keyword(null,"c","c",1013904341))),"But you can provide your own default",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"get","get",-1640429297,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),1,new cljs.core.Keyword(null,"b","b",1013904340),2], true),new cljs.core.Keyword(null,"c","c",1013904341),new cljs.core.Keyword(null,"key-not-found","key-not-found",1380119948))),"You can find out if a key is present",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"contains?","contains?",-2051487815,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),null,new cljs.core.Keyword(null,"b","b",1013904340),null], true),new cljs.core.Keyword(null,"b","b",1013904340))),"Or if it is missing",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"contains?","contains?",-2051487815,null),cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null,"a","a",1013904339),null,new cljs.core.Keyword(null,"b","b",1013904340),null], true),new cljs.core.Keyword(null,"c","c",1013904341))),"Maps are immutable, but you can create a new and improved version",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.PersistentArrayMap.fromArray([1,"January",2,new cljs.core.Keyword(null,"__","__",1013907282)], true),cljs.core.list(new cljs.core.Symbol(null,"assoc","assoc",-1547409970,null),cljs.core.PersistentArrayMap.fromArray([1,"January"], true),2,"February")),"You can also create a new version with an entry removed",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"dissoc","dissoc",1322893298,null),cljs.core.PersistentArrayMap.fromArray([1,"January",2,"February"], true),2)),"Often you will need to get the keys, but the order is undependable",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.list(new cljs.core.Symbol(null,"list","list",-1637209513,null),new cljs.core.Keyword(null,"__","__",1013907282)),cljs.core.list(new cljs.core.Symbol(null,"sort","sort",-1636995241,null),cljs.core.list(new cljs.core.Symbol(null,"keys","keys",-1637242963,null),cljs.core.PersistentArrayMap.fromArray([2010,"Vancouver",2014,"Sochi",2006,"Torino"], true)))),"You can get the values in a similar way",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),cljs.core.list(new cljs.core.Symbol(null,"list","list",-1637209513,null),new cljs.core.Keyword(null,"__","__",1013907282)),cljs.core.list(new cljs.core.Symbol(null,"sort","sort",-1636995241,null),cljs.core.list(new cljs.core.Symbol(null,"vals","vals",-1636919509,null),cljs.core.PersistentArrayMap.fromArray([2006,"Torino",2010,"Vancouver",2014,"Sochi"], true)))));
