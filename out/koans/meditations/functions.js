// Compiled by ClojureScript 0.0-2014
goog.provide('koans.meditations.functions');
goog.require('cljs.core');
goog.require('koans.repl');
goog.require('koans.repl');
koans.meditations.functions.koans = cljs.core.list("Calling a function is like giving it a hug with parentheses",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"square","square",1759761110,null),9)),"Functions are usually defined before they are used",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"multiply-by-ten","multiply-by-ten",-915076311,null),2)),"But they can also be defined inline",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",-1640528255,null),cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null,"n","n",-1640531417,null)], true),cljs.core.list(new cljs.core.Symbol(null,"*","*",-1640531485,null),5,new cljs.core.Symbol(null,"n","n",-1640531417,null))),2)),"Or using an even shorter syntax","(= :__ (#(* 15 %) 4))","Even anonymous functions may take multiple arguments","(= :__ (#(+ %1 %2 %3) 4 5 6))","Arguments can also be skipped","(= :__ (#(* 15 %2) 1 2))","One function can beget another",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),9,cljs.core.list(cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",-1640528255,null),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"__","__",1013907282))),4,5)),"Functions can also take other functions as input",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),20,cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",-1640528255,null),cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null,"f","f",-1640531425,null)], true),cljs.core.list(new cljs.core.Symbol(null,"f","f",-1640531425,null),4,5)),new cljs.core.Keyword(null,"__","__",1013907282))),"Higher-order functions take function arguments",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),25,cljs.core.list(new cljs.core.Keyword(null,"__","__",1013907282),cljs.core.list(new cljs.core.Symbol(null,"fn","fn",-1640528255,null),cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null,"n","n",-1640531417,null)], true),cljs.core.list(new cljs.core.Symbol(null,"*","*",-1640531485,null),new cljs.core.Symbol(null,"n","n",-1640531417,null),new cljs.core.Symbol(null,"n","n",-1640531417,null))))),"But they are often better written using the names of functions",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1640531466,null),25,cljs.core.list(new cljs.core.Keyword(null,"__","__",1013907282),new cljs.core.Symbol(null,"square","square",1759761110,null))));
koans.meditations.functions.fns = cljs.core.PersistentVector.fromArray(["(defn multiply-by-ten [n]\n  (* 10 n))",cljs.core.list(new cljs.core.Symbol(null,"defn","defn",-1637452094,null),new cljs.core.Symbol(null,"square","square",1759761110,null),cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null,"n","n",-1640531417,null)], true),cljs.core.list(new cljs.core.Symbol(null,"*","*",-1640531485,null),new cljs.core.Symbol(null,"n","n",-1640531417,null),new cljs.core.Symbol(null,"n","n",-1640531417,null)))], true);

//# sourceMappingURL=functions.js.map