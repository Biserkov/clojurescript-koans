var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2014";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3119__auto__ = ty;
    if(cljs.core.truth_(and__3119__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3119__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__13842__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__13842 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13842__delegate.call(this, array, i, idxs)
    };
    G__13842.cljs$lang$maxFixedArity = 2;
    G__13842.cljs$lang$applyTo = function(arglist__13843) {
      var array = cljs.core.first(arglist__13843);
      arglist__13843 = cljs.core.next(arglist__13843);
      var i = cljs.core.first(arglist__13843);
      var idxs = cljs.core.rest(arglist__13843);
      return G__13842__delegate(array, i, idxs)
    };
    G__13842.cljs$core$IFn$_invoke$arity$variadic = G__13842__delegate;
    return G__13842
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__13844__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__13844 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13844__delegate.call(this, array, idx, idx2, idxv)
    };
    G__13844.cljs$lang$maxFixedArity = 3;
    G__13844.cljs$lang$applyTo = function(arglist__13845) {
      var array = cljs.core.first(arglist__13845);
      arglist__13845 = cljs.core.next(arglist__13845);
      var idx = cljs.core.first(arglist__13845);
      arglist__13845 = cljs.core.next(arglist__13845);
      var idx2 = cljs.core.first(arglist__13845);
      var idxv = cljs.core.rest(arglist__13845);
      return G__13844__delegate(array, idx, idx2, idxv)
    };
    G__13844.cljs$core$IFn$_invoke$arity$variadic = G__13844__delegate;
    return G__13844
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._count[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._count["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._empty[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._empty["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._conj[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._conj["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._nth[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._nth["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._nth[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._nth["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._rest[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._rest["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._next[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._next["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3119__auto__ = o;
      if(and__3119__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3723__auto__ = o == null ? null : o;
      return function() {
        var or__3128__auto__ = cljs.core._lookup[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._lookup["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3119__auto__ = o;
      if(and__3119__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3723__auto__ = o == null ? null : o;
      return function() {
        var or__3128__auto__ = cljs.core._lookup[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._lookup["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._dissoc[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dissoc["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._key[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._key["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._val[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._val["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._disjoin[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._disjoin["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._peek[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._peek["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._pop[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pop["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_n[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._deref[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._deref["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._meta[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._meta["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._with_meta[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._with_meta["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._reduce[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._reduce["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._reduce[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._reduce["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._equiv[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._equiv["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._hash[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._hash["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._seq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._seq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._rseq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._rseq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._entry_key[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._entry_key["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._comparator[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._comparator["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3119__auto__ = writer;
    if(and__3119__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3723__auto__ = writer == null ? null : writer;
    return function() {
      var or__3128__auto__ = cljs.core._write[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._write["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3119__auto__ = writer;
    if(and__3119__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3723__auto__ = writer == null ? null : writer;
    return function() {
      var or__3128__auto__ = cljs.core._flush[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._flush["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._pr_writer[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3119__auto__ = d;
    if(and__3119__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3723__auto__ = d == null ? null : d;
    return function() {
      var or__3128__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._notify_watches[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._add_watch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._add_watch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._remove_watch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._as_transient[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._as_transient["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._compare[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._compare["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._drop_first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._drop_first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_next[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._name[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._name["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._namespace[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._namespace["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3532__auto__ = self__._hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__13847 = null;
  var G__13847__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__13847__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__13847 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13847__2.call(this, self__, coll);
      case 3:
        return G__13847__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13847
}();
cljs.core.Symbol.prototype.apply = function(self__, args13846) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args13846.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null)
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found)
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13849 = coll;
      if(G__13849) {
        var bit__3739__auto__ = G__13849.cljs$lang$protocol_mask$partition0$ & 8388608;
        if(bit__3739__auto__ || G__13849.cljs$core$ISeqable$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13851 = coll;
      if(G__13851) {
        var bit__3739__auto__ = G__13851.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__13851.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__13853 = coll;
      if(G__13853) {
        var bit__3739__auto__ = G__13853.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__13853.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13855 = coll;
      if(G__13855) {
        var bit__3739__auto__ = G__13855.cljs$lang$protocol_mask$partition0$ & 128;
        if(bit__3739__auto__ || G__13855.cljs$core$INext$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    return x === y || cljs.core._equiv.call(null, x, y)
  };
  var _EQ___3 = function() {
    var G__13856__delegate = function(x, y, more) {
      while(true) {
        if(_EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__13857 = y;
            var G__13858 = cljs.core.first.call(null, more);
            var G__13859 = cljs.core.next.call(null, more);
            x = G__13857;
            y = G__13858;
            more = G__13859;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13856 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13856__delegate.call(this, x, y, more)
    };
    G__13856.cljs$lang$maxFixedArity = 2;
    G__13856.cljs$lang$applyTo = function(arglist__13860) {
      var x = cljs.core.first(arglist__13860);
      arglist__13860 = cljs.core.next(arglist__13860);
      var y = cljs.core.first(arglist__13860);
      var more = cljs.core.rest(arglist__13860);
      return G__13856__delegate(x, y, more)
    };
    G__13856.cljs$core$IFn$_invoke$arity$variadic = G__13856__delegate;
    return G__13856
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString()
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__13861 = nval;
            var G__13862 = n + 1;
            val = G__13861;
            n = G__13862;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13863 = nval;
          var G__13864 = n + 1;
          val__$1 = G__13863;
          n = G__13864;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13865 = nval;
          var G__13866 = n + 1;
          val__$1 = G__13865;
          n = G__13866;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__13867 = nval;
            var G__13868 = n + 1;
            val = G__13867;
            n = G__13868;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13869 = nval;
          var G__13870 = n + 1;
          val__$1 = G__13869;
          n = G__13870;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13871 = nval;
          var G__13872 = n + 1;
          val__$1 = G__13871;
          n = G__13872;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__13874 = x;
  if(G__13874) {
    var bit__3746__auto__ = G__13874.cljs$lang$protocol_mask$partition0$ & 2;
    if(bit__3746__auto__ || G__13874.cljs$core$ICounted$) {
      return true
    }else {
      if(!G__13874.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__13874)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__13874)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__13876 = x;
  if(G__13876) {
    var bit__3746__auto__ = G__13876.cljs$lang$protocol_mask$partition0$ & 16;
    if(bit__3746__auto__ || G__13876.cljs$core$IIndexed$) {
      return true
    }else {
      if(!G__13876.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__13876)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__13876)
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if(c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return null
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__13877 = sn;
      s = G__13877;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__13878__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__13879 = conj.call(null, coll, x);
          var G__13880 = cljs.core.first.call(null, xs);
          var G__13881 = cljs.core.next.call(null, xs);
          coll = G__13879;
          x = G__13880;
          xs = G__13881;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__13878 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13878__delegate.call(this, coll, x, xs)
    };
    G__13878.cljs$lang$maxFixedArity = 2;
    G__13878.cljs$lang$applyTo = function(arglist__13882) {
      var coll = cljs.core.first(arglist__13882);
      arglist__13882 = cljs.core.next(arglist__13882);
      var x = cljs.core.first(arglist__13882);
      var xs = cljs.core.rest(arglist__13882);
      return G__13878__delegate(coll, x, xs)
    };
    G__13878.cljs$core$IFn$_invoke$arity$variadic = G__13878__delegate;
    return G__13878
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__13883 = cljs.core.next.call(null, s);
      var G__13884 = acc + 1;
      s = G__13883;
      acc = G__13884;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__13886 = coll;
      if(G__13886) {
        var bit__3739__auto__ = G__13886.cljs$lang$protocol_mask$partition0$ & 2;
        if(bit__3739__auto__ || G__13886.cljs$core$ICounted$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__13887 = cljs.core.next.call(null, coll);
              var G__13888 = n - 1;
              coll = G__13887;
              n = G__13888;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__13889 = cljs.core.next.call(null, coll);
              var G__13890 = n - 1;
              var G__13891 = not_found;
              coll = G__13889;
              n = G__13890;
              not_found = G__13891;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__13896 = coll;
        if(G__13896) {
          var bit__3739__auto__ = G__13896.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3739__auto__ || G__13896.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__13897 = coll;
                  if(G__13897) {
                    var bit__3746__auto__ = G__13897.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3746__auto__ || G__13897.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__13897.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13897)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13897)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__13898 = coll;
        if(G__13898) {
          var bit__3739__auto__ = G__13898.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3739__auto__ || G__13898.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__13899 = coll;
                  if(G__13899) {
                    var bit__3746__auto__ = G__13899.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3746__auto__ || G__13899.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__13899.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13899)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13899)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__13902 = o;
        if(G__13902) {
          var bit__3739__auto__ = G__13902.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3739__auto__ || G__13902.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__13903 = o;
        if(G__13903) {
          var bit__3739__auto__ = G__13903.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3739__auto__ || G__13903.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__13904__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__13905 = ret;
          var G__13906 = cljs.core.first.call(null, kvs);
          var G__13907 = cljs.core.second.call(null, kvs);
          var G__13908 = cljs.core.nnext.call(null, kvs);
          coll = G__13905;
          k = G__13906;
          v = G__13907;
          kvs = G__13908;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13904 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13904__delegate.call(this, coll, k, v, kvs)
    };
    G__13904.cljs$lang$maxFixedArity = 3;
    G__13904.cljs$lang$applyTo = function(arglist__13909) {
      var coll = cljs.core.first(arglist__13909);
      arglist__13909 = cljs.core.next(arglist__13909);
      var k = cljs.core.first(arglist__13909);
      arglist__13909 = cljs.core.next(arglist__13909);
      var v = cljs.core.first(arglist__13909);
      var kvs = cljs.core.rest(arglist__13909);
      return G__13904__delegate(coll, k, v, kvs)
    };
    G__13904.cljs$core$IFn$_invoke$arity$variadic = G__13904__delegate;
    return G__13904
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__13910__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__13911 = ret;
          var G__13912 = cljs.core.first.call(null, ks);
          var G__13913 = cljs.core.next.call(null, ks);
          coll = G__13911;
          k = G__13912;
          ks = G__13913;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13910 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13910__delegate.call(this, coll, k, ks)
    };
    G__13910.cljs$lang$maxFixedArity = 2;
    G__13910.cljs$lang$applyTo = function(arglist__13914) {
      var coll = cljs.core.first(arglist__13914);
      arglist__13914 = cljs.core.next(arglist__13914);
      var k = cljs.core.first(arglist__13914);
      var ks = cljs.core.rest(arglist__13914);
      return G__13910__delegate(coll, k, ks)
    };
    G__13910.cljs$core$IFn$_invoke$arity$variadic = G__13910__delegate;
    return G__13910
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3128__auto__ = goog.isFunction(f);
  if(or__3128__auto__) {
    return or__3128__auto__
  }else {
    var G__13918 = f;
    if(G__13918) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto____$1 = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto____$1)) {
          return or__3128__auto____$1
        }else {
          return G__13918.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__13918.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__13918)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__13918)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__13926 = o;
    if(G__13926) {
      var bit__3746__auto__ = G__13926.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3746__auto__ || G__13926.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__13926.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13926)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__13926)
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t13927 !== "undefined") {
      }else {
        cljs.core.t13927 = function(meta, o, with_meta, meta13928) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta13928 = meta13928;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t13927.cljs$lang$type = true;
        cljs.core.t13927.cljs$lang$ctorStr = "cljs.core/t13927";
        cljs.core.t13927.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/t13927")
        };
        cljs.core.t13927.prototype.call = function() {
          var G__13931__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__13931 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__13931__delegate.call(this, self__, args)
          };
          G__13931.cljs$lang$maxFixedArity = 1;
          G__13931.cljs$lang$applyTo = function(arglist__13932) {
            var self__ = cljs.core.first(arglist__13932);
            var args = cljs.core.rest(arglist__13932);
            return G__13931__delegate(self__, args)
          };
          G__13931.cljs$core$IFn$_invoke$arity$variadic = G__13931__delegate;
          return G__13931
        }();
        cljs.core.t13927.prototype.apply = function(self__, args13930) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(args13930.slice()))
        };
        cljs.core.t13927.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__13933__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__13933 = function(var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
            }
            return G__13933__delegate.call(this, args)
          };
          G__13933.cljs$lang$maxFixedArity = 0;
          G__13933.cljs$lang$applyTo = function(arglist__13934) {
            var args = cljs.core.seq(arglist__13934);
            return G__13933__delegate(args)
          };
          G__13933.cljs$core$IFn$_invoke$arity$variadic = G__13933__delegate;
          return G__13933
        }();
        cljs.core.t13927.prototype.cljs$core$Fn$ = true;
        cljs.core.t13927.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13929) {
          var self__ = this;
          var _13929__$1 = this;
          return self__.meta13928
        };
        cljs.core.t13927.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13929, meta13928__$1) {
          var self__ = this;
          var _13929__$1 = this;
          return new cljs.core.t13927(self__.meta, self__.o, self__.with_meta, meta13928__$1)
        };
        cljs.core.__GT_t13927 = function __GT_t13927(meta__$1, o__$1, with_meta__$1, meta13928) {
          return new cljs.core.t13927(meta__$1, o__$1, with_meta__$1, meta13928)
        }
      }
      return new cljs.core.t13927(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__13936 = o;
    if(G__13936) {
      var bit__3746__auto__ = G__13936.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__3746__auto__ || G__13936.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__13936.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13936)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__13936)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__13937__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__13938 = ret;
          var G__13939 = cljs.core.first.call(null, ks);
          var G__13940 = cljs.core.next.call(null, ks);
          coll = G__13938;
          k = G__13939;
          ks = G__13940;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__13937 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13937__delegate.call(this, coll, k, ks)
    };
    G__13937.cljs$lang$maxFixedArity = 2;
    G__13937.cljs$lang$applyTo = function(arglist__13941) {
      var coll = cljs.core.first(arglist__13941);
      arglist__13941 = cljs.core.next(arglist__13941);
      var k = cljs.core.first(arglist__13941);
      var ks = cljs.core.rest(arglist__13941);
      return G__13937__delegate(coll, k, ks)
    };
    G__13937.cljs$core$IFn$_invoke$arity$variadic = G__13937__delegate;
    return G__13937
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function hash(o) {
  if(function() {
    var G__13943 = o;
    if(G__13943) {
      var bit__3739__auto__ = G__13943.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(bit__3739__auto__ || G__13943.cljs$core$IHash$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._hash.call(null, o)
  }else {
    if(typeof o === "number") {
      return Math.floor(o) % 2147483647
    }else {
      if(o === true) {
        return 1
      }else {
        if(o === false) {
          return 0
        }else {
          if(typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core._hash.call(null, o)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13945 = x;
    if(G__13945) {
      var bit__3746__auto__ = G__13945.cljs$lang$protocol_mask$partition0$ & 8;
      if(bit__3746__auto__ || G__13945.cljs$core$ICollection$) {
        return true
      }else {
        if(!G__13945.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__13945)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__13945)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13947 = x;
    if(G__13947) {
      var bit__3746__auto__ = G__13947.cljs$lang$protocol_mask$partition0$ & 4096;
      if(bit__3746__auto__ || G__13947.cljs$core$ISet$) {
        return true
      }else {
        if(!G__13947.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13947)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__13947)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__13949 = x;
  if(G__13949) {
    var bit__3746__auto__ = G__13949.cljs$lang$protocol_mask$partition0$ & 512;
    if(bit__3746__auto__ || G__13949.cljs$core$IAssociative$) {
      return true
    }else {
      if(!G__13949.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__13949)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__13949)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__13951 = x;
  if(G__13951) {
    var bit__3746__auto__ = G__13951.cljs$lang$protocol_mask$partition0$ & 16777216;
    if(bit__3746__auto__ || G__13951.cljs$core$ISequential$) {
      return true
    }else {
      if(!G__13951.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13951)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__13951)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__13953 = x;
  if(G__13953) {
    var bit__3746__auto__ = G__13953.cljs$lang$protocol_mask$partition0$ & 524288;
    if(bit__3746__auto__ || G__13953.cljs$core$IReduce$) {
      return true
    }else {
      if(!G__13953.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__13953)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__13953)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__13955 = x;
    if(G__13955) {
      var bit__3746__auto__ = G__13955.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3746__auto__ || G__13955.cljs$core$IMap$) {
        return true
      }else {
        if(!G__13955.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13955)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__13955)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__13957 = x;
  if(G__13957) {
    var bit__3746__auto__ = G__13957.cljs$lang$protocol_mask$partition0$ & 16384;
    if(bit__3746__auto__ || G__13957.cljs$core$IVector$) {
      return true
    }else {
      if(!G__13957.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__13957)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__13957)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__13959 = x;
  if(G__13959) {
    var bit__3739__auto__ = G__13959.cljs$lang$protocol_mask$partition1$ & 512;
    if(bit__3739__auto__ || G__13959.cljs$core$IChunkedSeq$) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__13960__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__13960 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__13960__delegate.call(this, keyvals)
    };
    G__13960.cljs$lang$maxFixedArity = 0;
    G__13960.cljs$lang$applyTo = function(arglist__13961) {
      var keyvals = cljs.core.seq(arglist__13961);
      return G__13960__delegate(keyvals)
    };
    G__13960.cljs$core$IFn$_invoke$arity$variadic = G__13960__delegate;
    return G__13960
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__13962 = i__$1 + 1;
      var G__13963 = j__$1 + 1;
      var G__13964 = len__$1 - 1;
      i__$1 = G__13962;
      j__$1 = G__13963;
      len__$1 = G__13964;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__13965 = i__$1 - 1;
      var G__13966 = j__$1 - 1;
      var G__13967 = len__$1 - 1;
      i__$1 = G__13965;
      j__$1 = G__13966;
      len__$1 = G__13967;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__13969 = s;
    if(G__13969) {
      var bit__3746__auto__ = G__13969.cljs$lang$protocol_mask$partition0$ & 64;
      if(bit__3746__auto__ || G__13969.cljs$core$ISeq$) {
        return true
      }else {
        if(!G__13969.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13969)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__13969)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__13971 = s;
  if(G__13971) {
    var bit__3746__auto__ = G__13971.cljs$lang$protocol_mask$partition0$ & 8388608;
    if(bit__3746__auto__ || G__13971.cljs$core$ISeqable$) {
      return true
    }else {
      if(!G__13971.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__13971)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__13971)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3128__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3128__auto__) {
    return or__3128__auto__
  }else {
    var G__13975 = f;
    if(G__13975) {
      var bit__3746__auto__ = G__13975.cljs$lang$protocol_mask$partition0$ & 1;
      if(bit__3746__auto__ || G__13975.cljs$core$IFn$) {
        return true
      }else {
        if(!G__13975.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__13975)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__13975)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10)
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__13976__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__13977 = cljs.core.conj.call(null, s, x__$1);
              var G__13978 = etc;
              s = G__13977;
              xs = G__13978;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__13976 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13976__delegate.call(this, x, y, more)
    };
    G__13976.cljs$lang$maxFixedArity = 2;
    G__13976.cljs$lang$applyTo = function(arglist__13979) {
      var x = cljs.core.first(arglist__13979);
      arglist__13979 = cljs.core.next(arglist__13979);
      var y = cljs.core.first(arglist__13979);
      var more = cljs.core.rest(arglist__13979);
      return G__13976__delegate(x, y, more)
    };
    G__13976.cljs$core$IFn$_invoke$arity$variadic = G__13976__delegate;
    return G__13976
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__13981 = x;
            if(G__13981) {
              var bit__3739__auto__ = G__13981.cljs$lang$protocol_mask$partition1$ & 2048;
              if(bit__3739__auto__ || G__13981.cljs$core$IComparable$) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(d === 0 && n + 1 < len) {
        var G__13982 = xs;
        var G__13983 = ys;
        var G__13984 = len;
        var G__13985 = n + 1;
        xs = G__13982;
        ys = G__13983;
        len = G__13984;
        n = G__13985;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13986 = nval;
          var G__13987 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__13986;
          coll__$1 = G__13987;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__13990 = coll;
      if(G__13990) {
        var bit__3739__auto__ = G__13990.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3739__auto__ || G__13990.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__13991 = coll;
      if(G__13991) {
        var bit__3739__auto__ = G__13991.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3739__auto__ || G__13991.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__13992__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__13992 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13992__delegate.call(this, x, y, more)
    };
    G__13992.cljs$lang$maxFixedArity = 2;
    G__13992.cljs$lang$applyTo = function(arglist__13993) {
      var x = cljs.core.first(arglist__13993);
      arglist__13993 = cljs.core.next(arglist__13993);
      var y = cljs.core.first(arglist__13993);
      var more = cljs.core.rest(arglist__13993);
      return G__13992__delegate(x, y, more)
    };
    G__13992.cljs$core$IFn$_invoke$arity$variadic = G__13992__delegate;
    return G__13992
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__13994__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__13994 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13994__delegate.call(this, x, y, more)
    };
    G__13994.cljs$lang$maxFixedArity = 2;
    G__13994.cljs$lang$applyTo = function(arglist__13995) {
      var x = cljs.core.first(arglist__13995);
      arglist__13995 = cljs.core.next(arglist__13995);
      var y = cljs.core.first(arglist__13995);
      var more = cljs.core.rest(arglist__13995);
      return G__13994__delegate(x, y, more)
    };
    G__13994.cljs$core$IFn$_invoke$arity$variadic = G__13994__delegate;
    return G__13994
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__13996__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__13996 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13996__delegate.call(this, x, y, more)
    };
    G__13996.cljs$lang$maxFixedArity = 2;
    G__13996.cljs$lang$applyTo = function(arglist__13997) {
      var x = cljs.core.first(arglist__13997);
      arglist__13997 = cljs.core.next(arglist__13997);
      var y = cljs.core.first(arglist__13997);
      var more = cljs.core.rest(arglist__13997);
      return G__13996__delegate(x, y, more)
    };
    G__13996.cljs$core$IFn$_invoke$arity$variadic = G__13996__delegate;
    return G__13996
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__13998__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__13998 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13998__delegate.call(this, x, y, more)
    };
    G__13998.cljs$lang$maxFixedArity = 2;
    G__13998.cljs$lang$applyTo = function(arglist__13999) {
      var x = cljs.core.first(arglist__13999);
      arglist__13999 = cljs.core.next(arglist__13999);
      var y = cljs.core.first(arglist__13999);
      var more = cljs.core.rest(arglist__13999);
      return G__13998__delegate(x, y, more)
    };
    G__13998.cljs$core$IFn$_invoke$arity$variadic = G__13998__delegate;
    return G__13998
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__14000__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__14001 = y;
            var G__14002 = cljs.core.first.call(null, more);
            var G__14003 = cljs.core.next.call(null, more);
            x = G__14001;
            y = G__14002;
            more = G__14003;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14000 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14000__delegate.call(this, x, y, more)
    };
    G__14000.cljs$lang$maxFixedArity = 2;
    G__14000.cljs$lang$applyTo = function(arglist__14004) {
      var x = cljs.core.first(arglist__14004);
      arglist__14004 = cljs.core.next(arglist__14004);
      var y = cljs.core.first(arglist__14004);
      var more = cljs.core.rest(arglist__14004);
      return G__14000__delegate(x, y, more)
    };
    G__14000.cljs$core$IFn$_invoke$arity$variadic = G__14000__delegate;
    return G__14000
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__14005__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14006 = y;
            var G__14007 = cljs.core.first.call(null, more);
            var G__14008 = cljs.core.next.call(null, more);
            x = G__14006;
            y = G__14007;
            more = G__14008;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14005 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14005__delegate.call(this, x, y, more)
    };
    G__14005.cljs$lang$maxFixedArity = 2;
    G__14005.cljs$lang$applyTo = function(arglist__14009) {
      var x = cljs.core.first(arglist__14009);
      arglist__14009 = cljs.core.next(arglist__14009);
      var y = cljs.core.first(arglist__14009);
      var more = cljs.core.rest(arglist__14009);
      return G__14005__delegate(x, y, more)
    };
    G__14005.cljs$core$IFn$_invoke$arity$variadic = G__14005__delegate;
    return G__14005
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__14010__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__14011 = y;
            var G__14012 = cljs.core.first.call(null, more);
            var G__14013 = cljs.core.next.call(null, more);
            x = G__14011;
            y = G__14012;
            more = G__14013;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14010 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14010__delegate.call(this, x, y, more)
    };
    G__14010.cljs$lang$maxFixedArity = 2;
    G__14010.cljs$lang$applyTo = function(arglist__14014) {
      var x = cljs.core.first(arglist__14014);
      arglist__14014 = cljs.core.next(arglist__14014);
      var y = cljs.core.first(arglist__14014);
      var more = cljs.core.rest(arglist__14014);
      return G__14010__delegate(x, y, more)
    };
    G__14010.cljs$core$IFn$_invoke$arity$variadic = G__14010__delegate;
    return G__14010
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__14015__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14016 = y;
            var G__14017 = cljs.core.first.call(null, more);
            var G__14018 = cljs.core.next.call(null, more);
            x = G__14016;
            y = G__14017;
            more = G__14018;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14015 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14015__delegate.call(this, x, y, more)
    };
    G__14015.cljs$lang$maxFixedArity = 2;
    G__14015.cljs$lang$applyTo = function(arglist__14019) {
      var x = cljs.core.first(arglist__14019);
      arglist__14019 = cljs.core.next(arglist__14019);
      var y = cljs.core.first(arglist__14019);
      var more = cljs.core.rest(arglist__14019);
      return G__14015__delegate(x, y, more)
    };
    G__14015.cljs$core$IFn$_invoke$arity$variadic = G__14015__delegate;
    return G__14015
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3433__auto__ = x;
    var y__3434__auto__ = y;
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  };
  var max__3 = function() {
    var G__14020__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3433__auto__ = x;
        var y__3434__auto__ = y;
        return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
      }(), more)
    };
    var G__14020 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14020__delegate.call(this, x, y, more)
    };
    G__14020.cljs$lang$maxFixedArity = 2;
    G__14020.cljs$lang$applyTo = function(arglist__14021) {
      var x = cljs.core.first(arglist__14021);
      arglist__14021 = cljs.core.next(arglist__14021);
      var y = cljs.core.first(arglist__14021);
      var more = cljs.core.rest(arglist__14021);
      return G__14020__delegate(x, y, more)
    };
    G__14020.cljs$core$IFn$_invoke$arity$variadic = G__14020__delegate;
    return G__14020
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3440__auto__ = x;
    var y__3441__auto__ = y;
    return x__3440__auto__ < y__3441__auto__ ? x__3440__auto__ : y__3441__auto__
  };
  var min__3 = function() {
    var G__14022__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3440__auto__ = x;
        var y__3441__auto__ = y;
        return x__3440__auto__ < y__3441__auto__ ? x__3440__auto__ : y__3441__auto__
      }(), more)
    };
    var G__14022 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14022__delegate.call(this, x, y, more)
    };
    G__14022.cljs$lang$maxFixedArity = 2;
    G__14022.cljs$lang$applyTo = function(arglist__14023) {
      var x = cljs.core.first(arglist__14023);
      arglist__14023 = cljs.core.next(arglist__14023);
      var y = cljs.core.first(arglist__14023);
      var more = cljs.core.rest(arglist__14023);
      return G__14022__delegate(x, y, more)
    };
    G__14022.cljs$core$IFn$_invoke$arity$variadic = G__14022__delegate;
    return G__14022
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(typeof x === "string" && x.length === 1) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__14024__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__14024 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14024__delegate.call(this, x, y, more)
    };
    G__14024.cljs$lang$maxFixedArity = 2;
    G__14024.cljs$lang$applyTo = function(arglist__14025) {
      var x = cljs.core.first(arglist__14025);
      arglist__14025 = cljs.core.next(arglist__14025);
      var y = cljs.core.first(arglist__14025);
      var more = cljs.core.rest(arglist__14025);
      return G__14024__delegate(x, y, more)
    };
    G__14024.cljs$core$IFn$_invoke$arity$variadic = G__14024__delegate;
    return G__14024
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__14026__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__14026 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14026__delegate.call(this, x, y, more)
    };
    G__14026.cljs$lang$maxFixedArity = 2;
    G__14026.cljs$lang$applyTo = function(arglist__14027) {
      var x = cljs.core.first(arglist__14027);
      arglist__14027 = cljs.core.next(arglist__14027);
      var y = cljs.core.first(arglist__14027);
      var more = cljs.core.rest(arglist__14027);
      return G__14026__delegate(x, y, more)
    };
    G__14026.cljs$core$IFn$_invoke$arity$variadic = G__14026__delegate;
    return G__14026
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__14028__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__14028 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14028__delegate.call(this, x, y, more)
    };
    G__14028.cljs$lang$maxFixedArity = 2;
    G__14028.cljs$lang$applyTo = function(arglist__14029) {
      var x = cljs.core.first(arglist__14029);
      arglist__14029 = cljs.core.next(arglist__14029);
      var y = cljs.core.first(arglist__14029);
      var more = cljs.core.rest(arglist__14029);
      return G__14028__delegate(x, y, more)
    };
    G__14028.cljs$core$IFn$_invoke$arity$variadic = G__14028__delegate;
    return G__14028
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__14030__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__14030 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14030__delegate.call(this, x, y, more)
    };
    G__14030.cljs$lang$maxFixedArity = 2;
    G__14030.cljs$lang$applyTo = function(arglist__14031) {
      var x = cljs.core.first(arglist__14031);
      arglist__14031 = cljs.core.next(arglist__14031);
      var y = cljs.core.first(arglist__14031);
      var more = cljs.core.rest(arglist__14031);
      return G__14030__delegate(x, y, more)
    };
    G__14030.cljs$core$IFn$_invoke$arity$variadic = G__14030__delegate;
    return G__14030
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__14032__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__14032 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14032__delegate.call(this, x, y, more)
    };
    G__14032.cljs$lang$maxFixedArity = 2;
    G__14032.cljs$lang$applyTo = function(arglist__14033) {
      var x = cljs.core.first(arglist__14033);
      arglist__14033 = cljs.core.next(arglist__14033);
      var y = cljs.core.first(arglist__14033);
      var more = cljs.core.rest(arglist__14033);
      return G__14032__delegate(x, y, more)
    };
    G__14032.cljs$core$IFn$_invoke$arity$variadic = G__14032__delegate;
    return G__14032
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__14034__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__14034 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14034__delegate.call(this, x, y, more)
    };
    G__14034.cljs$lang$maxFixedArity = 2;
    G__14034.cljs$lang$applyTo = function(arglist__14035) {
      var x = cljs.core.first(arglist__14035);
      arglist__14035 = cljs.core.next(arglist__14035);
      var y = cljs.core.first(arglist__14035);
      var more = cljs.core.rest(arglist__14035);
      return G__14034__delegate(x, y, more)
    };
    G__14034.cljs$core$IFn$_invoke$arity$variadic = G__14034__delegate;
    return G__14034
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__14036__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__14036 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14036__delegate.call(this, x, y, more)
    };
    G__14036.cljs$lang$maxFixedArity = 2;
    G__14036.cljs$lang$applyTo = function(arglist__14037) {
      var x = cljs.core.first(arglist__14037);
      arglist__14037 = cljs.core.next(arglist__14037);
      var y = cljs.core.first(arglist__14037);
      var more = cljs.core.rest(arglist__14037);
      return G__14036__delegate(x, y, more)
    };
    G__14036.cljs$core$IFn$_invoke$arity$variadic = G__14036__delegate;
    return G__14036
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__14038__delegate = function(x, y, more) {
      while(true) {
        if(_EQ__EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__14039 = y;
            var G__14040 = cljs.core.first.call(null, more);
            var G__14041 = cljs.core.next.call(null, more);
            x = G__14039;
            y = G__14040;
            more = G__14041;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14038 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14038__delegate.call(this, x, y, more)
    };
    G__14038.cljs$lang$maxFixedArity = 2;
    G__14038.cljs$lang$applyTo = function(arglist__14042) {
      var x = cljs.core.first(arglist__14042);
      arglist__14042 = cljs.core.next(arglist__14042);
      var y = cljs.core.first(arglist__14042);
      var more = cljs.core.rest(arglist__14042);
      return G__14038__delegate(x, y, more)
    };
    G__14038.cljs$core$IFn$_invoke$arity$variadic = G__14038__delegate;
    return G__14038
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs && n__$1 > 0) {
      var G__14043 = n__$1 - 1;
      var G__14044 = cljs.core.next.call(null, xs);
      n__$1 = G__14043;
      xs = G__14044;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__14045__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while(true) {
        if(cljs.core.truth_(more)) {
          var G__14046 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__14047 = cljs.core.next.call(null, more);
          sb = G__14046;
          more = G__14047;
          continue
        }else {
          return sb.toString()
        }
        break
      }
    };
    var G__14045 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14045__delegate.call(this, x, ys)
    };
    G__14045.cljs$lang$maxFixedArity = 1;
    G__14045.cljs$lang$applyTo = function(arglist__14048) {
      var x = cljs.core.first(arglist__14048);
      var ys = cljs.core.rest(arglist__14048);
      return G__14045__delegate(x, ys)
    };
    G__14045.cljs$core$IFn$_invoke$arity$variadic = G__14045__delegate;
    return G__14045
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__14049 = cljs.core.next.call(null, xs);
            var G__14050 = cljs.core.next.call(null, ys);
            xs = G__14049;
            ys = G__14050;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  if(cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while(true) {
      if(s == null) {
        return res
      }else {
        var G__14051 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__14052 = cljs.core.next.call(null, s);
        res = G__14051;
        s = G__14052;
        continue
      }
      break
    }
  }else {
    return 0
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__14053 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__14054 = cljs.core.next.call(null, s);
      h = G__14053;
      s = G__14054;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__14055 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__14056 = cljs.core.next.call(null, s__$1);
      h = G__14055;
      s__$1 = G__14056;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__14063_14069 = cljs.core.seq.call(null, fn_map);
  var chunk__14064_14070 = null;
  var count__14065_14071 = 0;
  var i__14066_14072 = 0;
  while(true) {
    if(i__14066_14072 < count__14065_14071) {
      var vec__14067_14073 = cljs.core._nth.call(null, chunk__14064_14070, i__14066_14072);
      var key_name_14074 = cljs.core.nth.call(null, vec__14067_14073, 0, null);
      var f_14075 = cljs.core.nth.call(null, vec__14067_14073, 1, null);
      var str_name_14076 = cljs.core.name.call(null, key_name_14074);
      obj[str_name_14076] = f_14075;
      var G__14077 = seq__14063_14069;
      var G__14078 = chunk__14064_14070;
      var G__14079 = count__14065_14071;
      var G__14080 = i__14066_14072 + 1;
      seq__14063_14069 = G__14077;
      chunk__14064_14070 = G__14078;
      count__14065_14071 = G__14079;
      i__14066_14072 = G__14080;
      continue
    }else {
      var temp__4092__auto___14081 = cljs.core.seq.call(null, seq__14063_14069);
      if(temp__4092__auto___14081) {
        var seq__14063_14082__$1 = temp__4092__auto___14081;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14063_14082__$1)) {
          var c__3844__auto___14083 = cljs.core.chunk_first.call(null, seq__14063_14082__$1);
          var G__14084 = cljs.core.chunk_rest.call(null, seq__14063_14082__$1);
          var G__14085 = c__3844__auto___14083;
          var G__14086 = cljs.core.count.call(null, c__3844__auto___14083);
          var G__14087 = 0;
          seq__14063_14069 = G__14084;
          chunk__14064_14070 = G__14085;
          count__14065_14071 = G__14086;
          i__14066_14072 = G__14087;
          continue
        }else {
          var vec__14068_14088 = cljs.core.first.call(null, seq__14063_14082__$1);
          var key_name_14089 = cljs.core.nth.call(null, vec__14068_14088, 0, null);
          var f_14090 = cljs.core.nth.call(null, vec__14068_14088, 1, null);
          var str_name_14091 = cljs.core.name.call(null, key_name_14089);
          obj[str_name_14091] = f_14090;
          var G__14092 = cljs.core.next.call(null, seq__14063_14082__$1);
          var G__14093 = null;
          var G__14094 = 0;
          var G__14095 = 0;
          seq__14063_14069 = G__14092;
          chunk__14064_14070 = G__14093;
          count__14065_14071 = G__14094;
          i__14066_14072 = G__14095;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__14097 = coll;
  if(G__14097) {
    var bit__3746__auto__ = G__14097.cljs$lang$protocol_mask$partition0$ & 134217728;
    if(bit__3746__auto__ || G__14097.cljs$core$IReversible$) {
      return true
    }else {
      if(!G__14097.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14097)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14097)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__14098 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__14098;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__14099 = i - 1;
        var G__14100 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__14099;
        r = G__14100;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__14101) {
    var xs = cljs.core.seq(arglist__14101);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3128__auto__ = coll == null;
    if(or__3128__auto__) {
      return or__3128__auto__
    }else {
      var G__14105 = coll;
      if(G__14105) {
        var bit__3739__auto__ = G__14105.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__14105.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__14107 = x;
  if(G__14107) {
    var bit__3746__auto__ = G__14107.cljs$lang$protocol_mask$partition0$ & 33554432;
    if(bit__3746__auto__ || G__14107.cljs$core$IList$) {
      return true
    }else {
      if(!G__14107.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14107)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14107)
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14109 = null;
  var G__14109__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw)
  };
  var G__14109__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found)
  };
  G__14109 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14109__2.call(this, self__, coll);
      case 3:
        return G__14109__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14109
}();
cljs.core.Keyword.prototype.apply = function(self__, args14108) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14108.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw)
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found)
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__14110 = ls.sval();
        ls = G__14110;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__14112 = s;
    if(G__14112) {
      var bit__3739__auto__ = G__14112.cljs$lang$protocol_mask$partition1$ & 1024;
      if(bit__3739__auto__ || G__14112.cljs$core$IChunkedNext$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__14113 = cljs.core.next.call(null, s__$1);
      s__$1 = G__14113;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_14114 = 0;
  var xs_14115 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_14115) {
      ret[i_14114] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_14115));
      var G__14116 = i_14114 + 1;
      var G__14117 = cljs.core.next.call(null, xs_14115);
      i_14114 = G__14116;
      xs_14115 = G__14117;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14118 = i + 1;
          var G__14119 = cljs.core.next.call(null, s__$1);
          i = G__14118;
          s__$1 = G__14119;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14120 = size;
      var i_14121 = 0;
      while(true) {
        if(i_14121 < n__3891__auto___14120) {
          a[i_14121] = init_val_or_seq;
          var G__14122 = i_14121 + 1;
          i_14121 = G__14122;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14123 = i + 1;
          var G__14124 = cljs.core.next.call(null, s__$1);
          i = G__14123;
          s__$1 = G__14124;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14125 = size;
      var i_14126 = 0;
      while(true) {
        if(i_14126 < n__3891__auto___14125) {
          a[i_14126] = init_val_or_seq;
          var G__14127 = i_14126 + 1;
          i_14126 = G__14127;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14128 = i + 1;
          var G__14129 = cljs.core.next.call(null, s__$1);
          i = G__14128;
          s__$1 = G__14129;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14130 = size;
      var i_14131 = 0;
      while(true) {
        if(i_14131 < n__3891__auto___14130) {
          a[i_14131] = init_val_or_seq;
          var G__14132 = i_14131 + 1;
          i_14131 = G__14132;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14133 = i + 1;
          var G__14134 = cljs.core.next.call(null, s__$1);
          i = G__14133;
          s__$1 = G__14134;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14135 = size;
      var i_14136 = 0;
      while(true) {
        if(i_14136 < n__3891__auto___14135) {
          a[i_14136] = init_val_or_seq;
          var G__14137 = i_14136 + 1;
          i_14136 = G__14137;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__14138 = cljs.core.next.call(null, s__$1);
        var G__14139 = i - 1;
        var G__14140 = sum + 1;
        s__$1 = G__14138;
        i = G__14139;
        sum = G__14140;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__14141__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__14141 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14141__delegate.call(this, x, y, zs)
    };
    G__14141.cljs$lang$maxFixedArity = 2;
    G__14141.cljs$lang$applyTo = function(arglist__14142) {
      var x = cljs.core.first(arglist__14142);
      arglist__14142 = cljs.core.next(arglist__14142);
      var y = cljs.core.first(arglist__14142);
      var zs = cljs.core.rest(arglist__14142);
      return G__14141__delegate(x, y, zs)
    };
    G__14141.cljs$core$IFn$_invoke$arity$variadic = G__14141__delegate;
    return G__14141
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__14143__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__14143 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14143__delegate.call(this, a, b, c, d, more)
    };
    G__14143.cljs$lang$maxFixedArity = 4;
    G__14143.cljs$lang$applyTo = function(arglist__14144) {
      var a = cljs.core.first(arglist__14144);
      arglist__14144 = cljs.core.next(arglist__14144);
      var b = cljs.core.first(arglist__14144);
      arglist__14144 = cljs.core.next(arglist__14144);
      var c = cljs.core.first(arglist__14144);
      arglist__14144 = cljs.core.next(arglist__14144);
      var d = cljs.core.first(arglist__14144);
      var more = cljs.core.rest(arglist__14144);
      return G__14143__delegate(a, b, c, d, more)
    };
    G__14143.cljs$core$IFn$_invoke$arity$variadic = G__14143__delegate;
    return G__14143
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__14145__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__14145 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14145__delegate.call(this, f, a, b, c, d, args)
    };
    G__14145.cljs$lang$maxFixedArity = 5;
    G__14145.cljs$lang$applyTo = function(arglist__14146) {
      var f = cljs.core.first(arglist__14146);
      arglist__14146 = cljs.core.next(arglist__14146);
      var a = cljs.core.first(arglist__14146);
      arglist__14146 = cljs.core.next(arglist__14146);
      var b = cljs.core.first(arglist__14146);
      arglist__14146 = cljs.core.next(arglist__14146);
      var c = cljs.core.first(arglist__14146);
      arglist__14146 = cljs.core.next(arglist__14146);
      var d = cljs.core.first(arglist__14146);
      var args = cljs.core.rest(arglist__14146);
      return G__14145__delegate(f, a, b, c, d, args)
    };
    G__14145.cljs$core$IFn$_invoke$arity$variadic = G__14145__delegate;
    return G__14145
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__14147) {
    var obj = cljs.core.first(arglist__14147);
    arglist__14147 = cljs.core.next(arglist__14147);
    var f = cljs.core.first(arglist__14147);
    var args = cljs.core.rest(arglist__14147);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__14148__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__14148 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14148__delegate.call(this, x, y, more)
    };
    G__14148.cljs$lang$maxFixedArity = 2;
    G__14148.cljs$lang$applyTo = function(arglist__14149) {
      var x = cljs.core.first(arglist__14149);
      arglist__14149 = cljs.core.next(arglist__14149);
      var y = cljs.core.first(arglist__14149);
      var more = cljs.core.rest(arglist__14149);
      return G__14148__delegate(x, y, more)
    };
    G__14148.cljs$core$IFn$_invoke$arity$variadic = G__14148__delegate;
    return G__14148
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__14150 = pred;
        var G__14151 = cljs.core.next.call(null, coll);
        pred = G__14150;
        coll = G__14151;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3128__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        var G__14152 = pred;
        var G__14153 = cljs.core.next.call(null, coll);
        pred = G__14152;
        coll = G__14153;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__14154 = null;
    var G__14154__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__14154__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__14154__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__14154__3 = function() {
      var G__14155__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__14155 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__14155__delegate.call(this, x, y, zs)
      };
      G__14155.cljs$lang$maxFixedArity = 2;
      G__14155.cljs$lang$applyTo = function(arglist__14156) {
        var x = cljs.core.first(arglist__14156);
        arglist__14156 = cljs.core.next(arglist__14156);
        var y = cljs.core.first(arglist__14156);
        var zs = cljs.core.rest(arglist__14156);
        return G__14155__delegate(x, y, zs)
      };
      G__14155.cljs$core$IFn$_invoke$arity$variadic = G__14155__delegate;
      return G__14155
    }();
    G__14154 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14154__0.call(this);
        case 1:
          return G__14154__1.call(this, x);
        case 2:
          return G__14154__2.call(this, x, y);
        default:
          return G__14154__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14154.cljs$lang$maxFixedArity = 2;
    G__14154.cljs$lang$applyTo = G__14154__3.cljs$lang$applyTo;
    return G__14154
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__14157__delegate = function(args) {
      return x
    };
    var G__14157 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14157__delegate.call(this, args)
    };
    G__14157.cljs$lang$maxFixedArity = 0;
    G__14157.cljs$lang$applyTo = function(arglist__14158) {
      var args = cljs.core.seq(arglist__14158);
      return G__14157__delegate(args)
    };
    G__14157.cljs$core$IFn$_invoke$arity$variadic = G__14157__delegate;
    return G__14157
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__14159 = null;
      var G__14159__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__14159__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__14159__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__14159__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__14159__4 = function() {
        var G__14160__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14160 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14160__delegate.call(this, x, y, z, args)
        };
        G__14160.cljs$lang$maxFixedArity = 3;
        G__14160.cljs$lang$applyTo = function(arglist__14161) {
          var x = cljs.core.first(arglist__14161);
          arglist__14161 = cljs.core.next(arglist__14161);
          var y = cljs.core.first(arglist__14161);
          arglist__14161 = cljs.core.next(arglist__14161);
          var z = cljs.core.first(arglist__14161);
          var args = cljs.core.rest(arglist__14161);
          return G__14160__delegate(x, y, z, args)
        };
        G__14160.cljs$core$IFn$_invoke$arity$variadic = G__14160__delegate;
        return G__14160
      }();
      G__14159 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14159__0.call(this);
          case 1:
            return G__14159__1.call(this, x);
          case 2:
            return G__14159__2.call(this, x, y);
          case 3:
            return G__14159__3.call(this, x, y, z);
          default:
            return G__14159__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14159.cljs$lang$maxFixedArity = 3;
      G__14159.cljs$lang$applyTo = G__14159__4.cljs$lang$applyTo;
      return G__14159
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__14162 = null;
      var G__14162__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__14162__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__14162__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__14162__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__14162__4 = function() {
        var G__14163__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__14163 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14163__delegate.call(this, x, y, z, args)
        };
        G__14163.cljs$lang$maxFixedArity = 3;
        G__14163.cljs$lang$applyTo = function(arglist__14164) {
          var x = cljs.core.first(arglist__14164);
          arglist__14164 = cljs.core.next(arglist__14164);
          var y = cljs.core.first(arglist__14164);
          arglist__14164 = cljs.core.next(arglist__14164);
          var z = cljs.core.first(arglist__14164);
          var args = cljs.core.rest(arglist__14164);
          return G__14163__delegate(x, y, z, args)
        };
        G__14163.cljs$core$IFn$_invoke$arity$variadic = G__14163__delegate;
        return G__14163
      }();
      G__14162 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14162__0.call(this);
          case 1:
            return G__14162__1.call(this, x);
          case 2:
            return G__14162__2.call(this, x, y);
          case 3:
            return G__14162__3.call(this, x, y, z);
          default:
            return G__14162__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14162.cljs$lang$maxFixedArity = 3;
      G__14162.cljs$lang$applyTo = G__14162__4.cljs$lang$applyTo;
      return G__14162
    }()
  };
  var comp__4 = function() {
    var G__14165__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__14166__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__14167 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__14168 = cljs.core.next.call(null, fs__$2);
              ret = G__14167;
              fs__$2 = G__14168;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__14166 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14166__delegate.call(this, args)
        };
        G__14166.cljs$lang$maxFixedArity = 0;
        G__14166.cljs$lang$applyTo = function(arglist__14169) {
          var args = cljs.core.seq(arglist__14169);
          return G__14166__delegate(args)
        };
        G__14166.cljs$core$IFn$_invoke$arity$variadic = G__14166__delegate;
        return G__14166
      }()
    };
    var G__14165 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14165__delegate.call(this, f1, f2, f3, fs)
    };
    G__14165.cljs$lang$maxFixedArity = 3;
    G__14165.cljs$lang$applyTo = function(arglist__14170) {
      var f1 = cljs.core.first(arglist__14170);
      arglist__14170 = cljs.core.next(arglist__14170);
      var f2 = cljs.core.first(arglist__14170);
      arglist__14170 = cljs.core.next(arglist__14170);
      var f3 = cljs.core.first(arglist__14170);
      var fs = cljs.core.rest(arglist__14170);
      return G__14165__delegate(f1, f2, f3, fs)
    };
    G__14165.cljs$core$IFn$_invoke$arity$variadic = G__14165__delegate;
    return G__14165
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__14171__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__14171 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14171__delegate.call(this, args)
      };
      G__14171.cljs$lang$maxFixedArity = 0;
      G__14171.cljs$lang$applyTo = function(arglist__14172) {
        var args = cljs.core.seq(arglist__14172);
        return G__14171__delegate(args)
      };
      G__14171.cljs$core$IFn$_invoke$arity$variadic = G__14171__delegate;
      return G__14171
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__14173__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__14173 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14173__delegate.call(this, args)
      };
      G__14173.cljs$lang$maxFixedArity = 0;
      G__14173.cljs$lang$applyTo = function(arglist__14174) {
        var args = cljs.core.seq(arglist__14174);
        return G__14173__delegate(args)
      };
      G__14173.cljs$core$IFn$_invoke$arity$variadic = G__14173__delegate;
      return G__14173
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__14175__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__14175 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14175__delegate.call(this, args)
      };
      G__14175.cljs$lang$maxFixedArity = 0;
      G__14175.cljs$lang$applyTo = function(arglist__14176) {
        var args = cljs.core.seq(arglist__14176);
        return G__14175__delegate(args)
      };
      G__14175.cljs$core$IFn$_invoke$arity$variadic = G__14175__delegate;
      return G__14175
    }()
  };
  var partial__5 = function() {
    var G__14177__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__14178__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__14178 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14178__delegate.call(this, args)
        };
        G__14178.cljs$lang$maxFixedArity = 0;
        G__14178.cljs$lang$applyTo = function(arglist__14179) {
          var args = cljs.core.seq(arglist__14179);
          return G__14178__delegate(args)
        };
        G__14178.cljs$core$IFn$_invoke$arity$variadic = G__14178__delegate;
        return G__14178
      }()
    };
    var G__14177 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14177__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__14177.cljs$lang$maxFixedArity = 4;
    G__14177.cljs$lang$applyTo = function(arglist__14180) {
      var f = cljs.core.first(arglist__14180);
      arglist__14180 = cljs.core.next(arglist__14180);
      var arg1 = cljs.core.first(arglist__14180);
      arglist__14180 = cljs.core.next(arglist__14180);
      var arg2 = cljs.core.first(arglist__14180);
      arglist__14180 = cljs.core.next(arglist__14180);
      var arg3 = cljs.core.first(arglist__14180);
      var more = cljs.core.rest(arglist__14180);
      return G__14177__delegate(f, arg1, arg2, arg3, more)
    };
    G__14177.cljs$core$IFn$_invoke$arity$variadic = G__14177__delegate;
    return G__14177
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__14181 = null;
      var G__14181__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__14181__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__14181__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__14181__4 = function() {
        var G__14182__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__14182 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14182__delegate.call(this, a, b, c, ds)
        };
        G__14182.cljs$lang$maxFixedArity = 3;
        G__14182.cljs$lang$applyTo = function(arglist__14183) {
          var a = cljs.core.first(arglist__14183);
          arglist__14183 = cljs.core.next(arglist__14183);
          var b = cljs.core.first(arglist__14183);
          arglist__14183 = cljs.core.next(arglist__14183);
          var c = cljs.core.first(arglist__14183);
          var ds = cljs.core.rest(arglist__14183);
          return G__14182__delegate(a, b, c, ds)
        };
        G__14182.cljs$core$IFn$_invoke$arity$variadic = G__14182__delegate;
        return G__14182
      }();
      G__14181 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__14181__1.call(this, a);
          case 2:
            return G__14181__2.call(this, a, b);
          case 3:
            return G__14181__3.call(this, a, b, c);
          default:
            return G__14181__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14181.cljs$lang$maxFixedArity = 3;
      G__14181.cljs$lang$applyTo = G__14181__4.cljs$lang$applyTo;
      return G__14181
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__14184 = null;
      var G__14184__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14184__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__14184__4 = function() {
        var G__14185__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__14185 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14185__delegate.call(this, a, b, c, ds)
        };
        G__14185.cljs$lang$maxFixedArity = 3;
        G__14185.cljs$lang$applyTo = function(arglist__14186) {
          var a = cljs.core.first(arglist__14186);
          arglist__14186 = cljs.core.next(arglist__14186);
          var b = cljs.core.first(arglist__14186);
          arglist__14186 = cljs.core.next(arglist__14186);
          var c = cljs.core.first(arglist__14186);
          var ds = cljs.core.rest(arglist__14186);
          return G__14185__delegate(a, b, c, ds)
        };
        G__14185.cljs$core$IFn$_invoke$arity$variadic = G__14185__delegate;
        return G__14185
      }();
      G__14184 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14184__2.call(this, a, b);
          case 3:
            return G__14184__3.call(this, a, b, c);
          default:
            return G__14184__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14184.cljs$lang$maxFixedArity = 3;
      G__14184.cljs$lang$applyTo = G__14184__4.cljs$lang$applyTo;
      return G__14184
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__14187 = null;
      var G__14187__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14187__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__14187__4 = function() {
        var G__14188__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__14188 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14188__delegate.call(this, a, b, c, ds)
        };
        G__14188.cljs$lang$maxFixedArity = 3;
        G__14188.cljs$lang$applyTo = function(arglist__14189) {
          var a = cljs.core.first(arglist__14189);
          arglist__14189 = cljs.core.next(arglist__14189);
          var b = cljs.core.first(arglist__14189);
          arglist__14189 = cljs.core.next(arglist__14189);
          var c = cljs.core.first(arglist__14189);
          var ds = cljs.core.rest(arglist__14189);
          return G__14188__delegate(a, b, c, ds)
        };
        G__14188.cljs$core$IFn$_invoke$arity$variadic = G__14188__delegate;
        return G__14188
      }();
      G__14187 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14187__2.call(this, a, b);
          case 3:
            return G__14187__3.call(this, a, b, c);
          default:
            return G__14187__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14187.cljs$lang$maxFixedArity = 3;
      G__14187.cljs$lang$applyTo = G__14187__4.cljs$lang$applyTo;
      return G__14187
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14190 = size;
          var i_14191 = 0;
          while(true) {
            if(i_14191 < n__3891__auto___14190) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_14191, cljs.core._nth.call(null, c, i_14191)));
              var G__14192 = i_14191 + 1;
              i_14191 = G__14192;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3891__auto___14193 = size;
        var i_14194 = 0;
        while(true) {
          if(i_14194 < n__3891__auto___14193) {
            var x_14195 = f.call(null, cljs.core._nth.call(null, c, i_14194));
            if(x_14195 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_14195)
            }
            var G__14196 = i_14194 + 1;
            i_14194 = G__14196;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14197 = size;
          var i_14198 = 0;
          while(true) {
            if(i_14198 < n__3891__auto___14197) {
              var x_14199 = f.call(null, idx + i_14198, cljs.core._nth.call(null, c, i_14198));
              if(x_14199 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_14199)
              }
              var G__14200 = i_14198 + 1;
              i_14198 = G__14200;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            return p.call(null, y)
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__14207__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14207 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14207__delegate.call(this, x, y, z, args)
        };
        G__14207.cljs$lang$maxFixedArity = 3;
        G__14207.cljs$lang$applyTo = function(arglist__14208) {
          var x = cljs.core.first(arglist__14208);
          arglist__14208 = cljs.core.next(arglist__14208);
          var y = cljs.core.first(arglist__14208);
          arglist__14208 = cljs.core.next(arglist__14208);
          var z = cljs.core.first(arglist__14208);
          var args = cljs.core.rest(arglist__14208);
          return G__14207__delegate(x, y, z, args)
        };
        G__14207.cljs$core$IFn$_invoke$arity$variadic = G__14207__delegate;
        return G__14207
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__14209__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__14201_SHARP_) {
                var and__3119__auto____$1 = p1.call(null, p1__14201_SHARP_);
                if(cljs.core.truth_(and__3119__auto____$1)) {
                  return p2.call(null, p1__14201_SHARP_)
                }else {
                  return and__3119__auto____$1
                }
              }, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14209 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14209__delegate.call(this, x, y, z, args)
        };
        G__14209.cljs$lang$maxFixedArity = 3;
        G__14209.cljs$lang$applyTo = function(arglist__14210) {
          var x = cljs.core.first(arglist__14210);
          arglist__14210 = cljs.core.next(arglist__14210);
          var y = cljs.core.first(arglist__14210);
          arglist__14210 = cljs.core.next(arglist__14210);
          var z = cljs.core.first(arglist__14210);
          var args = cljs.core.rest(arglist__14210);
          return G__14209__delegate(x, y, z, args)
        };
        G__14209.cljs$core$IFn$_invoke$arity$variadic = G__14209__delegate;
        return G__14209
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    var and__3119__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3119__auto____$5)) {
                      var and__3119__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3119__auto____$6)) {
                        var and__3119__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3119__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3119__auto____$7
                        }
                      }else {
                        return and__3119__auto____$6
                      }
                    }else {
                      return and__3119__auto____$5
                    }
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__14211__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__14202_SHARP_) {
                var and__3119__auto____$1 = p1.call(null, p1__14202_SHARP_);
                if(cljs.core.truth_(and__3119__auto____$1)) {
                  var and__3119__auto____$2 = p2.call(null, p1__14202_SHARP_);
                  if(cljs.core.truth_(and__3119__auto____$2)) {
                    return p3.call(null, p1__14202_SHARP_)
                  }else {
                    return and__3119__auto____$2
                  }
                }else {
                  return and__3119__auto____$1
                }
              }, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14211 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14211__delegate.call(this, x, y, z, args)
        };
        G__14211.cljs$lang$maxFixedArity = 3;
        G__14211.cljs$lang$applyTo = function(arglist__14212) {
          var x = cljs.core.first(arglist__14212);
          arglist__14212 = cljs.core.next(arglist__14212);
          var y = cljs.core.first(arglist__14212);
          arglist__14212 = cljs.core.next(arglist__14212);
          var z = cljs.core.first(arglist__14212);
          var args = cljs.core.rest(arglist__14212);
          return G__14211__delegate(x, y, z, args)
        };
        G__14211.cljs$core$IFn$_invoke$arity$variadic = G__14211__delegate;
        return G__14211
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__14213__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__14203_SHARP_) {
            return p1__14203_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__14204_SHARP_) {
            var and__3119__auto__ = p1__14204_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3119__auto__)) {
              return p1__14204_SHARP_.call(null, y)
            }else {
              return and__3119__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__14205_SHARP_) {
            var and__3119__auto__ = p1__14205_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3119__auto__)) {
              var and__3119__auto____$1 = p1__14205_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3119__auto____$1)) {
                return p1__14205_SHARP_.call(null, z)
              }else {
                return and__3119__auto____$1
              }
            }else {
              return and__3119__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__14214__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3119__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3119__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__14206_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__14206_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3119__auto__
              }
            }())
          };
          var G__14214 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14214__delegate.call(this, x, y, z, args)
          };
          G__14214.cljs$lang$maxFixedArity = 3;
          G__14214.cljs$lang$applyTo = function(arglist__14215) {
            var x = cljs.core.first(arglist__14215);
            arglist__14215 = cljs.core.next(arglist__14215);
            var y = cljs.core.first(arglist__14215);
            arglist__14215 = cljs.core.next(arglist__14215);
            var z = cljs.core.first(arglist__14215);
            var args = cljs.core.rest(arglist__14215);
            return G__14214__delegate(x, y, z, args)
          };
          G__14214.cljs$core$IFn$_invoke$arity$variadic = G__14214__delegate;
          return G__14214
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__14213 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14213__delegate.call(this, p1, p2, p3, ps)
    };
    G__14213.cljs$lang$maxFixedArity = 3;
    G__14213.cljs$lang$applyTo = function(arglist__14216) {
      var p1 = cljs.core.first(arglist__14216);
      arglist__14216 = cljs.core.next(arglist__14216);
      var p2 = cljs.core.first(arglist__14216);
      arglist__14216 = cljs.core.next(arglist__14216);
      var p3 = cljs.core.first(arglist__14216);
      var ps = cljs.core.rest(arglist__14216);
      return G__14213__delegate(p1, p2, p3, ps)
    };
    G__14213.cljs$core$IFn$_invoke$arity$variadic = G__14213__delegate;
    return G__14213
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3128__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3128__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__14223__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__14223 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14223__delegate.call(this, x, y, z, args)
        };
        G__14223.cljs$lang$maxFixedArity = 3;
        G__14223.cljs$lang$applyTo = function(arglist__14224) {
          var x = cljs.core.first(arglist__14224);
          arglist__14224 = cljs.core.next(arglist__14224);
          var y = cljs.core.first(arglist__14224);
          arglist__14224 = cljs.core.next(arglist__14224);
          var z = cljs.core.first(arglist__14224);
          var args = cljs.core.rest(arglist__14224);
          return G__14223__delegate(x, y, z, args)
        };
        G__14223.cljs$core$IFn$_invoke$arity$variadic = G__14223__delegate;
        return G__14223
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14225__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14217_SHARP_) {
              var or__3128__auto____$1 = p1.call(null, p1__14217_SHARP_);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                return p2.call(null, p1__14217_SHARP_)
              }
            }, args)
          }
        };
        var G__14225 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14225__delegate.call(this, x, y, z, args)
        };
        G__14225.cljs$lang$maxFixedArity = 3;
        G__14225.cljs$lang$applyTo = function(arglist__14226) {
          var x = cljs.core.first(arglist__14226);
          arglist__14226 = cljs.core.next(arglist__14226);
          var y = cljs.core.first(arglist__14226);
          arglist__14226 = cljs.core.next(arglist__14226);
          var z = cljs.core.first(arglist__14226);
          var args = cljs.core.rest(arglist__14226);
          return G__14225__delegate(x, y, z, args)
        };
        G__14225.cljs$core$IFn$_invoke$arity$variadic = G__14225__delegate;
        return G__14225
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  var or__3128__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3128__auto____$5)) {
                    return or__3128__auto____$5
                  }else {
                    var or__3128__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3128__auto____$6)) {
                      return or__3128__auto____$6
                    }else {
                      var or__3128__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3128__auto____$7)) {
                        return or__3128__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14227__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14218_SHARP_) {
              var or__3128__auto____$1 = p1.call(null, p1__14218_SHARP_);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                var or__3128__auto____$2 = p2.call(null, p1__14218_SHARP_);
                if(cljs.core.truth_(or__3128__auto____$2)) {
                  return or__3128__auto____$2
                }else {
                  return p3.call(null, p1__14218_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__14227 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14227__delegate.call(this, x, y, z, args)
        };
        G__14227.cljs$lang$maxFixedArity = 3;
        G__14227.cljs$lang$applyTo = function(arglist__14228) {
          var x = cljs.core.first(arglist__14228);
          arglist__14228 = cljs.core.next(arglist__14228);
          var y = cljs.core.first(arglist__14228);
          arglist__14228 = cljs.core.next(arglist__14228);
          var z = cljs.core.first(arglist__14228);
          var args = cljs.core.rest(arglist__14228);
          return G__14227__delegate(x, y, z, args)
        };
        G__14227.cljs$core$IFn$_invoke$arity$variadic = G__14227__delegate;
        return G__14227
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__14229__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__14219_SHARP_) {
            return p1__14219_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__14220_SHARP_) {
            var or__3128__auto__ = p1__14220_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return p1__14220_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__14221_SHARP_) {
            var or__3128__auto__ = p1__14221_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              var or__3128__auto____$1 = p1__14221_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                return p1__14221_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__14230__delegate = function(x, y, z, args) {
            var or__3128__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return cljs.core.some.call(null, function(p1__14222_SHARP_) {
                return cljs.core.some.call(null, p1__14222_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__14230 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14230__delegate.call(this, x, y, z, args)
          };
          G__14230.cljs$lang$maxFixedArity = 3;
          G__14230.cljs$lang$applyTo = function(arglist__14231) {
            var x = cljs.core.first(arglist__14231);
            arglist__14231 = cljs.core.next(arglist__14231);
            var y = cljs.core.first(arglist__14231);
            arglist__14231 = cljs.core.next(arglist__14231);
            var z = cljs.core.first(arglist__14231);
            var args = cljs.core.rest(arglist__14231);
            return G__14230__delegate(x, y, z, args)
          };
          G__14230.cljs$core$IFn$_invoke$arity$variadic = G__14230__delegate;
          return G__14230
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__14229 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14229__delegate.call(this, p1, p2, p3, ps)
    };
    G__14229.cljs$lang$maxFixedArity = 3;
    G__14229.cljs$lang$applyTo = function(arglist__14232) {
      var p1 = cljs.core.first(arglist__14232);
      arglist__14232 = cljs.core.next(arglist__14232);
      var p2 = cljs.core.first(arglist__14232);
      arglist__14232 = cljs.core.next(arglist__14232);
      var p3 = cljs.core.first(arglist__14232);
      var ps = cljs.core.rest(arglist__14232);
      return G__14229__delegate(p1, p2, p3, ps)
    };
    G__14229.cljs$core$IFn$_invoke$arity$variadic = G__14229__delegate;
    return G__14229
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14234 = size;
          var i_14235 = 0;
          while(true) {
            if(i_14235 < n__3891__auto___14234) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_14235)));
              var G__14236 = i_14235 + 1;
              i_14235 = G__14236;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__14237__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__14233_SHARP_) {
        return cljs.core.apply.call(null, f, p1__14233_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__14237 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14237__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14237.cljs$lang$maxFixedArity = 4;
    G__14237.cljs$lang$applyTo = function(arglist__14238) {
      var f = cljs.core.first(arglist__14238);
      arglist__14238 = cljs.core.next(arglist__14238);
      var c1 = cljs.core.first(arglist__14238);
      arglist__14238 = cljs.core.next(arglist__14238);
      var c2 = cljs.core.first(arglist__14238);
      arglist__14238 = cljs.core.next(arglist__14238);
      var c3 = cljs.core.first(arglist__14238);
      var colls = cljs.core.rest(arglist__14238);
      return G__14237__delegate(f, c1, c2, c3, colls)
    };
    G__14237.cljs$core$IFn$_invoke$arity$variadic = G__14237__delegate;
    return G__14237
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(n__$1 > 0 && s) {
        var G__14239 = n__$1 - 1;
        var G__14240 = cljs.core.rest.call(null, s);
        n__$1 = G__14239;
        coll__$1 = G__14240;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__14241 = cljs.core.next.call(null, s);
      var G__14242 = cljs.core.next.call(null, lead);
      s = G__14241;
      lead = G__14242;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = s;
        if(and__3119__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3119__auto__
        }
      }())) {
        var G__14243 = pred__$1;
        var G__14244 = cljs.core.rest.call(null, s);
        pred__$1 = G__14243;
        coll__$1 = G__14244;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__14245__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__14245 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14245__delegate.call(this, c1, c2, colls)
    };
    G__14245.cljs$lang$maxFixedArity = 2;
    G__14245.cljs$lang$applyTo = function(arglist__14246) {
      var c1 = cljs.core.first(arglist__14246);
      arglist__14246 = cljs.core.next(arglist__14246);
      var c2 = cljs.core.first(arglist__14246);
      var colls = cljs.core.rest(arglist__14246);
      return G__14245__delegate(c1, c2, colls)
    };
    G__14245.cljs$core$IFn$_invoke$arity$variadic = G__14245__delegate;
    return G__14245
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__14247__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__14247 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14247__delegate.call(this, f, coll, colls)
    };
    G__14247.cljs$lang$maxFixedArity = 2;
    G__14247.cljs$lang$applyTo = function(arglist__14248) {
      var f = cljs.core.first(arglist__14248);
      arglist__14248 = cljs.core.next(arglist__14248);
      var coll = cljs.core.first(arglist__14248);
      var colls = cljs.core.rest(arglist__14248);
      return G__14247__delegate(f, coll, colls)
    };
    G__14247.cljs$core$IFn$_invoke$arity$variadic = G__14247__delegate;
    return G__14247
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3891__auto___14249 = size;
        var i_14250 = 0;
        while(true) {
          if(i_14250 < n__3891__auto___14249) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_14250)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_14250))
            }else {
            }
            var G__14251 = i_14250 + 1;
            i_14250 = G__14251;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__14252_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__14252_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__14254 = to;
      if(G__14254) {
        var bit__3739__auto__ = G__14254.cljs$lang$protocol_mask$partition1$ & 4;
        if(bit__3739__auto__ || G__14254.cljs$core$IEditableCollection$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__14255__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__14255 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14255__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14255.cljs$lang$maxFixedArity = 4;
    G__14255.cljs$lang$applyTo = function(arglist__14256) {
      var f = cljs.core.first(arglist__14256);
      arglist__14256 = cljs.core.next(arglist__14256);
      var c1 = cljs.core.first(arglist__14256);
      arglist__14256 = cljs.core.next(arglist__14256);
      var c2 = cljs.core.first(arglist__14256);
      arglist__14256 = cljs.core.next(arglist__14256);
      var c3 = cljs.core.first(arglist__14256);
      var colls = cljs.core.rest(arglist__14256);
      return G__14255__delegate(f, c1, c2, c3, colls)
    };
    G__14255.cljs$core$IFn$_invoke$arity$variadic = G__14255__delegate;
    return G__14255
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__14258 = m__$1;
          if(G__14258) {
            var bit__3746__auto__ = G__14258.cljs$lang$protocol_mask$partition0$ & 256;
            if(bit__3746__auto__ || G__14258.cljs$core$ILookup$) {
              return true
            }else {
              if(!G__14258.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14258)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14258)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__14259 = sentinel;
            var G__14260 = m__$2;
            var G__14261 = cljs.core.next.call(null, ks__$1);
            sentinel = G__14259;
            m__$1 = G__14260;
            ks__$1 = G__14261;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__14262, v) {
  var vec__14264 = p__14262;
  var k = cljs.core.nth.call(null, vec__14264, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14264, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14265, f) {
    var vec__14275 = p__14265;
    var k = cljs.core.nth.call(null, vec__14275, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14275, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__14266, f, a) {
    var vec__14276 = p__14266;
    var k = cljs.core.nth.call(null, vec__14276, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14276, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__14267, f, a, b) {
    var vec__14277 = p__14267;
    var k = cljs.core.nth.call(null, vec__14277, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14277, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__14268, f, a, b, c) {
    var vec__14278 = p__14268;
    var k = cljs.core.nth.call(null, vec__14278, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14278, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__14280__delegate = function(m, p__14269, f, a, b, c, args) {
      var vec__14279 = p__14269;
      var k = cljs.core.nth.call(null, vec__14279, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__14279, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__14280 = function(m, p__14269, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__14280__delegate.call(this, m, p__14269, f, a, b, c, args)
    };
    G__14280.cljs$lang$maxFixedArity = 6;
    G__14280.cljs$lang$applyTo = function(arglist__14281) {
      var m = cljs.core.first(arglist__14281);
      arglist__14281 = cljs.core.next(arglist__14281);
      var p__14269 = cljs.core.first(arglist__14281);
      arglist__14281 = cljs.core.next(arglist__14281);
      var f = cljs.core.first(arglist__14281);
      arglist__14281 = cljs.core.next(arglist__14281);
      var a = cljs.core.first(arglist__14281);
      arglist__14281 = cljs.core.next(arglist__14281);
      var b = cljs.core.first(arglist__14281);
      arglist__14281 = cljs.core.next(arglist__14281);
      var c = cljs.core.first(arglist__14281);
      var args = cljs.core.rest(arglist__14281);
      return G__14280__delegate(m, p__14269, f, a, b, c, args)
    };
    G__14280.cljs$core$IFn$_invoke$arity$variadic = G__14280__delegate;
    return G__14280
  }();
  update_in = function(m, p__14269, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14269, f);
      case 4:
        return update_in__4.call(this, m, p__14269, f, a);
      case 5:
        return update_in__5.call(this, m, p__14269, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14269, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14269, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__14282 = ll - 5;
      var G__14283 = r;
      ll = G__14282;
      ret = G__14283;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(0 <= i && i < pv.cnt) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__14284 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__14285 = level - 5;
          node = G__14284;
          level = G__14285;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= k && k < self__.cnt) {
    if(cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14287 = null;
  var G__14287__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14287__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14287 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14287__2.call(this, self__, k);
      case 3:
        return G__14287__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14287
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14286) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14286.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__14288 = j + 1;
              var G__14289 = init__$2;
              j = G__14288;
              init__$1 = G__14289;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__14290 = i + step_init[0];
        i = G__14290;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__14291 = i + 1;
        var G__14292 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__14291;
        out = G__14292;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14293) {
    var args = cljs.core.seq(arglist__14293);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_next.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_rest.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3433__auto__ = self__.end;
    var y__3434__auto__ = v_pos + 1;
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__14295 = null;
  var G__14295__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14295__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14295 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14295__2.call(this, self__, k);
      case 3:
        return G__14295__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14295
}();
cljs.core.Subvec.prototype.apply = function(self__, args14294) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14294.slice()))
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__14296 = meta;
      var G__14297 = v.v;
      var G__14298 = v.start + start;
      var G__14299 = v.start + end;
      var G__14300 = __hash;
      meta = G__14296;
      v = G__14297;
      start = G__14298;
      end = G__14299;
      __hash = G__14300;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(0 <= i && i < tv.cnt) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__14301 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__14302 = level - 5;
          node = G__14301;
          level = G__14302;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14304 = null;
  var G__14304__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14304__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14304 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14304__2.call(this, self__, k);
      case 3:
        return G__14304__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14304
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14303) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14303.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(0 <= n && n < self__.cnt) {
      if(cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1
      }
    }else {
      if(n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3128__auto__ = self__.rear;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3128__auto__ = self__.front;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll__$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__14305 = i + incr;
        i = G__14305;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__14306 = i + 1;
      var G__14307 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__14306;
      out = G__14307;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_14308 = 0;
  while(true) {
    if(i_14308 < l) {
      var k_14309 = ks[i_14308];
      new_obj[k_14309] = obj[k_14309];
      var G__14310 = i_14308 + 1;
      i_14308 = G__14310;
      continue
    }else {
    }
    break
  }
  return new_obj
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll__$1))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k)) {
    if(self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14313 = null;
  var G__14313__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14313__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14313 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14313__2.call(this, self__, k);
      case 3:
        return G__14313__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14313
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14312) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14312.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14314 = cljs.core.rest.call(null, keys__$1);
        var G__14315 = init__$2;
        keys__$1 = G__14314;
        init__$1 = G__14315;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__14311_SHARP_) {
      return cljs.core.vector.call(null, p1__14311_SHARP_, self__.strobj[p1__14311_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll__$1
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14316 = i + 2;
          i = G__14316;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14317 = i + 2;
          i = G__14317;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14318 = i + 2;
          i = G__14318;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14319 = i + 2;
          i = G__14319;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14320 = i + 2;
          i = G__14320;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14321 = 0;
  while(true) {
    if(i_14321 < l) {
      narr[i_14321] = arr[i_14321];
      var G__14322 = i_14321 + 1;
      i_14321 = G__14322;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__14324 = self__.arr.slice();
          G__14324[idx + 1] = v;
          return G__14324
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14325 = null;
  var G__14325__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14325__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14325 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14325__2.call(this, self__, k);
      case 3:
        return G__14325__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14325
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14323) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14323.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14326 = i + 2;
        var G__14327 = init__$2;
        i = G__14326;
        init__$1 = G__14327;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__14328 = s + 2;
            var G__14329 = d;
            s = G__14328;
            d = G__14329;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__14330 = s + 2;
              var G__14331 = d + 2;
              s = G__14330;
              d = G__14331;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll__$1
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14332_14334 = self__.arr;
      G__14332_14334.pop();
      G__14332_14334.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll__$1
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll__$1
      }else {
        self__.arr[idx + 1] = val;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__14333 = o;
      if(G__14333) {
        var bit__3746__auto__ = G__14333.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3746__auto__ || G__14333.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__14333.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14333)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14333)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__14335 = cljs.core.next.call(null, es);
          var G__14336 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__14335;
          tcoll__$2 = G__14336;
          continue
        }else {
          return tcoll__$2
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__14337 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__14338 = i + 2;
      out = G__14337;
      i = G__14338;
      continue
    }else {
      return out
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14341 = arr.slice();
    G__14341[i] = a;
    return G__14341
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14342 = arr.slice();
    G__14342[i] = a;
    G__14342[j] = b;
    return G__14342
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14343 = i + 2;
        var G__14344 = init__$2;
        i = G__14343;
        init__$1 = G__14344;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14345 = 0;
        var j_14346 = 0;
        while(true) {
          if(i_14345 < 32) {
            if((self__.bitmap >>> i_14345 & 1) === 0) {
              var G__14347 = i_14345 + 1;
              var G__14348 = j_14346;
              i_14345 = G__14347;
              j_14346 = G__14348;
              continue
            }else {
              nodes[i_14345] = !(self__.arr[j_14346] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_14346]), self__.arr[j_14346], self__.arr[j_14346 + 1], added_leaf_QMARK_) : self__.arr[j_14346 + 1];
              var G__14349 = i_14345 + 1;
              var G__14350 = j_14346 + 2;
              i_14345 = G__14349;
              j_14346 = G__14350;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14351 = 0;
      var j_14352 = 0;
      while(true) {
        if(i_14351 < 32) {
          if((self__.bitmap >>> i_14351 & 1) === 0) {
            var G__14353 = i_14351 + 1;
            var G__14354 = j_14352;
            i_14351 = G__14353;
            j_14352 = G__14354;
            continue
          }else {
            nodes[i_14351] = !(self__.arr[j_14352] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_14352]), self__.arr[j_14352], self__.arr[j_14352 + 1], added_leaf_QMARK_) : self__.arr[j_14352 + 1];
            var G__14355 = i_14351 + 1;
            var G__14356 = j_14352 + 2;
            i_14351 = G__14355;
            j_14352 = G__14356;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__14357 = i + 1;
        var G__14358 = j + 2;
        var G__14359 = bitmap | 1 << i;
        i = G__14357;
        j = G__14358;
        bitmap = G__14359;
        continue
      }else {
        var G__14360 = i + 1;
        var G__14361 = j;
        var G__14362 = bitmap;
        i = G__14360;
        j = G__14361;
        bitmap = G__14362;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__14363 = i + 1;
          var G__14364 = init__$2;
          i = G__14363;
          init__$1 = G__14364;
          continue
        }
      }else {
        var G__14365 = i + 1;
        var G__14366 = init__$1;
        i = G__14365;
        init__$1 = G__14366;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__14367 = i + 2;
        i = G__14367;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__14368 = j + 2;
                j = G__14368;
                continue
              }
            }else {
              var G__14369 = j + 2;
              j = G__14369;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__14370 = j + 1;
              j = G__14370;
              continue
            }
          }else {
            var G__14371 = j + 1;
            j = G__14371;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14373 = null;
  var G__14373__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14373__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14373 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14373__2.call(this, self__, k);
      case 3:
        return G__14373__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14373
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args14372) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14372.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll__$1
    }
  }else {
    if(self__.root == null) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll__$1
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__14374 = i + 1;
      var G__14375 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__14374;
      out = G__14375;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__14376 = o;
      if(G__14376) {
        var bit__3746__auto__ = G__14376.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3746__auto__ || G__14376.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__14376.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14376)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14376)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__14377 = cljs.core.next.call(null, es);
          var G__14378 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__14377;
          tcoll__$1 = G__14378;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__14379 = ascending_QMARK_ ? t.left : t.right;
      var G__14380 = cljs.core.conj.call(null, stack__$1, t);
      t = G__14379;
      stack__$1 = G__14380;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14382 = null;
  var G__14382__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14382__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14382 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14382__2.call(this, self__, k);
      case 3:
        return G__14382__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14382
}();
cljs.core.BlackNode.prototype.apply = function(self__, args14381) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14381.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__14384 = null;
  var G__14384__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14384__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14384 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14384__2.call(this, self__, k);
      case 3:
        return G__14384__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14384
}();
cljs.core.RedNode.prototype.apply = function(self__, args14383) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14383.slice()))
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(!(del == null) || !(found[0] == null)) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(!(del == null) || !(found[0] == null)) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14386 = null;
  var G__14386__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14386__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14386 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14386__2.call(this, self__, k);
      case 3:
        return G__14386__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14386
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args14385) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14385.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__14387 = t.left;
          t = G__14387;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__14388 = t.right;
            t = G__14388;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__14389 = cljs.core.conj.call(null, stack, t);
              var G__14390 = t.left;
              stack = G__14389;
              t = G__14390;
              continue
            }else {
              var G__14391 = stack;
              var G__14392 = t.right;
              stack = G__14391;
              t = G__14392;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__14393 = cljs.core.conj.call(null, stack, t);
                var G__14394 = t.right;
                stack = G__14393;
                t = G__14394;
                continue
              }else {
                var G__14395 = stack;
                var G__14396 = t.left;
                stack = G__14395;
                t = G__14396;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__14397 = cljs.core.nnext.call(null, in$);
        var G__14398 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14397;
        out = G__14398;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14399) {
    var keyvals = cljs.core.seq(arglist__14399);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14400) {
    var keyvals = cljs.core.seq(arglist__14400);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__14401 = cljs.core.nnext.call(null, kvs);
        kvs = G__14401;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14402) {
    var keyvals = cljs.core.seq(arglist__14402);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__14403 = cljs.core.nnext.call(null, in$);
        var G__14404 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14403;
        out = G__14404;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14405) {
    var keyvals = cljs.core.seq(arglist__14405);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__14406 = cljs.core.nnext.call(null, in$);
        var G__14407 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14406;
        out = G__14407;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14408) {
    var comparator = cljs.core.first(arglist__14408);
    var keyvals = cljs.core.rest(arglist__14408);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14409 = self__.mseq;
    if(G__14409) {
      var bit__3746__auto__ = G__14409.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14409.cljs$core$INext$) {
        return true
      }else {
        if(!G__14409.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14409)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14409)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14410 = self__.mseq;
    if(G__14410) {
      var bit__3746__auto__ = G__14410.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14410.cljs$core$INext$) {
        return true
      }else {
        if(!G__14410.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14410)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14410)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14411 = self__.mseq;
    if(G__14411) {
      var bit__3746__auto__ = G__14411.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14411.cljs$core$INext$) {
        return true
      }else {
        if(!G__14411.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14411)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14411)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14412 = self__.mseq;
    if(G__14412) {
      var bit__3746__auto__ = G__14412.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14412.cljs$core$INext$) {
        return true
      }else {
        if(!G__14412.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14412)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14412)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__14413_SHARP_, p2__14414_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3128__auto__ = p1__14413_SHARP_;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__14414_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14415) {
    var maps = cljs.core.seq(arglist__14415);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3128__auto__ = m1;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14416) {
    var f = cljs.core.first(arglist__14416);
    var maps = cljs.core.rest(arglist__14416);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__14417 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__14418 = cljs.core.next.call(null, keys);
      ret = G__14417;
      keys = G__14418;
      continue
    }else {
      return ret
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14421 = null;
  var G__14421__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14421__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14421 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14421__2.call(this, self__, k);
      case 3:
        return G__14421__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14421
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14420) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14420.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__14419_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__14419_SHARP_)
  }, other)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__14422 = i + 2;
        var G__14423 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__14422;
        out = G__14423;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14425 = null;
  var G__14425__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__14425__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__14425 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14425__2.call(this, self__, k);
      case 3:
        return G__14425__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14425
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14424) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14424.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14428 = null;
  var G__14428__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14428__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14428 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14428__2.call(this, self__, k);
      case 3:
        return G__14428__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14428
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14427) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14427.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
  }else {
    return null
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__14426_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__14426_SHARP_)
  }, other)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3885__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3885__auto__.length) {
        var G__14429 = i + 1;
        var G__14430 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__14429;
        res = G__14430;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__14431 = cljs.core._next.call(null, in$__$1);
            var G__14432 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__14431;
            out = G__14432;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__14433__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__14433 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14433__delegate.call(this, keys)
    };
    G__14433.cljs$lang$maxFixedArity = 0;
    G__14433.cljs$lang$applyTo = function(arglist__14434) {
      var keys = cljs.core.seq(arglist__14434);
      return G__14433__delegate(keys)
    };
    G__14433.cljs$core$IFn$_invoke$arity$variadic = G__14433__delegate;
    return G__14433
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14435) {
    var keys = cljs.core.seq(arglist__14435);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14436) {
    var comparator = cljs.core.first(arglist__14436);
    var keys = cljs.core.rest(arglist__14436);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__14437_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__14437_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__14437_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__14444, seen__$1) {
        while(true) {
          var vec__14445 = p__14444;
          var f = cljs.core.nth.call(null, vec__14445, 0, null);
          var xs__$1 = vec__14445;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__14446 = cljs.core.rest.call(null, s);
              var G__14447 = seen__$1;
              p__14444 = G__14446;
              seen__$1 = G__14447;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__14448 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__14449 = cljs.core.next.call(null, s__$1);
      ret = G__14448;
      s__$1 = G__14449;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__14451 = x;
    if(G__14451) {
      var bit__3739__auto__ = G__14451.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3739__auto__ || G__14451.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__14453 = x;
    if(G__14453) {
      var bit__3739__auto__ = G__14453.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3739__auto__ || G__14453.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(ks && vs) {
      var G__14454 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__14455 = cljs.core.next.call(null, ks);
      var G__14456 = cljs.core.next.call(null, vs);
      map = G__14454;
      ks = G__14455;
      vs = G__14456;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__14459__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14457_SHARP_, p2__14458_SHARP_) {
        return max_key.call(null, k, p1__14457_SHARP_, p2__14458_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__14459 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14459__delegate.call(this, k, x, y, more)
    };
    G__14459.cljs$lang$maxFixedArity = 3;
    G__14459.cljs$lang$applyTo = function(arglist__14460) {
      var k = cljs.core.first(arglist__14460);
      arglist__14460 = cljs.core.next(arglist__14460);
      var x = cljs.core.first(arglist__14460);
      arglist__14460 = cljs.core.next(arglist__14460);
      var y = cljs.core.first(arglist__14460);
      var more = cljs.core.rest(arglist__14460);
      return G__14459__delegate(k, x, y, more)
    };
    G__14459.cljs$core$IFn$_invoke$arity$variadic = G__14459__delegate;
    return G__14459
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__14463__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14461_SHARP_, p2__14462_SHARP_) {
        return min_key.call(null, k, p1__14461_SHARP_, p2__14462_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__14463 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14463__delegate.call(this, k, x, y, more)
    };
    G__14463.cljs$lang$maxFixedArity = 3;
    G__14463.cljs$lang$applyTo = function(arglist__14464) {
      var k = cljs.core.first(arglist__14464);
      arglist__14464 = cljs.core.next(arglist__14464);
      var x = cljs.core.first(arglist__14464);
      arglist__14464 = cljs.core.next(arglist__14464);
      var y = cljs.core.first(arglist__14464);
      var more = cljs.core.rest(arglist__14464);
      return G__14463__delegate(k, x, y, more)
    };
    G__14463.cljs$core$IFn$_invoke$arity$variadic = G__14463__delegate;
    return G__14463
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__14467 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__14467, 0, null);
        var s = vec__14467;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__14468 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__14468, 0, null);
      var s = vec__14468;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__14471 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__14471, 0, null);
        var s = vec__14471;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__14472 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__14472, 0, null);
      var s = vec__14472;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng__$1
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng__$1
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__14473_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__14473_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14484 = null;
      var G__14484__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__14484__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__14484__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__14484__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__14484__4 = function() {
        var G__14485__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__14485 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14485__delegate.call(this, x, y, z, args)
        };
        G__14485.cljs$lang$maxFixedArity = 3;
        G__14485.cljs$lang$applyTo = function(arglist__14486) {
          var x = cljs.core.first(arglist__14486);
          arglist__14486 = cljs.core.next(arglist__14486);
          var y = cljs.core.first(arglist__14486);
          arglist__14486 = cljs.core.next(arglist__14486);
          var z = cljs.core.first(arglist__14486);
          var args = cljs.core.rest(arglist__14486);
          return G__14485__delegate(x, y, z, args)
        };
        G__14485.cljs$core$IFn$_invoke$arity$variadic = G__14485__delegate;
        return G__14485
      }();
      G__14484 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14484__0.call(this);
          case 1:
            return G__14484__1.call(this, x);
          case 2:
            return G__14484__2.call(this, x, y);
          case 3:
            return G__14484__3.call(this, x, y, z);
          default:
            return G__14484__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14484.cljs$lang$maxFixedArity = 3;
      G__14484.cljs$lang$applyTo = G__14484__4.cljs$lang$applyTo;
      return G__14484
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14487 = null;
      var G__14487__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__14487__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__14487__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__14487__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__14487__4 = function() {
        var G__14488__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14488 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14488__delegate.call(this, x, y, z, args)
        };
        G__14488.cljs$lang$maxFixedArity = 3;
        G__14488.cljs$lang$applyTo = function(arglist__14489) {
          var x = cljs.core.first(arglist__14489);
          arglist__14489 = cljs.core.next(arglist__14489);
          var y = cljs.core.first(arglist__14489);
          arglist__14489 = cljs.core.next(arglist__14489);
          var z = cljs.core.first(arglist__14489);
          var args = cljs.core.rest(arglist__14489);
          return G__14488__delegate(x, y, z, args)
        };
        G__14488.cljs$core$IFn$_invoke$arity$variadic = G__14488__delegate;
        return G__14488
      }();
      G__14487 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14487__0.call(this);
          case 1:
            return G__14487__1.call(this, x);
          case 2:
            return G__14487__2.call(this, x, y);
          case 3:
            return G__14487__3.call(this, x, y, z);
          default:
            return G__14487__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14487.cljs$lang$maxFixedArity = 3;
      G__14487.cljs$lang$applyTo = G__14487__4.cljs$lang$applyTo;
      return G__14487
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14490 = null;
      var G__14490__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__14490__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__14490__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__14490__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__14490__4 = function() {
        var G__14491__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__14491 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14491__delegate.call(this, x, y, z, args)
        };
        G__14491.cljs$lang$maxFixedArity = 3;
        G__14491.cljs$lang$applyTo = function(arglist__14492) {
          var x = cljs.core.first(arglist__14492);
          arglist__14492 = cljs.core.next(arglist__14492);
          var y = cljs.core.first(arglist__14492);
          arglist__14492 = cljs.core.next(arglist__14492);
          var z = cljs.core.first(arglist__14492);
          var args = cljs.core.rest(arglist__14492);
          return G__14491__delegate(x, y, z, args)
        };
        G__14491.cljs$core$IFn$_invoke$arity$variadic = G__14491__delegate;
        return G__14491
      }();
      G__14490 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14490__0.call(this);
          case 1:
            return G__14490__1.call(this, x);
          case 2:
            return G__14490__2.call(this, x, y);
          case 3:
            return G__14490__3.call(this, x, y, z);
          default:
            return G__14490__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14490.cljs$lang$maxFixedArity = 3;
      G__14490.cljs$lang$applyTo = G__14490__4.cljs$lang$applyTo;
      return G__14490
    }()
  };
  var juxt__4 = function() {
    var G__14493__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__14494 = null;
        var G__14494__0 = function() {
          return cljs.core.reduce.call(null, function(p1__14474_SHARP_, p2__14475_SHARP_) {
            return cljs.core.conj.call(null, p1__14474_SHARP_, p2__14475_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14494__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__14476_SHARP_, p2__14477_SHARP_) {
            return cljs.core.conj.call(null, p1__14476_SHARP_, p2__14477_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14494__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__14478_SHARP_, p2__14479_SHARP_) {
            return cljs.core.conj.call(null, p1__14478_SHARP_, p2__14479_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14494__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__14480_SHARP_, p2__14481_SHARP_) {
            return cljs.core.conj.call(null, p1__14480_SHARP_, p2__14481_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14494__4 = function() {
          var G__14495__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__14482_SHARP_, p2__14483_SHARP_) {
              return cljs.core.conj.call(null, p1__14482_SHARP_, cljs.core.apply.call(null, p2__14483_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__14495 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14495__delegate.call(this, x, y, z, args)
          };
          G__14495.cljs$lang$maxFixedArity = 3;
          G__14495.cljs$lang$applyTo = function(arglist__14496) {
            var x = cljs.core.first(arglist__14496);
            arglist__14496 = cljs.core.next(arglist__14496);
            var y = cljs.core.first(arglist__14496);
            arglist__14496 = cljs.core.next(arglist__14496);
            var z = cljs.core.first(arglist__14496);
            var args = cljs.core.rest(arglist__14496);
            return G__14495__delegate(x, y, z, args)
          };
          G__14495.cljs$core$IFn$_invoke$arity$variadic = G__14495__delegate;
          return G__14495
        }();
        G__14494 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__14494__0.call(this);
            case 1:
              return G__14494__1.call(this, x);
            case 2:
              return G__14494__2.call(this, x, y);
            case 3:
              return G__14494__3.call(this, x, y, z);
            default:
              return G__14494__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14494.cljs$lang$maxFixedArity = 3;
        G__14494.cljs$lang$applyTo = G__14494__4.cljs$lang$applyTo;
        return G__14494
      }()
    };
    var G__14493 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14493__delegate.call(this, f, g, h, fs)
    };
    G__14493.cljs$lang$maxFixedArity = 3;
    G__14493.cljs$lang$applyTo = function(arglist__14497) {
      var f = cljs.core.first(arglist__14497);
      arglist__14497 = cljs.core.next(arglist__14497);
      var g = cljs.core.first(arglist__14497);
      arglist__14497 = cljs.core.next(arglist__14497);
      var h = cljs.core.first(arglist__14497);
      var fs = cljs.core.rest(arglist__14497);
      return G__14493__delegate(f, g, h, fs)
    };
    G__14493.cljs$core$IFn$_invoke$arity$variadic = G__14493__delegate;
    return G__14493
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14498 = cljs.core.next.call(null, coll);
        coll = G__14498;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll) && n > 0) {
        var G__14499 = n - 1;
        var G__14500 = cljs.core.next.call(null, coll);
        n = G__14499;
        coll = G__14500;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null)
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14502 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__14502, 0, null);
  var flags = cljs.core.nth.call(null, vec__14502, 1, null);
  var pattern = cljs.core.nth.call(null, vec__14502, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__14507_14511 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__14508_14512 = null;
  var count__14509_14513 = 0;
  var i__14510_14514 = 0;
  while(true) {
    if(i__14510_14514 < count__14509_14513) {
      var o_14515 = cljs.core._nth.call(null, chunk__14508_14512, i__14510_14514);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_14515, writer, opts);
      var G__14516 = seq__14507_14511;
      var G__14517 = chunk__14508_14512;
      var G__14518 = count__14509_14513;
      var G__14519 = i__14510_14514 + 1;
      seq__14507_14511 = G__14516;
      chunk__14508_14512 = G__14517;
      count__14509_14513 = G__14518;
      i__14510_14514 = G__14519;
      continue
    }else {
      var temp__4092__auto___14520 = cljs.core.seq.call(null, seq__14507_14511);
      if(temp__4092__auto___14520) {
        var seq__14507_14521__$1 = temp__4092__auto___14520;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14507_14521__$1)) {
          var c__3844__auto___14522 = cljs.core.chunk_first.call(null, seq__14507_14521__$1);
          var G__14523 = cljs.core.chunk_rest.call(null, seq__14507_14521__$1);
          var G__14524 = c__3844__auto___14522;
          var G__14525 = cljs.core.count.call(null, c__3844__auto___14522);
          var G__14526 = 0;
          seq__14507_14511 = G__14523;
          chunk__14508_14512 = G__14524;
          count__14509_14513 = G__14525;
          i__14510_14514 = G__14526;
          continue
        }else {
          var o_14527 = cljs.core.first.call(null, seq__14507_14521__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_14527, writer, opts);
          var G__14528 = cljs.core.next.call(null, seq__14507_14521__$1);
          var G__14529 = null;
          var G__14530 = 0;
          var G__14531 = 0;
          seq__14507_14511 = G__14528;
          chunk__14508_14512 = G__14529;
          count__14509_14513 = G__14530;
          i__14510_14514 = G__14531;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__14536 = cljs.core.seq.call(null, ss);
    var chunk__14537 = null;
    var count__14538 = 0;
    var i__14539 = 0;
    while(true) {
      if(i__14539 < count__14538) {
        var s = cljs.core._nth.call(null, chunk__14537, i__14539);
        cljs.core._write.call(null, writer, s);
        var G__14540 = seq__14536;
        var G__14541 = chunk__14537;
        var G__14542 = count__14538;
        var G__14543 = i__14539 + 1;
        seq__14536 = G__14540;
        chunk__14537 = G__14541;
        count__14538 = G__14542;
        i__14539 = G__14543;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__14536);
        if(temp__4092__auto__) {
          var seq__14536__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14536__$1)) {
            var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14536__$1);
            var G__14544 = cljs.core.chunk_rest.call(null, seq__14536__$1);
            var G__14545 = c__3844__auto__;
            var G__14546 = cljs.core.count.call(null, c__3844__auto__);
            var G__14547 = 0;
            seq__14536 = G__14544;
            chunk__14537 = G__14545;
            count__14538 = G__14546;
            i__14539 = G__14547;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__14536__$1);
            cljs.core._write.call(null, writer, s);
            var G__14548 = cljs.core.next.call(null, seq__14536__$1);
            var G__14549 = null;
            var G__14550 = 0;
            var G__14551 = 0;
            seq__14536 = G__14548;
            chunk__14537 = G__14549;
            count__14538 = G__14550;
            i__14539 = G__14551;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__14552) {
    var writer = cljs.core.first(arglist__14552);
    var ss = cljs.core.rest(arglist__14552);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3119__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = function() {
              var G__14558 = obj;
              if(G__14558) {
                var bit__3746__auto__ = G__14558.cljs$lang$protocol_mask$partition0$ & 131072;
                if(bit__3746__auto__ || G__14558.cljs$core$IMeta$) {
                  return true
                }else {
                  if(!G__14558.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14558)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14558)
              }
            }();
            if(and__3119__auto____$1) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__14559 = obj;
              if(G__14559) {
                var bit__3739__auto__ = G__14559.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(bit__3739__auto__ || G__14559.cljs$core$IPrintWithWriter$) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__14561 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__14561;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__14560 = obj;
                            if(G__14560) {
                              var bit__3746__auto__ = G__14560.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if(bit__3746__auto__ || G__14560.cljs$core$IPrintWithWriter$) {
                                return true
                              }else {
                                if(!G__14560.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14560)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14560)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__14566 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__14567 = null;
  var count__14568 = 0;
  var i__14569 = 0;
  while(true) {
    if(i__14569 < count__14568) {
      var obj = cljs.core._nth.call(null, chunk__14567, i__14569);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__14570 = seq__14566;
      var G__14571 = chunk__14567;
      var G__14572 = count__14568;
      var G__14573 = i__14569 + 1;
      seq__14566 = G__14570;
      chunk__14567 = G__14571;
      count__14568 = G__14572;
      i__14569 = G__14573;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__14566);
      if(temp__4092__auto__) {
        var seq__14566__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14566__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14566__$1);
          var G__14574 = cljs.core.chunk_rest.call(null, seq__14566__$1);
          var G__14575 = c__3844__auto__;
          var G__14576 = cljs.core.count.call(null, c__3844__auto__);
          var G__14577 = 0;
          seq__14566 = G__14574;
          chunk__14567 = G__14575;
          count__14568 = G__14576;
          i__14569 = G__14577;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__14566__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__14578 = cljs.core.next.call(null, seq__14566__$1);
          var G__14579 = null;
          var G__14580 = 0;
          var G__14581 = 0;
          seq__14566 = G__14578;
          chunk__14567 = G__14579;
          count__14568 = G__14580;
          i__14569 = G__14581;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14582) {
    var objs = cljs.core.seq(arglist__14582);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14583) {
    var objs = cljs.core.seq(arglist__14583);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14584) {
    var objs = cljs.core.seq(arglist__14584);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14585) {
    var objs = cljs.core.seq(arglist__14585);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14586) {
    var objs = cljs.core.seq(arglist__14586);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14587) {
    var objs = cljs.core.seq(arglist__14587);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14588) {
    var objs = cljs.core.seq(arglist__14588);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14589) {
    var objs = cljs.core.seq(arglist__14589);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14590 = cljs.core.seq.call(null, self__.watches);
  var chunk__14591 = null;
  var count__14592 = 0;
  var i__14593 = 0;
  while(true) {
    if(i__14593 < count__14592) {
      var vec__14594 = cljs.core._nth.call(null, chunk__14591, i__14593);
      var key = cljs.core.nth.call(null, vec__14594, 0, null);
      var f = cljs.core.nth.call(null, vec__14594, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__14596 = seq__14590;
      var G__14597 = chunk__14591;
      var G__14598 = count__14592;
      var G__14599 = i__14593 + 1;
      seq__14590 = G__14596;
      chunk__14591 = G__14597;
      count__14592 = G__14598;
      i__14593 = G__14599;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__14590);
      if(temp__4092__auto__) {
        var seq__14590__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14590__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14590__$1);
          var G__14600 = cljs.core.chunk_rest.call(null, seq__14590__$1);
          var G__14601 = c__3844__auto__;
          var G__14602 = cljs.core.count.call(null, c__3844__auto__);
          var G__14603 = 0;
          seq__14590 = G__14600;
          chunk__14591 = G__14601;
          count__14592 = G__14602;
          i__14593 = G__14603;
          continue
        }else {
          var vec__14595 = cljs.core.first.call(null, seq__14590__$1);
          var key = cljs.core.nth.call(null, vec__14595, 0, null);
          var f = cljs.core.nth.call(null, vec__14595, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__14604 = cljs.core.next.call(null, seq__14590__$1);
          var G__14605 = null;
          var G__14606 = 0;
          var G__14607 = 0;
          seq__14590 = G__14604;
          chunk__14591 = G__14605;
          count__14592 = G__14606;
          i__14593 = G__14607;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__14611__delegate = function(x, p__14608) {
      var map__14610 = p__14608;
      var map__14610__$1 = cljs.core.seq_QMARK_.call(null, map__14610) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14610) : map__14610;
      var validator = cljs.core.get.call(null, map__14610__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__14610__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__14611 = function(x, var_args) {
      var p__14608 = null;
      if(arguments.length > 1) {
        p__14608 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14611__delegate.call(this, x, p__14608)
    };
    G__14611.cljs$lang$maxFixedArity = 1;
    G__14611.cljs$lang$applyTo = function(arglist__14612) {
      var x = cljs.core.first(arglist__14612);
      var p__14608 = cljs.core.rest(arglist__14612);
      return G__14611__delegate(x, p__14608)
    };
    G__14611.cljs$core$IFn$_invoke$arity$variadic = G__14611__delegate;
    return G__14611
  }();
  atom = function(x, var_args) {
    var p__14608 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___14613 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___14613)) {
    var validate_14614 = temp__4092__auto___14613;
    if(cljs.core.truth_(validate_14614.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_14615 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_14615, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__14616__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__14616 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14616__delegate.call(this, a, f, x, y, z, more)
    };
    G__14616.cljs$lang$maxFixedArity = 5;
    G__14616.cljs$lang$applyTo = function(arglist__14617) {
      var a = cljs.core.first(arglist__14617);
      arglist__14617 = cljs.core.next(arglist__14617);
      var f = cljs.core.first(arglist__14617);
      arglist__14617 = cljs.core.next(arglist__14617);
      var x = cljs.core.first(arglist__14617);
      arglist__14617 = cljs.core.next(arglist__14617);
      var y = cljs.core.first(arglist__14617);
      arglist__14617 = cljs.core.next(arglist__14617);
      var z = cljs.core.first(arglist__14617);
      var more = cljs.core.rest(arglist__14617);
      return G__14616__delegate(a, f, x, y, z, more)
    };
    G__14616.cljs$core$IFn$_invoke$arity$variadic = G__14616__delegate;
    return G__14616
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14618) {
    var iref = cljs.core.first(arglist__14618);
    arglist__14618 = cljs.core.next(arglist__14618);
    var f = cljs.core.first(arglist__14618);
    var args = cljs.core.rest(arglist__14618);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__14619) {
    var map__14620 = p__14619;
    var map__14620__$1 = cljs.core.seq_QMARK_.call(null, map__14620) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14620) : map__14620;
    var curr_state = map__14620__$1;
    var done = cljs.core.get.call(null, map__14620__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__14622 = k;
    if(G__14622) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__14622.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__14622.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14622)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14622)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__14630 = x;
      if(G__14630) {
        var bit__3746__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3128__auto__ = bit__3746__auto__;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return G__14630.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__14630.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14630)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14630)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__14631_14637 = cljs.core.seq.call(null, x);
            var chunk__14632_14638 = null;
            var count__14633_14639 = 0;
            var i__14634_14640 = 0;
            while(true) {
              if(i__14634_14640 < count__14633_14639) {
                var vec__14635_14641 = cljs.core._nth.call(null, chunk__14632_14638, i__14634_14640);
                var k_14642 = cljs.core.nth.call(null, vec__14635_14641, 0, null);
                var v_14643 = cljs.core.nth.call(null, vec__14635_14641, 1, null);
                m[cljs.core.key__GT_js.call(null, k_14642)] = clj__GT_js.call(null, v_14643);
                var G__14644 = seq__14631_14637;
                var G__14645 = chunk__14632_14638;
                var G__14646 = count__14633_14639;
                var G__14647 = i__14634_14640 + 1;
                seq__14631_14637 = G__14644;
                chunk__14632_14638 = G__14645;
                count__14633_14639 = G__14646;
                i__14634_14640 = G__14647;
                continue
              }else {
                var temp__4092__auto___14648 = cljs.core.seq.call(null, seq__14631_14637);
                if(temp__4092__auto___14648) {
                  var seq__14631_14649__$1 = temp__4092__auto___14648;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__14631_14649__$1)) {
                    var c__3844__auto___14650 = cljs.core.chunk_first.call(null, seq__14631_14649__$1);
                    var G__14651 = cljs.core.chunk_rest.call(null, seq__14631_14649__$1);
                    var G__14652 = c__3844__auto___14650;
                    var G__14653 = cljs.core.count.call(null, c__3844__auto___14650);
                    var G__14654 = 0;
                    seq__14631_14637 = G__14651;
                    chunk__14632_14638 = G__14652;
                    count__14633_14639 = G__14653;
                    i__14634_14640 = G__14654;
                    continue
                  }else {
                    var vec__14636_14655 = cljs.core.first.call(null, seq__14631_14649__$1);
                    var k_14656 = cljs.core.nth.call(null, vec__14636_14655, 0, null);
                    var v_14657 = cljs.core.nth.call(null, vec__14636_14655, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_14656)] = clj__GT_js.call(null, v_14657);
                    var G__14658 = cljs.core.next.call(null, seq__14631_14649__$1);
                    var G__14659 = null;
                    var G__14660 = 0;
                    var G__14661 = 0;
                    seq__14631_14637 = G__14658;
                    chunk__14632_14638 = G__14659;
                    count__14633_14639 = G__14660;
                    i__14634_14640 = G__14661;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__14682__delegate = function(x, opts) {
      if(function() {
        var G__14672 = x;
        if(G__14672) {
          var bit__3746__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__3128__auto__ = bit__3746__auto__;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return G__14672.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__14672.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14672)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14672)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__14673 = opts;
          var map__14673__$1 = cljs.core.seq_QMARK_.call(null, map__14673) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14673) : map__14673;
          var keywordize_keys = cljs.core.get.call(null, map__14673__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3813__auto__ = function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
                          return function iter__14678(s__14679) {
                            return new cljs.core.LazySeq(null, function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__14679__$1 = s__14679;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__14679__$1);
                                  if(temp__4092__auto__) {
                                    var s__14679__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__14679__$2)) {
                                      var c__3811__auto__ = cljs.core.chunk_first.call(null, s__14679__$2);
                                      var size__3812__auto__ = cljs.core.count.call(null, c__3811__auto__);
                                      var b__14681 = cljs.core.chunk_buffer.call(null, size__3812__auto__);
                                      if(function() {
                                        var i__14680 = 0;
                                        while(true) {
                                          if(i__14680 < size__3812__auto__) {
                                            var k = cljs.core._nth.call(null, c__3811__auto__, i__14680);
                                            cljs.core.chunk_append.call(null, b__14681, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__14683 = i__14680 + 1;
                                            i__14680 = G__14683;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14681), iter__14678.call(null, cljs.core.chunk_rest.call(null, s__14679__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14681), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__14679__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__14678.call(null, cljs.core.rest.call(null, s__14679__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__14673, map__14673__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__14673, map__14673__$1, keywordize_keys, keyfn);
                        return iter__3813__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__14673, map__14673__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__14682 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14682__delegate.call(this, x, opts)
    };
    G__14682.cljs$lang$maxFixedArity = 1;
    G__14682.cljs$lang$applyTo = function(arglist__14684) {
      var x = cljs.core.first(arglist__14684);
      var opts = cljs.core.rest(arglist__14684);
      return G__14682__delegate(x, opts)
    };
    G__14682.cljs$core$IFn$_invoke$arity$variadic = G__14682__delegate;
    return G__14682
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__14685__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__14685 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14685__delegate.call(this, args)
    };
    G__14685.cljs$lang$maxFixedArity = 0;
    G__14685.cljs$lang$applyTo = function(arglist__14686) {
      var args = cljs.core.seq(arglist__14686);
      return G__14685__delegate(args)
    };
    G__14685.cljs$core$IFn$_invoke$arity$variadic = G__14685__delegate;
    return G__14685
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__14687 = ret;
        f = G__14687;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__14688__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__14688 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14688__delegate.call(this, f, args)
    };
    G__14688.cljs$lang$maxFixedArity = 1;
    G__14688.cljs$lang$applyTo = function(arglist__14689) {
      var f = cljs.core.first(arglist__14689);
      var args = cljs.core.rest(arglist__14689);
      return G__14688__delegate(f, args)
    };
    G__14688.cljs$core$IFn$_invoke$arity$variadic = G__14688__delegate;
    return G__14688
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__14690) {
    var f = cljs.core.first(arglist__14690);
    var args = cljs.core.rest(arglist__14690);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3128__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3128__auto__) {
      return or__3128__auto__
    }else {
      var or__3128__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if(or__3128__auto____$1) {
        return or__3128__auto____$1
      }else {
        var and__3119__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3119__auto__) {
          var and__3119__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3119__auto____$1) {
            var and__3119__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3119__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(!ret || i === cljs.core.count.call(null, parent)) {
                  return ret
                }else {
                  var G__14691 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__14692 = i + 1;
                  ret = G__14691;
                  i = G__14692;
                  continue
                }
                break
              }
            }else {
              return and__3119__auto____$2
            }
          }else {
            return and__3119__auto____$1
          }
        }else {
          return and__3119__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3128__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__14693_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__14693_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__14693_SHARP_), cljs.core.second.call(null, p1__14693_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__14694_SHARP_, p2__14695_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__14694_SHARP_, p2__14695_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3128__auto__ = cljs.core.truth_(function() {
    var and__3119__auto__ = xprefs;
    if(cljs.core.truth_(and__3119__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3119__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    var or__3128__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__14696 = cljs.core.rest.call(null, ps);
          ps = G__14696;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3128__auto____$1)) {
      return or__3128__auto____$1
    }else {
      var or__3128__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__14697 = cljs.core.rest.call(null, ps);
            ps = G__14697;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3128__auto____$2)) {
        return or__3128__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3128__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__14700) {
    var vec__14701 = p__14700;
    var k = cljs.core.nth.call(null, vec__14701, 0, null);
    var _ = cljs.core.nth.call(null, vec__14701, 1, null);
    var e = vec__14701;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3128__auto__ = be == null;
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._reset[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._reset["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._add_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._add_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._remove_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._remove_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._prefer_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._get_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._get_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._methods[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._methods["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._prefers[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._prefers["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._dispatch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dispatch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null
  });
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__14702__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__14702 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__14702__delegate.call(this, _, args)
  };
  G__14702.cljs$lang$maxFixedArity = 1;
  G__14702.cljs$lang$applyTo = function(arglist__14703) {
    var _ = cljs.core.first(arglist__14703);
    var args = cljs.core.rest(arglist__14703);
    return G__14702__delegate(_, args)
  };
  G__14702.cljs$core$IFn$_invoke$arity$variadic = G__14702__delegate;
  return G__14702
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), 
  null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, 
  "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__17596_SHARP_) {
    return max === p1__17596_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__17597__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__17597 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17597__delegate.call(this, s1, s2, sets)
    };
    G__17597.cljs$lang$maxFixedArity = 2;
    G__17597.cljs$lang$applyTo = function(arglist__17598) {
      var s1 = cljs.core.first(arglist__17598);
      arglist__17598 = cljs.core.next(arglist__17598);
      var s2 = cljs.core.first(arglist__17598);
      var sets = cljs.core.rest(arglist__17598);
      return G__17597__delegate(s1, s2, sets)
    };
    G__17597.cljs$core$IFn$_invoke$arity$variadic = G__17597__delegate;
    return G__17597
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__17600 = s2;
        var G__17601 = s1;
        s1 = G__17600;
        s2 = G__17601;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__17602__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__17599_SHARP_) {
        return-cljs.core.count.call(null, p1__17599_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__17602 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17602__delegate.call(this, s1, s2, sets)
    };
    G__17602.cljs$lang$maxFixedArity = 2;
    G__17602.cljs$lang$applyTo = function(arglist__17603) {
      var s1 = cljs.core.first(arglist__17603);
      arglist__17603 = cljs.core.next(arglist__17603);
      var s2 = cljs.core.first(arglist__17603);
      var sets = cljs.core.rest(arglist__17603);
      return G__17602__delegate(s1, s2, sets)
    };
    G__17602.cljs$core$IFn$_invoke$arity$variadic = G__17602__delegate;
    return G__17602
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__17604__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__17604 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17604__delegate.call(this, s1, s2, sets)
    };
    G__17604.cljs$lang$maxFixedArity = 2;
    G__17604.cljs$lang$applyTo = function(arglist__17605) {
      var s1 = cljs.core.first(arglist__17605);
      arglist__17605 = cljs.core.next(arglist__17605);
      var s2 = cljs.core.first(arglist__17605);
      var sets = cljs.core.rest(arglist__17605);
      return G__17604__delegate(s1, s2, sets)
    };
    G__17604.cljs$core$IFn$_invoke$arity$variadic = G__17604__delegate;
    return G__17604
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17606_SHARP_) {
    return cljs.core.select_keys.call(null, p1__17606_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__17609) {
    var vec__17610 = p__17609;
    var old = cljs.core.nth.call(null, vec__17610, 0, null);
    var new$ = cljs.core.nth.call(null, vec__17610, 1, null);
    if(cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17611_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__17611_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__17614) {
    var vec__17615 = p__17614;
    var k = cljs.core.nth.call(null, vec__17615, 0, null);
    var v = cljs.core.nth.call(null, vec__17615, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k)
  }, cljs.core.PersistentArrayMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__17622 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r = cljs.core.nth.call(null, vec__17622, 0, null);
      var s = cljs.core.nth.call(null, vec__17622, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if(cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__17616_SHARP_, p2__17617_SHARP_) {
            return cljs.core.conj.call(null, p1__17616_SHARP_, cljs.core.merge.call(null, p2__17617_SHARP_, x))
          }, ret, found)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__17623 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r = cljs.core.nth.call(null, vec__17623, 0, null);
    var s = cljs.core.nth.call(null, vec__17623, 1, null);
    var k = cljs.core.nth.call(null, vec__17623, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if(cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__17618_SHARP_, p2__17619_SHARP_) {
          return cljs.core.conj.call(null, p1__17618_SHARP_, cljs.core.merge.call(null, p2__17619_SHARP_, x))
        }, ret, found)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17624_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__17624_SHARP_)
  }, set1)
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17625_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__17625_SHARP_)
  }, set2)
};
goog.provide("clojure.data");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.set");
clojure.data.atom_diff = function atom_diff(a, b) {
  if(cljs.core._EQ_.call(null, a, b)) {
    return cljs.core.PersistentVector.fromArray([null, null, a], true)
  }else {
    return cljs.core.PersistentVector.fromArray([a, b, null], true)
  }
};
clojure.data.vectorize = function vectorize(m) {
  if(cljs.core.seq.call(null, m)) {
    return cljs.core.reduce.call(null, function(result, p__18038) {
      var vec__18039 = p__18038;
      var k = cljs.core.nth.call(null, vec__18039, 0, null);
      var v = cljs.core.nth.call(null, vec__18039, 1, null);
      return cljs.core.assoc.call(null, result, k, v)
    }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, m)), null)), m)
  }else {
    return null
  }
};
clojure.data.diff_associative_key = function diff_associative_key(a, b, k) {
  var va = cljs.core.get.call(null, a, k);
  var vb = cljs.core.get.call(null, b, k);
  var vec__18041 = clojure.data.diff.call(null, va, vb);
  var a_STAR_ = cljs.core.nth.call(null, vec__18041, 0, null);
  var b_STAR_ = cljs.core.nth.call(null, vec__18041, 1, null);
  var ab = cljs.core.nth.call(null, vec__18041, 2, null);
  var in_a = cljs.core.contains_QMARK_.call(null, a, k);
  var in_b = cljs.core.contains_QMARK_.call(null, b, k);
  var same = in_a && in_b && (!(ab == null) || va == null && vb == null);
  return cljs.core.PersistentVector.fromArray([in_a && (!(a_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.fromArray([k, a_STAR_], true) : null, in_b && (!(b_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.fromArray([k, b_STAR_], true) : null, same ? cljs.core.PersistentArrayMap.fromArray([k, ab], true) : null], true)
};
clojure.data.diff_associative = function() {
  var diff_associative = null;
  var diff_associative__2 = function(a, b) {
    return diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)))
  };
  var diff_associative__3 = function(a, b, ks) {
    return cljs.core.reduce.call(null, function(diff1, diff2) {
      return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, diff1, diff2))
    }, cljs.core.PersistentVector.fromArray([null, null, null], true), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), ks))
  };
  diff_associative = function(a, b, ks) {
    switch(arguments.length) {
      case 2:
        return diff_associative__2.call(this, a, b);
      case 3:
        return diff_associative__3.call(this, a, b, ks)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  diff_associative.cljs$core$IFn$_invoke$arity$2 = diff_associative__2;
  diff_associative.cljs$core$IFn$_invoke$arity$3 = diff_associative__3;
  return diff_associative
}();
clojure.data.diff_sequential = function diff_sequential(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var x__3433__auto__ = cljs.core.count.call(null, a);
    var y__3434__auto__ = cljs.core.count.call(null, b);
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  }()))))
};
clojure.data.diff_set = function diff_set(a, b) {
  return cljs.core.PersistentVector.fromArray([cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], true)
};
clojure.data.EqualityPartition = {};
clojure.data.equality_partition = function equality_partition(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.clojure$data$EqualityPartition$equality_partition$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.clojure$data$EqualityPartition$equality_partition$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = clojure.data.equality_partition[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = clojure.data.equality_partition["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", x);
        }
      }
    }().call(null, x)
  }
};
clojure.data.Diff = {};
clojure.data.diff_similar = function diff_similar(a, b) {
  if(function() {
    var and__3119__auto__ = a;
    if(and__3119__auto__) {
      return a.clojure$data$Diff$diff_similar$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b)
  }else {
    var x__3723__auto__ = a == null ? null : a;
    return function() {
      var or__3128__auto__ = clojure.data.diff_similar[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = clojure.data.diff_similar["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
        }
      }
    }().call(null, a, b)
  }
};
clojure.data.EqualityPartition["_"] = true;
clojure.data.equality_partition["_"] = function(x) {
  if(function() {
    var G__18042 = x;
    if(G__18042) {
      var bit__3746__auto__ = G__18042.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3746__auto__ || G__18042.cljs$core$IMap$) {
        return true
      }else {
        if(!G__18042.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18042)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18042)
    }
  }()) {
    return new cljs.core.Keyword(null, "map", "map", 1014012110)
  }else {
    if(function() {
      var G__18043 = x;
      if(G__18043) {
        var bit__3746__auto__ = G__18043.cljs$lang$protocol_mask$partition0$ & 4096;
        if(bit__3746__auto__ || G__18043.cljs$core$ISet$) {
          return true
        }else {
          if(!G__18043.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18043)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18043)
      }
    }()) {
      return new cljs.core.Keyword(null, "set", "set", 1014018004)
    }else {
      if(function() {
        var G__18044 = x;
        if(G__18044) {
          var bit__3746__auto__ = G__18044.cljs$lang$protocol_mask$partition0$ & 16777216;
          if(bit__3746__auto__ || G__18044.cljs$core$ISequential$) {
            return true
          }else {
            if(!G__18044.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18044)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18044)
        }
      }()) {
        return new cljs.core.Keyword(null, "sequential", "sequential", 849892465)
      }else {
        if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
        }else {
          return null
        }
      }
    }
  }
};
clojure.data.EqualityPartition["boolean"] = true;
clojure.data.equality_partition["boolean"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["function"] = true;
clojure.data.equality_partition["function"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["array"] = true;
clojure.data.equality_partition["array"] = function(x) {
  return new cljs.core.Keyword(null, "sequential", "sequential", 849892465)
};
clojure.data.EqualityPartition["number"] = true;
clojure.data.equality_partition["number"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["string"] = true;
clojure.data.equality_partition["string"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["null"] = true;
clojure.data.equality_partition["null"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.Diff["_"] = true;
clojure.data.diff_similar["_"] = function(a, b) {
  return function() {
    var G__18045 = clojure.data.equality_partition.call(null, a);
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), G__18045)) {
      return clojure.data.diff_associative
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "sequential", "sequential", 849892465), G__18045)) {
        return clojure.data.diff_sequential
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "set", "set", 1014018004), G__18045)) {
          return clojure.data.diff_set
        }else {
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "atom", "atom", 1016908995), G__18045)) {
            return clojure.data.atom_diff
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(clojure.data.equality_partition.call(null, a))].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }().call(null, a, b)
};
clojure.data.Diff["boolean"] = true;
clojure.data.diff_similar["boolean"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["function"] = true;
clojure.data.diff_similar["function"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["array"] = true;
clojure.data.diff_similar["array"] = function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b)
};
clojure.data.Diff["number"] = true;
clojure.data.diff_similar["number"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["string"] = true;
clojure.data.diff_similar["string"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["null"] = true;
clojure.data.diff_similar["null"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.diff = function diff(a, b) {
  if(cljs.core._EQ_.call(null, a, b)) {
    return cljs.core.PersistentVector.fromArray([null, null, a], true)
  }else {
    if(cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b))) {
      return clojure.data.diff_similar.call(null, a, b)
    }else {
      return clojure.data.atom_diff.call(null, a, b)
    }
  }
};
goog.provide("specljs.results");
goog.require("cljs.core");
specljs.results.PassResult = function(characteristic, seconds) {
  this.characteristic = characteristic;
  this.seconds = seconds
};
specljs.results.PassResult.cljs$lang$type = true;
specljs.results.PassResult.cljs$lang$ctorStr = "specljs.results/PassResult";
specljs.results.PassResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/PassResult")
};
specljs.results.__GT_PassResult = function __GT_PassResult(characteristic, seconds) {
  return new specljs.results.PassResult(characteristic, seconds)
};
specljs.results.FailResult = function(characteristic, seconds, failure) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.failure = failure
};
specljs.results.FailResult.cljs$lang$type = true;
specljs.results.FailResult.cljs$lang$ctorStr = "specljs.results/FailResult";
specljs.results.FailResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/FailResult")
};
specljs.results.__GT_FailResult = function __GT_FailResult(characteristic, seconds, failure) {
  return new specljs.results.FailResult(characteristic, seconds, failure)
};
specljs.results.PendingResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception
};
specljs.results.PendingResult.cljs$lang$type = true;
specljs.results.PendingResult.cljs$lang$ctorStr = "specljs.results/PendingResult";
specljs.results.PendingResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/PendingResult")
};
specljs.results.__GT_PendingResult = function __GT_PendingResult(characteristic, seconds, exception) {
  return new specljs.results.PendingResult(characteristic, seconds, exception)
};
specljs.results.ErrorResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception
};
specljs.results.ErrorResult.cljs$lang$type = true;
specljs.results.ErrorResult.cljs$lang$ctorStr = "specljs.results/ErrorResult";
specljs.results.ErrorResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/ErrorResult")
};
specljs.results.__GT_ErrorResult = function __GT_ErrorResult(characteristic, seconds, exception) {
  return new specljs.results.ErrorResult(characteristic, seconds, exception)
};
specljs.results.pass_result = function pass_result(characteristic, seconds) {
  return new specljs.results.PassResult(characteristic, seconds)
};
specljs.results.fail_result = function fail_result(characteristic, seconds, failure) {
  return new specljs.results.FailResult(characteristic, seconds, failure)
};
specljs.results.pending_result = function pending_result(characteristic, seconds, exception) {
  return new specljs.results.PendingResult(characteristic, seconds, exception)
};
specljs.results.error_result = function error_result(exception) {
  return new specljs.results.ErrorResult(null, 0, exception)
};
specljs.results.pass_QMARK_ = function pass_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.PassResult)
};
specljs.results.fail_QMARK_ = function fail_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.FailResult)
};
specljs.results.pending_QMARK_ = function pending_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.PendingResult)
};
specljs.results.error_QMARK_ = function error_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.ErrorResult)
};
specljs.results.fail_count = function fail_count(results) {
  return cljs.core.reduce.call(null, function(p1__18035_SHARP_, p2__18034_SHARP_) {
    if(cljs.core.truth_(function() {
      var or__3128__auto__ = specljs.results.fail_QMARK_.call(null, p2__18034_SHARP_);
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return specljs.results.error_QMARK_.call(null, p2__18034_SHARP_)
      }
    }())) {
      return p1__18035_SHARP_ + 1
    }else {
      return p1__18035_SHARP_
    }
  }, 0, results)
};
specljs.results.categorize = function categorize(results) {
  return cljs.core.reduce.call(null, function(tally, result) {
    if(cljs.core.truth_(specljs.results.pending_QMARK_.call(null, result))) {
      return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "pending", "pending", 4626283785)], true), cljs.core.conj, result)
    }else {
      if(cljs.core.truth_(specljs.results.error_QMARK_.call(null, result))) {
        return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "error", "error", 1110689146)], true), cljs.core.conj, result)
      }else {
        if(cljs.core.truth_(specljs.results.fail_QMARK_.call(null, result))) {
          return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "fail", "fail", 1017039504)], true), cljs.core.conj, result)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "pass", "pass", 1017337731)], true), cljs.core.conj, result)
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "pending", "pending", 4626283785), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "fail", "fail", 1017039504), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "pass", "pass", 1017337731), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.PersistentVector.EMPTY], true), results)
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__17078 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__17078;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__17082 = cljs.core._EQ_;
    var expr__17083 = limit;
    if(pred__17082.call(null, 1, expr__17083)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__17082.call(null, 2, expr__17083)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__17085 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__17086 = limit__$1 - 1;
            var G__17087 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__17085;
            limit__$1 = G__17086;
            parts = G__17087;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__17088 = index - 1;
        index = G__17088;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___17089 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___17089)) {
        var replacement_17090 = temp__4090__auto___17089;
        buffer.append([cljs.core.str(replacement_17090)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__17091 = index + 1;
      index = G__17091;
      continue
    }
    break
  }
};
goog.provide("specljs.platform");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.platform.endl = "\n";
specljs.platform.file_separator = "/";
specljs.platform.re_type = cljs.core.type.call(null, /./);
specljs.platform.re_QMARK_ = function re_QMARK_(obj) {
  return cljs.core._EQ_.call(null, specljs.platform.re_type, cljs.core.type.call(null, obj))
};
specljs.platform.SpecFailure = function(message) {
  this.message = message
};
specljs.platform.SpecFailure.cljs$lang$type = true;
specljs.platform.SpecFailure.cljs$lang$ctorStr = "specljs.platform/SpecFailure";
specljs.platform.SpecFailure.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.platform/SpecFailure")
};
specljs.platform.__GT_SpecFailure = function __GT_SpecFailure(message) {
  return new specljs.platform.SpecFailure(message)
};
specljs.platform.SpecPending = function(message) {
  this.message = message
};
specljs.platform.SpecPending.cljs$lang$type = true;
specljs.platform.SpecPending.cljs$lang$ctorStr = "specljs.platform/SpecPending";
specljs.platform.SpecPending.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.platform/SpecPending")
};
specljs.platform.__GT_SpecPending = function __GT_SpecPending(message) {
  return new specljs.platform.SpecPending(message)
};
specljs.platform.throwable = Object;
specljs.platform.exception = Error;
specljs.platform.failure = specljs.platform.SpecFailure;
specljs.platform.pending = specljs.platform.SpecPending;
specljs.platform.pending_QMARK_ = function pending_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), specljs.platform.SpecPending)
};
specljs.platform.failure_QMARK_ = function failure_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), specljs.platform.SpecFailure)
};
specljs.platform.error_message = function error_message(e) {
  return e.message
};
specljs.platform.failure_source = function failure_source(e) {
  if(cljs.core.truth_(e.fileName)) {
    return[cljs.core.str(e.fileName), cljs.core.str(":"), cljs.core.str(function() {
      var or__3128__auto__ = e.lineNumber;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return"?"
      }
    }())].join("")
  }else {
    if(cljs.core.truth_(e.stack)) {
      return clojure.string.trim.call(null, cljs.core.nth.call(null, clojure.string.split_lines.call(null, e.stack), cljs.core.count.call(null, clojure.string.split_lines.call(null, e.message))))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return"unkown-file:?"
      }else {
        return null
      }
    }
  }
};
specljs.platform.stack_trace = function stack_trace(e) {
  return cljs.core.rest.call(null, clojure.string.split_lines.call(null, function() {
    var or__3128__auto__ = e.stack;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return e.toString()
    }
  }()))
};
specljs.platform.cause = function cause(e) {
  return null
};
specljs.platform.print_stack_trace = function print_stack_trace(e) {
  return cljs.core.println.call(null, function() {
    var or__3128__auto__ = e.stack;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return"missing stack trace"
    }
  }())
};
specljs.platform.elide_level_QMARK_ = function elide_level_QMARK_(stack_element) {
  return false
};
specljs.platform.type_name = function type_name(t) {
  if(cljs.core.truth_(t)) {
    return t.name
  }else {
    return"nil"
  }
};
specljs.platform.format_seconds = function format_seconds(secs) {
  return secs.toFixed(5)
};
specljs.platform.current_time = function current_time() {
  return(new Date).getTime()
};
specljs.platform.secs_since = function secs_since(start) {
  return((new Date).getTime() - start) / 1E3
};
cljs.core._STAR_print_fn_STAR_ = function(thing) {
  return console.log(thing)
};
specljs.platform.dynamically_invoke = function dynamically_invoke(ns_name, fn_name) {
  var code = [cljs.core.str(clojure.string.replace.call(null, ns_name, "-", "_")), cljs.core.str("."), cljs.core.str(clojure.string.replace.call(null, fn_name, "-", "_")), cljs.core.str("();")].join("");
  return eval(code)
};
goog.provide("specljs.config");
goog.require("cljs.core");
goog.require("specljs.platform");
goog.require("specljs.platform");
specljs.config.default_reporters = cljs.core.atom.call(null, null);
specljs.config.active_reporters = function active_reporters() {
  if(cljs.core.truth_(specljs.config._STAR_reporters_STAR_)) {
    return specljs.config._STAR_reporters_STAR_
  }else {
    var temp__4090__auto__ = cljs.core.deref.call(null, specljs.config.default_reporters);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var reporters = temp__4090__auto__;
      return reporters
    }else {
      throw new Error("*reporters* is unbound and no default value has been provided");
    }
  }
};
specljs.config.default_runner = cljs.core.atom.call(null, null);
specljs.config.default_runner_fn = cljs.core.atom.call(null, null);
specljs.config.active_runner = function active_runner() {
  if(cljs.core.truth_(specljs.config._STAR_runner_STAR_)) {
    return specljs.config._STAR_runner_STAR_
  }else {
    var temp__4090__auto__ = cljs.core.deref.call(null, specljs.config.default_runner);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var runner = temp__4090__auto__;
      return runner
    }else {
      throw new Error("*runner* is unbound and no default value has been provided");
    }
  }
};
specljs.config._STAR_color_QMARK__STAR_ = false;
specljs.config._STAR_full_stack_trace_QMARK__STAR_ = false;
specljs.config._STAR_tag_filter_STAR_ = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "include", "include", 2956478490), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "exclude", "exclude", 3987722572), cljs.core.PersistentHashSet.EMPTY], true);
specljs.config.default_config = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "specs", "specs", 1123545994), cljs.core.PersistentVector.fromArray(["spec"], true), new cljs.core.Keyword(null, "runner", "runner", 4389065378), "standard", new cljs.core.Keyword(null, "reporters", "reporters", 660581156), cljs.core.PersistentVector.fromArray(["progress"], true), new cljs.core.Keyword(null, "tags", "tags", 1017456523), cljs.core.PersistentVector.EMPTY], true);
specljs.config.config_bindings = function config_bindings() {
  throw"Not Supported";
};
specljs.config.load_runner = function load_runner(name) {
  try {
    return specljs.platform.dynamically_invoke.call(null, [cljs.core.str("specljs.run."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-runner")].join(""))
  }catch(e18015) {
    if(e18015 instanceof Error) {
      var e = e18015;
      throw new Error([cljs.core.str("Failed to load runner: "), cljs.core.str(name)].join(""), e);
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18015;
      }else {
        return null
      }
    }
  }
};
specljs.config.load_reporter = function load_reporter(name) {
  try {
    return specljs.platform.dynamically_invoke.call(null, [cljs.core.str("specljs.report."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-reporter")].join(""))
  }catch(e18017) {
    if(e18017 instanceof Error) {
      var e = e18017;
      throw new Error([cljs.core.str("Failed to load reporter: "), cljs.core.str(name)].join(""), e);
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18017;
      }else {
        return null
      }
    }
  }
};
specljs.config.parse_tags = function parse_tags(values) {
  var result = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "includes", "includes", 1104163901), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "excludes", "excludes", 3007959371), cljs.core.PersistentHashSet.EMPTY], true);
  var values__$1 = values;
  while(true) {
    if(cljs.core.seq.call(null, values__$1)) {
      var value = cljs.core.name.call(null, cljs.core.first.call(null, values__$1));
      if(cljs.core._EQ_.call(null, "~", cljs.core.first.call(null, value))) {
        var G__18018 = cljs.core.update_in.call(null, result, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)], true), cljs.core.conj, cljs.core.keyword.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, value))));
        var G__18019 = cljs.core.rest.call(null, values__$1);
        result = G__18018;
        values__$1 = G__18019;
        continue
      }else {
        var G__18020 = cljs.core.update_in.call(null, result, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "includes", "includes", 1104163901)], true), cljs.core.conj, cljs.core.keyword.call(null, value));
        var G__18021 = cljs.core.rest.call(null, values__$1);
        result = G__18020;
        values__$1 = G__18021;
        continue
      }
    }else {
      return result
    }
    break
  }
};
specljs.config.config_mappings = function config_mappings(_) {
  throw"Not Supported";
};
specljs.config.with_config = function with_config(config, action) {
  var _STAR_runner_STAR_18028 = specljs.config._STAR_runner_STAR_;
  var _STAR_reporters_STAR_18029 = specljs.config._STAR_reporters_STAR_;
  var _STAR_specs_STAR_18030 = specljs.config._STAR_specs_STAR_;
  var _STAR_color_QMARK__STAR_18031 = specljs.config._STAR_color_QMARK__STAR_;
  var _STAR_full_stack_trace_QMARK__STAR_18032 = specljs.config._STAR_full_stack_trace_QMARK__STAR_;
  var _STAR_tag_filter_STAR_18033 = specljs.config._STAR_tag_filter_STAR_;
  try {
    specljs.config._STAR_runner_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "runner", "runner", 4389065378)).cljs$core$IFn$_invoke$arity$1(config)) ? function() {
      cljs.core.println.call(null, "loading runner in config");
      return specljs.config.load_runner.call(null, (new cljs.core.Keyword(null, "runner", "runner", 4389065378)).cljs$core$IFn$_invoke$arity$1(config))
    }() : specljs.config.active_runner.call(null);
    specljs.config._STAR_reporters_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "reporters", "reporters", 660581156)).cljs$core$IFn$_invoke$arity$1(config)) ? cljs.core.mapv.call(null, specljs.config.load_reporter, (new cljs.core.Keyword(null, "reporters", "reporters", 660581156)).cljs$core$IFn$_invoke$arity$1(config)) : specljs.config.active_reporters.call(null);
    specljs.config._STAR_specs_STAR_ = (new cljs.core.Keyword(null, "specs", "specs", 1123545994)).cljs$core$IFn$_invoke$arity$1(config);
    specljs.config._STAR_color_QMARK__STAR_ = (new cljs.core.Keyword(null, "color", "color", 1108746965)).cljs$core$IFn$_invoke$arity$1(config);
    specljs.config._STAR_full_stack_trace_QMARK__STAR_ = !((new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751)).cljs$core$IFn$_invoke$arity$1(config) == null);
    specljs.config._STAR_tag_filter_STAR_ = specljs.config.parse_tags.call(null, (new cljs.core.Keyword(null, "tags", "tags", 1017456523)).cljs$core$IFn$_invoke$arity$1(config));
    return action.call(null)
  }finally {
    specljs.config._STAR_tag_filter_STAR_ = _STAR_tag_filter_STAR_18033;
    specljs.config._STAR_full_stack_trace_QMARK__STAR_ = _STAR_full_stack_trace_QMARK__STAR_18032;
    specljs.config._STAR_color_QMARK__STAR_ = _STAR_color_QMARK__STAR_18031;
    specljs.config._STAR_specs_STAR_ = _STAR_specs_STAR_18030;
    specljs.config._STAR_reporters_STAR_ = _STAR_reporters_STAR_18029;
    specljs.config._STAR_runner_STAR_ = _STAR_runner_STAR_18028
  }
};
goog.provide("specljs.reporting");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("specljs.results");
goog.require("specljs.config");
goog.require("specljs.platform");
goog.require("specljs.results");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.reporting.tally_time = function tally_time(results) {
  return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(p1__17828_SHARP_) {
    return p1__17828_SHARP_.seconds
  }, results))
};
specljs.reporting.Reporter = {};
specljs.reporting.report_message = function report_message(reporter, message) {
  if(function() {
    var and__3119__auto__ = reporter;
    if(and__3119__auto__) {
      return reporter.specljs$reporting$Reporter$report_message$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return reporter.specljs$reporting$Reporter$report_message$arity$2(reporter, message)
  }else {
    var x__3723__auto__ = reporter == null ? null : reporter;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_message[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_message["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-message", reporter);
        }
      }
    }().call(null, reporter, message)
  }
};
specljs.reporting.report_description = function report_description(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_description$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_description$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-description", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.reporting.report_pass = function report_pass(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_pass$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_pass$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_pass[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_pass["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pass", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_pending = function report_pending(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_pending$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_pending$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_pending[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_pending["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pending", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_fail = function report_fail(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_fail$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_fail$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_fail[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_fail["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-fail", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_runs = function report_runs(this$, results) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_runs$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_runs$arity$2(this$, results)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_runs[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_runs["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-runs", this$);
        }
      }
    }().call(null, this$, results)
  }
};
specljs.reporting.report_error = function report_error(this$, exception) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_error$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_error$arity$2(this$, exception)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_error[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_error["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-error", this$);
        }
      }
    }().call(null, this$, exception)
  }
};
specljs.reporting.report_run = function() {
  var method_table__3901__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3902__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3903__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3904__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3905__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report-run", function(result, reporters) {
    return cljs.core.type.call(null, result)
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__3905__auto__, method_table__3901__auto__, prefer_table__3902__auto__, method_cache__3903__auto__, cached_hierarchy__3904__auto__)
}();
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.PassResult, function(result, reporters) {
  var seq__17829 = cljs.core.seq.call(null, reporters);
  var chunk__17830 = null;
  var count__17831 = 0;
  var i__17832 = 0;
  while(true) {
    if(i__17832 < count__17831) {
      var reporter = cljs.core._nth.call(null, chunk__17830, i__17832);
      specljs.reporting.report_pass.call(null, reporter, result);
      var G__17833 = seq__17829;
      var G__17834 = chunk__17830;
      var G__17835 = count__17831;
      var G__17836 = i__17832 + 1;
      seq__17829 = G__17833;
      chunk__17830 = G__17834;
      count__17831 = G__17835;
      i__17832 = G__17836;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17829);
      if(temp__4092__auto__) {
        var seq__17829__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17829__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17829__$1);
          var G__17837 = cljs.core.chunk_rest.call(null, seq__17829__$1);
          var G__17838 = c__3844__auto__;
          var G__17839 = cljs.core.count.call(null, c__3844__auto__);
          var G__17840 = 0;
          seq__17829 = G__17837;
          chunk__17830 = G__17838;
          count__17831 = G__17839;
          i__17832 = G__17840;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17829__$1);
          specljs.reporting.report_pass.call(null, reporter, result);
          var G__17841 = cljs.core.next.call(null, seq__17829__$1);
          var G__17842 = null;
          var G__17843 = 0;
          var G__17844 = 0;
          seq__17829 = G__17841;
          chunk__17830 = G__17842;
          count__17831 = G__17843;
          i__17832 = G__17844;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.FailResult, function(result, reporters) {
  var seq__17845 = cljs.core.seq.call(null, reporters);
  var chunk__17846 = null;
  var count__17847 = 0;
  var i__17848 = 0;
  while(true) {
    if(i__17848 < count__17847) {
      var reporter = cljs.core._nth.call(null, chunk__17846, i__17848);
      specljs.reporting.report_fail.call(null, reporter, result);
      var G__17849 = seq__17845;
      var G__17850 = chunk__17846;
      var G__17851 = count__17847;
      var G__17852 = i__17848 + 1;
      seq__17845 = G__17849;
      chunk__17846 = G__17850;
      count__17847 = G__17851;
      i__17848 = G__17852;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17845);
      if(temp__4092__auto__) {
        var seq__17845__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17845__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17845__$1);
          var G__17853 = cljs.core.chunk_rest.call(null, seq__17845__$1);
          var G__17854 = c__3844__auto__;
          var G__17855 = cljs.core.count.call(null, c__3844__auto__);
          var G__17856 = 0;
          seq__17845 = G__17853;
          chunk__17846 = G__17854;
          count__17847 = G__17855;
          i__17848 = G__17856;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17845__$1);
          specljs.reporting.report_fail.call(null, reporter, result);
          var G__17857 = cljs.core.next.call(null, seq__17845__$1);
          var G__17858 = null;
          var G__17859 = 0;
          var G__17860 = 0;
          seq__17845 = G__17857;
          chunk__17846 = G__17858;
          count__17847 = G__17859;
          i__17848 = G__17860;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.PendingResult, function(result, reporters) {
  var seq__17861 = cljs.core.seq.call(null, reporters);
  var chunk__17862 = null;
  var count__17863 = 0;
  var i__17864 = 0;
  while(true) {
    if(i__17864 < count__17863) {
      var reporter = cljs.core._nth.call(null, chunk__17862, i__17864);
      specljs.reporting.report_pending.call(null, reporter, result);
      var G__17865 = seq__17861;
      var G__17866 = chunk__17862;
      var G__17867 = count__17863;
      var G__17868 = i__17864 + 1;
      seq__17861 = G__17865;
      chunk__17862 = G__17866;
      count__17863 = G__17867;
      i__17864 = G__17868;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17861);
      if(temp__4092__auto__) {
        var seq__17861__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17861__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17861__$1);
          var G__17869 = cljs.core.chunk_rest.call(null, seq__17861__$1);
          var G__17870 = c__3844__auto__;
          var G__17871 = cljs.core.count.call(null, c__3844__auto__);
          var G__17872 = 0;
          seq__17861 = G__17869;
          chunk__17862 = G__17870;
          count__17863 = G__17871;
          i__17864 = G__17872;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17861__$1);
          specljs.reporting.report_pending.call(null, reporter, result);
          var G__17873 = cljs.core.next.call(null, seq__17861__$1);
          var G__17874 = null;
          var G__17875 = 0;
          var G__17876 = 0;
          seq__17861 = G__17873;
          chunk__17862 = G__17874;
          count__17863 = G__17875;
          i__17864 = G__17876;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.ErrorResult, function(result, reporters) {
  var seq__17877 = cljs.core.seq.call(null, reporters);
  var chunk__17878 = null;
  var count__17879 = 0;
  var i__17880 = 0;
  while(true) {
    if(i__17880 < count__17879) {
      var reporter = cljs.core._nth.call(null, chunk__17878, i__17880);
      specljs.reporting.report_error.call(null, reporter, result);
      var G__17881 = seq__17877;
      var G__17882 = chunk__17878;
      var G__17883 = count__17879;
      var G__17884 = i__17880 + 1;
      seq__17877 = G__17881;
      chunk__17878 = G__17882;
      count__17879 = G__17883;
      i__17880 = G__17884;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17877);
      if(temp__4092__auto__) {
        var seq__17877__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17877__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17877__$1);
          var G__17885 = cljs.core.chunk_rest.call(null, seq__17877__$1);
          var G__17886 = c__3844__auto__;
          var G__17887 = cljs.core.count.call(null, c__3844__auto__);
          var G__17888 = 0;
          seq__17877 = G__17885;
          chunk__17878 = G__17886;
          count__17879 = G__17887;
          i__17880 = G__17888;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17877__$1);
          specljs.reporting.report_error.call(null, reporter, result);
          var G__17889 = cljs.core.next.call(null, seq__17877__$1);
          var G__17890 = null;
          var G__17891 = 0;
          var G__17892 = 0;
          seq__17877 = G__17889;
          chunk__17878 = G__17890;
          count__17879 = G__17891;
          i__17880 = G__17892;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
specljs.reporting.stylizer = function stylizer(code) {
  return function(text) {
    if(cljs.core.truth_(specljs.config._STAR_color_QMARK__STAR_)) {
      return[cljs.core.str("\u001b["), cljs.core.str(code), cljs.core.str("m"), cljs.core.str(text), cljs.core.str("\u001b[0m")].join("")
    }else {
      return text
    }
  }
};
specljs.reporting.red = specljs.reporting.stylizer.call(null, "31");
specljs.reporting.green = specljs.reporting.stylizer.call(null, "32");
specljs.reporting.yellow = specljs.reporting.stylizer.call(null, "33");
specljs.reporting.grey = specljs.reporting.stylizer.call(null, "90");
specljs.reporting.print_elides = function print_elides(n) {
  if(n > 0) {
    return cljs.core.println.call(null, "\t...", n, "stack levels elided ...")
  }else {
    return null
  }
};
specljs.reporting.print_stack_levels = function print_stack_levels(exception) {
  var levels_17893 = specljs.platform.stack_trace.call(null, exception);
  var elides_17894 = 0;
  while(true) {
    if(cljs.core.seq.call(null, levels_17893)) {
      var level_17895 = cljs.core.first.call(null, levels_17893);
      if(cljs.core.truth_(specljs.platform.elide_level_QMARK_.call(null, level_17895))) {
        var G__17896 = cljs.core.rest.call(null, levels_17893);
        var G__17897 = elides_17894 + 1;
        levels_17893 = G__17896;
        elides_17894 = G__17897;
        continue
      }else {
        specljs.reporting.print_elides.call(null, elides_17894);
        cljs.core.println.call(null, [cljs.core.str(level_17895)].join(""));
        var G__17898 = cljs.core.rest.call(null, levels_17893);
        var G__17899 = 0;
        levels_17893 = G__17898;
        elides_17894 = G__17899;
        continue
      }
    }else {
      specljs.reporting.print_elides.call(null, elides_17894)
    }
    break
  }
  var temp__4090__auto__ = specljs.platform.cause.call(null, exception);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cause = temp__4090__auto__;
    return specljs.reporting.print_exception.call(null, "Caused by:", cause)
  }else {
    return null
  }
};
specljs.reporting.print_exception = function print_exception(prefix, exception) {
  if(cljs.core.truth_(prefix)) {
    cljs.core.println.call(null, prefix, [cljs.core.str(exception)].join(""))
  }else {
    cljs.core.println.call(null, [cljs.core.str(exception)].join(""))
  }
  return specljs.reporting.print_stack_levels.call(null, exception)
};
specljs.reporting.stack_trace_str = function stack_trace_str(exception) {
  var sb__3941__auto__ = new goog.string.StringBuffer;
  var _STAR_print_fn_STAR_17901_17902 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function(x__3942__auto__) {
      return sb__3941__auto__.append(x__3942__auto__)
    };
    if(cljs.core.truth_(specljs.config._STAR_full_stack_trace_QMARK__STAR_)) {
      specljs.platform.print_stack_trace.call(null, exception)
    }else {
      specljs.reporting.print_exception.call(null, null, exception)
    }
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_17901_17902
  }
  return[cljs.core.str(sb__3941__auto__)].join("")
};
specljs.reporting.prefix = function() {
  var prefix__delegate = function(pre, args) {
    var value = cljs.core.apply.call(null, cljs.core.str, args);
    var lines = clojure.string.split.call(null, value, /[\r\n]+/);
    var prefixed_lines = cljs.core.map.call(null, function(value, lines) {
      return function(p1__17903_SHARP_) {
        return[cljs.core.str(pre), cljs.core.str(p1__17903_SHARP_)].join("")
      }
    }(value, lines), lines);
    return clojure.string.join.call(null, specljs.platform.endl, prefixed_lines)
  };
  var prefix = function(pre, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return prefix__delegate.call(this, pre, args)
  };
  prefix.cljs$lang$maxFixedArity = 1;
  prefix.cljs$lang$applyTo = function(arglist__17904) {
    var pre = cljs.core.first(arglist__17904);
    var args = cljs.core.rest(arglist__17904);
    return prefix__delegate(pre, args)
  };
  prefix.cljs$core$IFn$_invoke$arity$variadic = prefix__delegate;
  return prefix
}();
specljs.reporting.indent = function() {
  var indent__delegate = function(n, args) {
    var spaces = n * 2 | 0;
    var indention = cljs.core.reduce.call(null, function(spaces) {
      return function(p, _) {
        return[cljs.core.str(" "), cljs.core.str(p)].join("")
      }
    }(spaces), "", cljs.core.range.call(null, spaces));
    return cljs.core.apply.call(null, specljs.reporting.prefix, indention, args)
  };
  var indent = function(n, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return indent__delegate.call(this, n, args)
  };
  indent.cljs$lang$maxFixedArity = 1;
  indent.cljs$lang$applyTo = function(arglist__17905) {
    var n = cljs.core.first(arglist__17905);
    var args = cljs.core.rest(arglist__17905);
    return indent__delegate(n, args)
  };
  indent.cljs$core$IFn$_invoke$arity$variadic = indent__delegate;
  return indent
}();
specljs.reporting.report_description_STAR_ = function report_description_STAR_(reporters, description) {
  var seq__17910 = cljs.core.seq.call(null, reporters);
  var chunk__17911 = null;
  var count__17912 = 0;
  var i__17913 = 0;
  while(true) {
    if(i__17913 < count__17912) {
      var reporter = cljs.core._nth.call(null, chunk__17911, i__17913);
      specljs.reporting.report_description.call(null, reporter, description);
      var G__17914 = seq__17910;
      var G__17915 = chunk__17911;
      var G__17916 = count__17912;
      var G__17917 = i__17913 + 1;
      seq__17910 = G__17914;
      chunk__17911 = G__17915;
      count__17912 = G__17916;
      i__17913 = G__17917;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17910);
      if(temp__4092__auto__) {
        var seq__17910__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17910__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17910__$1);
          var G__17918 = cljs.core.chunk_rest.call(null, seq__17910__$1);
          var G__17919 = c__3844__auto__;
          var G__17920 = cljs.core.count.call(null, c__3844__auto__);
          var G__17921 = 0;
          seq__17910 = G__17918;
          chunk__17911 = G__17919;
          count__17912 = G__17920;
          i__17913 = G__17921;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17910__$1);
          specljs.reporting.report_description.call(null, reporter, description);
          var G__17922 = cljs.core.next.call(null, seq__17910__$1);
          var G__17923 = null;
          var G__17924 = 0;
          var G__17925 = 0;
          seq__17910 = G__17922;
          chunk__17911 = G__17923;
          count__17912 = G__17924;
          i__17913 = G__17925;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_runs_STAR_ = function report_runs_STAR_(reporters, results) {
  var seq__17930 = cljs.core.seq.call(null, reporters);
  var chunk__17931 = null;
  var count__17932 = 0;
  var i__17933 = 0;
  while(true) {
    if(i__17933 < count__17932) {
      var reporter = cljs.core._nth.call(null, chunk__17931, i__17933);
      specljs.reporting.report_runs.call(null, reporter, results);
      var G__17934 = seq__17930;
      var G__17935 = chunk__17931;
      var G__17936 = count__17932;
      var G__17937 = i__17933 + 1;
      seq__17930 = G__17934;
      chunk__17931 = G__17935;
      count__17932 = G__17936;
      i__17933 = G__17937;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17930);
      if(temp__4092__auto__) {
        var seq__17930__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17930__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17930__$1);
          var G__17938 = cljs.core.chunk_rest.call(null, seq__17930__$1);
          var G__17939 = c__3844__auto__;
          var G__17940 = cljs.core.count.call(null, c__3844__auto__);
          var G__17941 = 0;
          seq__17930 = G__17938;
          chunk__17931 = G__17939;
          count__17932 = G__17940;
          i__17933 = G__17941;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17930__$1);
          specljs.reporting.report_runs.call(null, reporter, results);
          var G__17942 = cljs.core.next.call(null, seq__17930__$1);
          var G__17943 = null;
          var G__17944 = 0;
          var G__17945 = 0;
          seq__17930 = G__17942;
          chunk__17931 = G__17943;
          count__17932 = G__17944;
          i__17933 = G__17945;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_message_STAR_ = function report_message_STAR_(reporters, message) {
  var seq__17950 = cljs.core.seq.call(null, reporters);
  var chunk__17951 = null;
  var count__17952 = 0;
  var i__17953 = 0;
  while(true) {
    if(i__17953 < count__17952) {
      var reporter = cljs.core._nth.call(null, chunk__17951, i__17953);
      specljs.reporting.report_message.call(null, reporter, message);
      var G__17954 = seq__17950;
      var G__17955 = chunk__17951;
      var G__17956 = count__17952;
      var G__17957 = i__17953 + 1;
      seq__17950 = G__17954;
      chunk__17951 = G__17955;
      count__17952 = G__17956;
      i__17953 = G__17957;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17950);
      if(temp__4092__auto__) {
        var seq__17950__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17950__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17950__$1);
          var G__17958 = cljs.core.chunk_rest.call(null, seq__17950__$1);
          var G__17959 = c__3844__auto__;
          var G__17960 = cljs.core.count.call(null, c__3844__auto__);
          var G__17961 = 0;
          seq__17950 = G__17958;
          chunk__17951 = G__17959;
          count__17952 = G__17960;
          i__17953 = G__17961;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17950__$1);
          specljs.reporting.report_message.call(null, reporter, message);
          var G__17962 = cljs.core.next.call(null, seq__17950__$1);
          var G__17963 = null;
          var G__17964 = 0;
          var G__17965 = 0;
          seq__17950 = G__17962;
          chunk__17951 = G__17963;
          count__17952 = G__17964;
          i__17953 = G__17965;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_error_STAR_ = function report_error_STAR_(reporters, exception) {
  var seq__17970 = cljs.core.seq.call(null, reporters);
  var chunk__17971 = null;
  var count__17972 = 0;
  var i__17973 = 0;
  while(true) {
    if(i__17973 < count__17972) {
      var reporter = cljs.core._nth.call(null, chunk__17971, i__17973);
      specljs.reporting.report_error.call(null, reporter, exception);
      var G__17974 = seq__17970;
      var G__17975 = chunk__17971;
      var G__17976 = count__17972;
      var G__17977 = i__17973 + 1;
      seq__17970 = G__17974;
      chunk__17971 = G__17975;
      count__17972 = G__17976;
      i__17973 = G__17977;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17970);
      if(temp__4092__auto__) {
        var seq__17970__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17970__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17970__$1);
          var G__17978 = cljs.core.chunk_rest.call(null, seq__17970__$1);
          var G__17979 = c__3844__auto__;
          var G__17980 = cljs.core.count.call(null, c__3844__auto__);
          var G__17981 = 0;
          seq__17970 = G__17978;
          chunk__17971 = G__17979;
          count__17972 = G__17980;
          i__17973 = G__17981;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17970__$1);
          specljs.reporting.report_error.call(null, reporter, exception);
          var G__17982 = cljs.core.next.call(null, seq__17970__$1);
          var G__17983 = null;
          var G__17984 = 0;
          var G__17985 = 0;
          seq__17970 = G__17982;
          chunk__17971 = G__17983;
          count__17972 = G__17984;
          i__17973 = G__17985;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
goog.provide("specljs.components");
goog.require("cljs.core");
specljs.components.SpecComponent = {};
specljs.components.install = function install(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$components$SpecComponent$install$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$components$SpecComponent$install$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.components.install[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.components.install["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "SpecComponent.install", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.components.SpecComponent["object"] = true;
specljs.components.install["object"] = function(this$, description) {
  return null
};
cljs.core.PersistentVector.prototype.specljs$components$SpecComponent$ = true;
cljs.core.PersistentVector.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17626 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17627 = null;
  var count__17628 = 0;
  var i__17629 = 0;
  while(true) {
    if(i__17629 < count__17628) {
      var component = cljs.core._nth.call(null, chunk__17627, i__17629);
      specljs.components.install.call(null, component, description);
      var G__17642 = seq__17626;
      var G__17643 = chunk__17627;
      var G__17644 = count__17628;
      var G__17645 = i__17629 + 1;
      seq__17626 = G__17642;
      chunk__17627 = G__17643;
      count__17628 = G__17644;
      i__17629 = G__17645;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17626);
      if(temp__4092__auto__) {
        var seq__17626__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17626__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17626__$1);
          var G__17646 = cljs.core.chunk_rest.call(null, seq__17626__$1);
          var G__17647 = c__3844__auto__;
          var G__17648 = cljs.core.count.call(null, c__3844__auto__);
          var G__17649 = 0;
          seq__17626 = G__17646;
          chunk__17627 = G__17647;
          count__17628 = G__17648;
          i__17629 = G__17649;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17626__$1);
          specljs.components.install.call(null, component, description);
          var G__17650 = cljs.core.next.call(null, seq__17626__$1);
          var G__17651 = null;
          var G__17652 = 0;
          var G__17653 = 0;
          seq__17626 = G__17650;
          chunk__17627 = G__17651;
          count__17628 = G__17652;
          i__17629 = G__17653;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.EmptyList.prototype.specljs$components$SpecComponent$ = true;
cljs.core.EmptyList.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17630 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17631 = null;
  var count__17632 = 0;
  var i__17633 = 0;
  while(true) {
    if(i__17633 < count__17632) {
      var component = cljs.core._nth.call(null, chunk__17631, i__17633);
      specljs.components.install.call(null, component, description);
      var G__17654 = seq__17630;
      var G__17655 = chunk__17631;
      var G__17656 = count__17632;
      var G__17657 = i__17633 + 1;
      seq__17630 = G__17654;
      chunk__17631 = G__17655;
      count__17632 = G__17656;
      i__17633 = G__17657;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17630);
      if(temp__4092__auto__) {
        var seq__17630__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17630__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17630__$1);
          var G__17658 = cljs.core.chunk_rest.call(null, seq__17630__$1);
          var G__17659 = c__3844__auto__;
          var G__17660 = cljs.core.count.call(null, c__3844__auto__);
          var G__17661 = 0;
          seq__17630 = G__17658;
          chunk__17631 = G__17659;
          count__17632 = G__17660;
          i__17633 = G__17661;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17630__$1);
          specljs.components.install.call(null, component, description);
          var G__17662 = cljs.core.next.call(null, seq__17630__$1);
          var G__17663 = null;
          var G__17664 = 0;
          var G__17665 = 0;
          seq__17630 = G__17662;
          chunk__17631 = G__17663;
          count__17632 = G__17664;
          i__17633 = G__17665;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.List.prototype.specljs$components$SpecComponent$ = true;
cljs.core.List.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17634 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17635 = null;
  var count__17636 = 0;
  var i__17637 = 0;
  while(true) {
    if(i__17637 < count__17636) {
      var component = cljs.core._nth.call(null, chunk__17635, i__17637);
      specljs.components.install.call(null, component, description);
      var G__17666 = seq__17634;
      var G__17667 = chunk__17635;
      var G__17668 = count__17636;
      var G__17669 = i__17637 + 1;
      seq__17634 = G__17666;
      chunk__17635 = G__17667;
      count__17636 = G__17668;
      i__17637 = G__17669;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17634);
      if(temp__4092__auto__) {
        var seq__17634__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17634__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17634__$1);
          var G__17670 = cljs.core.chunk_rest.call(null, seq__17634__$1);
          var G__17671 = c__3844__auto__;
          var G__17672 = cljs.core.count.call(null, c__3844__auto__);
          var G__17673 = 0;
          seq__17634 = G__17670;
          chunk__17635 = G__17671;
          count__17636 = G__17672;
          i__17637 = G__17673;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17634__$1);
          specljs.components.install.call(null, component, description);
          var G__17674 = cljs.core.next.call(null, seq__17634__$1);
          var G__17675 = null;
          var G__17676 = 0;
          var G__17677 = 0;
          seq__17634 = G__17674;
          chunk__17635 = G__17675;
          count__17636 = G__17676;
          i__17637 = G__17677;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.LazySeq.prototype.specljs$components$SpecComponent$ = true;
cljs.core.LazySeq.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17638 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17639 = null;
  var count__17640 = 0;
  var i__17641 = 0;
  while(true) {
    if(i__17641 < count__17640) {
      var component = cljs.core._nth.call(null, chunk__17639, i__17641);
      specljs.components.install.call(null, component, description);
      var G__17678 = seq__17638;
      var G__17679 = chunk__17639;
      var G__17680 = count__17640;
      var G__17681 = i__17641 + 1;
      seq__17638 = G__17678;
      chunk__17639 = G__17679;
      count__17640 = G__17680;
      i__17641 = G__17681;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17638);
      if(temp__4092__auto__) {
        var seq__17638__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17638__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17638__$1);
          var G__17682 = cljs.core.chunk_rest.call(null, seq__17638__$1);
          var G__17683 = c__3844__auto__;
          var G__17684 = cljs.core.count.call(null, c__3844__auto__);
          var G__17685 = 0;
          seq__17638 = G__17682;
          chunk__17639 = G__17683;
          count__17640 = G__17684;
          i__17641 = G__17685;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17638__$1);
          specljs.components.install.call(null, component, description);
          var G__17686 = cljs.core.next.call(null, seq__17638__$1);
          var G__17687 = null;
          var G__17688 = 0;
          var G__17689 = 0;
          seq__17638 = G__17686;
          chunk__17639 = G__17687;
          count__17640 = G__17688;
          i__17641 = G__17689;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.components.Description = function(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds) {
  this.name = name;
  this.ns = ns;
  this.parent = parent;
  this.children = children;
  this.charcteristics = charcteristics;
  this.tags = tags;
  this.befores = befores;
  this.before_alls = before_alls;
  this.afters = afters;
  this.after_alls = after_alls;
  this.withs = withs;
  this.with_alls = with_alls;
  this.arounds = arounds
};
specljs.components.Description.cljs$lang$type = true;
specljs.components.Description.cljs$lang$ctorStr = "specljs.components/Description";
specljs.components.Description.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Description")
};
specljs.components.Description.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return[cljs.core.str("Description: "), cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("")
};
specljs.components.Description.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Description.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.children, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Description = function __GT_Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds) {
  return new specljs.components.Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds)
};
specljs.components.new_description = function new_description(name, ns) {
  return new specljs.components.Description(name, ns, cljs.core.atom.call(null, null), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), 
  cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY))
};
specljs.components.Characteristic = function(name, parent, body) {
  this.name = name;
  this.parent = parent;
  this.body = body
};
specljs.components.Characteristic.cljs$lang$type = true;
specljs.components.Characteristic.cljs$lang$ctorStr = "specljs.components/Characteristic";
specljs.components.Characteristic.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Characteristic")
};
specljs.components.Characteristic.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return[cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("")
};
specljs.components.Characteristic.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Characteristic.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.charcteristics, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Characteristic = function __GT_Characteristic(name, parent, body) {
  return new specljs.components.Characteristic(name, parent, body)
};
specljs.components.new_characteristic = function() {
  var new_characteristic = null;
  var new_characteristic__2 = function(name, body) {
    return new specljs.components.Characteristic(name, cljs.core.atom.call(null, null), body)
  };
  var new_characteristic__3 = function(name, description, body) {
    return new specljs.components.Characteristic(name, cljs.core.atom.call(null, description), body)
  };
  new_characteristic = function(name, description, body) {
    switch(arguments.length) {
      case 2:
        return new_characteristic__2.call(this, name, description);
      case 3:
        return new_characteristic__3.call(this, name, description, body)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  new_characteristic.cljs$core$IFn$_invoke$arity$2 = new_characteristic__2;
  new_characteristic.cljs$core$IFn$_invoke$arity$3 = new_characteristic__3;
  return new_characteristic
}();
specljs.components.Before = function(body) {
  this.body = body
};
specljs.components.Before.cljs$lang$type = true;
specljs.components.Before.cljs$lang$ctorStr = "specljs.components/Before";
specljs.components.Before.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Before")
};
specljs.components.Before.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Before.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.befores, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Before = function __GT_Before(body) {
  return new specljs.components.Before(body)
};
specljs.components.new_before = function new_before(body) {
  return new specljs.components.Before(body)
};
specljs.components.After = function(body) {
  this.body = body
};
specljs.components.After.cljs$lang$type = true;
specljs.components.After.cljs$lang$ctorStr = "specljs.components/After";
specljs.components.After.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/After")
};
specljs.components.After.prototype.specljs$components$SpecComponent$ = true;
specljs.components.After.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.afters, cljs.core.conj, this$__$1)
};
specljs.components.__GT_After = function __GT_After(body) {
  return new specljs.components.After(body)
};
specljs.components.new_after = function new_after(body) {
  return new specljs.components.After(body)
};
specljs.components.Around = function(body) {
  this.body = body
};
specljs.components.Around.cljs$lang$type = true;
specljs.components.Around.cljs$lang$ctorStr = "specljs.components/Around";
specljs.components.Around.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Around")
};
specljs.components.Around.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Around.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.arounds, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Around = function __GT_Around(body) {
  return new specljs.components.Around(body)
};
specljs.components.new_around = function new_around(body) {
  return new specljs.components.Around(body)
};
specljs.components.BeforeAll = function(body) {
  this.body = body
};
specljs.components.BeforeAll.cljs$lang$type = true;
specljs.components.BeforeAll.cljs$lang$ctorStr = "specljs.components/BeforeAll";
specljs.components.BeforeAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/BeforeAll")
};
specljs.components.BeforeAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.BeforeAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.before_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_BeforeAll = function __GT_BeforeAll(body) {
  return new specljs.components.BeforeAll(body)
};
specljs.components.new_before_all = function new_before_all(body) {
  return new specljs.components.BeforeAll(body)
};
specljs.components.AfterAll = function(body) {
  this.body = body
};
specljs.components.AfterAll.cljs$lang$type = true;
specljs.components.AfterAll.cljs$lang$ctorStr = "specljs.components/AfterAll";
specljs.components.AfterAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/AfterAll")
};
specljs.components.AfterAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.AfterAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.after_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_AfterAll = function __GT_AfterAll(body) {
  return new specljs.components.AfterAll(body)
};
specljs.components.new_after_all = function new_after_all(body) {
  return new specljs.components.AfterAll(body)
};
specljs.components.With = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
specljs.components.With.cljs$lang$type = true;
specljs.components.With.cljs$lang$ctorStr = "specljs.components/With";
specljs.components.With.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/With")
};
specljs.components.With.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null))
  }else {
  }
  return cljs.core.deref.call(null, self__.value)
};
specljs.components.With.prototype.specljs$components$SpecComponent$ = true;
specljs.components.With.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.withs, cljs.core.conj, this$__$1)
};
specljs.components.__GT_With = function __GT_With(name, unique_name, body, value, bang) {
  return new specljs.components.With(name, unique_name, body, value, bang)
};
specljs.components.reset_with = function reset_with(with$) {
  cljs.core.reset_BANG_.call(null, with$.value, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402));
  if(cljs.core.truth_(with$.bang)) {
    return cljs.core.deref.call(null, with$)
  }else {
    return null
  }
};
specljs.components.new_with = function new_with(name, unique_name, body, bang) {
  var with$ = new specljs.components.With(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402)), bang);
  if(cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with$)
  }else {
  }
  return with$
};
specljs.components.WithAll = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
specljs.components.WithAll.cljs$lang$type = true;
specljs.components.WithAll.cljs$lang$ctorStr = "specljs.components/WithAll";
specljs.components.WithAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/WithAll")
};
specljs.components.WithAll.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null))
  }else {
  }
  return cljs.core.deref.call(null, self__.value)
};
specljs.components.WithAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.WithAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.with_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_WithAll = function __GT_WithAll(name, unique_name, body, value, bang) {
  return new specljs.components.WithAll(name, unique_name, body, value, bang)
};
specljs.components.new_with_all = function new_with_all(name, unique_name, body, bang) {
  var with_all = new specljs.components.WithAll(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402)), bang);
  if(cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with_all)
  }else {
  }
  return with_all
};
specljs.components.Tag = function(name) {
  this.name = name
};
specljs.components.Tag.cljs$lang$type = true;
specljs.components.Tag.cljs$lang$ctorStr = "specljs.components/Tag";
specljs.components.Tag.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Tag")
};
specljs.components.Tag.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Tag.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.tags, cljs.core.conj, self__.name)
};
specljs.components.__GT_Tag = function __GT_Tag(name) {
  return new specljs.components.Tag(name)
};
specljs.components.new_tag = function new_tag(name) {
  return new specljs.components.Tag(name)
};
goog.provide("specljs.tags");
goog.require("cljs.core");
goog.require("specljs.config");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("specljs.config");
goog.require("clojure.string");
goog.require("clojure.set");
specljs.tags.pass_includes_QMARK_ = function pass_includes_QMARK_(includes, tags) {
  if(cljs.core.empty_QMARK_.call(null, includes)) {
    return true
  }else {
    return cljs.core._EQ_.call(null, includes, clojure.set.intersection.call(null, includes, cljs.core.set.call(null, tags)))
  }
};
specljs.tags.pass_excludes_QMARK_ = function pass_excludes_QMARK_(excludes, tags) {
  if(cljs.core.empty_QMARK_.call(null, excludes)) {
    return true
  }else {
    return cljs.core.not.call(null, cljs.core.some.call(null, function(p1__17590_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, excludes, p1__17590_SHARP_)
    }, tags))
  }
};
specljs.tags.pass_tag_filter_QMARK_ = function() {
  var pass_tag_filter_QMARK_ = null;
  var pass_tag_filter_QMARK___1 = function(tags) {
    return pass_tag_filter_QMARK_.call(null, specljs.config._STAR_tag_filter_STAR_, tags)
  };
  var pass_tag_filter_QMARK___2 = function(filter, tags) {
    var and__3119__auto__ = specljs.tags.pass_includes_QMARK_.call(null, (new cljs.core.Keyword(null, "includes", "includes", 1104163901)).cljs$core$IFn$_invoke$arity$1(filter), tags);
    if(cljs.core.truth_(and__3119__auto__)) {
      return specljs.tags.pass_excludes_QMARK_.call(null, (new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)).cljs$core$IFn$_invoke$arity$1(filter), tags)
    }else {
      return and__3119__auto__
    }
  };
  pass_tag_filter_QMARK_ = function(filter, tags) {
    switch(arguments.length) {
      case 1:
        return pass_tag_filter_QMARK___1.call(this, filter);
      case 2:
        return pass_tag_filter_QMARK___2.call(this, filter, tags)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$1 = pass_tag_filter_QMARK___1;
  pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$2 = pass_tag_filter_QMARK___2;
  return pass_tag_filter_QMARK_
}();
specljs.tags.tags_for = function tags_for(context) {
  if(cljs.core.truth_(context)) {
    return clojure.set.union.call(null, tags_for.call(null, cljs.core.deref.call(null, context.parent)), cljs.core.deref.call(null, context.tags))
  }else {
    return cljs.core.PersistentHashSet.EMPTY
  }
};
specljs.tags.tag_sets_for = function tag_sets_for(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__17591_SHARP_) {
    return!(p1__17591_SHARP_ == null)
  }, function(p1__17592_SHARP_) {
    return cljs.core.deref.call(null, p1__17592_SHARP_.children)
  }, context);
  return cljs.core.map.call(null, specljs.tags.tags_for, context_seq)
};
specljs.tags.context_with_tags_seq = function context_with_tags_seq(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__17593_SHARP_) {
    return!(p1__17593_SHARP_ == null)
  }, function(p1__17594_SHARP_) {
    return cljs.core.deref.call(null, p1__17594_SHARP_.children)
  }, context);
  return cljs.core.map.call(null, function(p1__17595_SHARP_) {
    return cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "context", "context", 1965435169), p1__17595_SHARP_, new cljs.core.Keyword(null, "tag-set", "tag-set", 3758720801), specljs.tags.tags_for.call(null, p1__17595_SHARP_))
  }, context_seq)
};
specljs.tags.describe_filter = function() {
  var describe_filter = null;
  var describe_filter__0 = function() {
    return describe_filter.call(null, specljs.config._STAR_tag_filter_STAR_)
  };
  var describe_filter__1 = function(filter) {
    var includes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "includes", "includes", 1104163901)).cljs$core$IFn$_invoke$arity$1(filter)));
    var excludes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)).cljs$core$IFn$_invoke$arity$1(filter)));
    if(includes || excludes) {
      return[cljs.core.str("Filtering tags."), cljs.core.str(includes ? [cljs.core.str(" Including: "), cljs.core.str(clojure.string.join.call(null, ", ", includes)), cljs.core.str(".")].join("") : null), cljs.core.str(excludes ? [cljs.core.str(" Excluding: "), cljs.core.str(clojure.string.join.call(null, ", ", excludes)), cljs.core.str(".")].join("") : null)].join("")
    }else {
      return null
    }
  };
  describe_filter = function(filter) {
    switch(arguments.length) {
      case 0:
        return describe_filter__0.call(this);
      case 1:
        return describe_filter__1.call(this, filter)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  describe_filter.cljs$core$IFn$_invoke$arity$0 = describe_filter__0;
  describe_filter.cljs$core$IFn$_invoke$arity$1 = describe_filter__1;
  return describe_filter
}();
goog.provide("specljs.running");
goog.require("cljs.core");
goog.require("specljs.components");
goog.require("specljs.config");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.tags");
goog.require("specljs.platform");
goog.require("specljs.tags");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("specljs.components");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.running.eval_components = function eval_components(components) {
  var seq__17694 = cljs.core.seq.call(null, components);
  var chunk__17695 = null;
  var count__17696 = 0;
  var i__17697 = 0;
  while(true) {
    if(i__17697 < count__17696) {
      var component = cljs.core._nth.call(null, chunk__17695, i__17697);
      component.body.call(null);
      var G__17698 = seq__17694;
      var G__17699 = chunk__17695;
      var G__17700 = count__17696;
      var G__17701 = i__17697 + 1;
      seq__17694 = G__17698;
      chunk__17695 = G__17699;
      count__17696 = G__17700;
      i__17697 = G__17701;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17694);
      if(temp__4092__auto__) {
        var seq__17694__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17694__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17694__$1);
          var G__17702 = cljs.core.chunk_rest.call(null, seq__17694__$1);
          var G__17703 = c__3844__auto__;
          var G__17704 = cljs.core.count.call(null, c__3844__auto__);
          var G__17705 = 0;
          seq__17694 = G__17702;
          chunk__17695 = G__17703;
          count__17696 = G__17704;
          i__17697 = G__17705;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17694__$1);
          component.body.call(null);
          var G__17706 = cljs.core.next.call(null, seq__17694__$1);
          var G__17707 = null;
          var G__17708 = 0;
          var G__17709 = 0;
          seq__17694 = G__17706;
          chunk__17695 = G__17707;
          count__17696 = G__17708;
          i__17697 = G__17709;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.running.nested_fns = function nested_fns(base, fns) {
  if(cljs.core.seq.call(null, fns)) {
    return cljs.core.partial.call(null, cljs.core.first.call(null, fns), nested_fns.call(null, base, cljs.core.rest.call(null, fns)))
  }else {
    return base
  }
};
specljs.running.eval_characteristic = function eval_characteristic(befores, body, afters) {
  specljs.running.eval_components.call(null, befores);
  try {
    return body.call(null)
  }finally {
    specljs.running.eval_components.call(null, afters)
  }
};
specljs.running.reset_withs = function reset_withs(withs) {
  var seq__17714 = cljs.core.seq.call(null, withs);
  var chunk__17715 = null;
  var count__17716 = 0;
  var i__17717 = 0;
  while(true) {
    if(i__17717 < count__17716) {
      var with$ = cljs.core._nth.call(null, chunk__17715, i__17717);
      specljs.components.reset_with.call(null, with$);
      var G__17718 = seq__17714;
      var G__17719 = chunk__17715;
      var G__17720 = count__17716;
      var G__17721 = i__17717 + 1;
      seq__17714 = G__17718;
      chunk__17715 = G__17719;
      count__17716 = G__17720;
      i__17717 = G__17721;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17714);
      if(temp__4092__auto__) {
        var seq__17714__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17714__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17714__$1);
          var G__17722 = cljs.core.chunk_rest.call(null, seq__17714__$1);
          var G__17723 = c__3844__auto__;
          var G__17724 = cljs.core.count.call(null, c__3844__auto__);
          var G__17725 = 0;
          seq__17714 = G__17722;
          chunk__17715 = G__17723;
          count__17716 = G__17724;
          i__17717 = G__17725;
          continue
        }else {
          var with$ = cljs.core.first.call(null, seq__17714__$1);
          specljs.components.reset_with.call(null, with$);
          var G__17726 = cljs.core.next.call(null, seq__17714__$1);
          var G__17727 = null;
          var G__17728 = 0;
          var G__17729 = 0;
          seq__17714 = G__17726;
          chunk__17715 = G__17727;
          count__17716 = G__17728;
          i__17717 = G__17729;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.running.collect_components = function collect_components(getter, description) {
  var description__$1 = description;
  var components = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(cljs.core.truth_(description__$1)) {
      var G__17730 = cljs.core.deref.call(null, description__$1.parent);
      var G__17731 = cljs.core.concat.call(null, getter.call(null, description__$1), components);
      description__$1 = G__17730;
      components = G__17731;
      continue
    }else {
      return components
    }
    break
  }
};
specljs.running.report_result = function report_result(result_constructor, characteristic, start_time, reporters, failure) {
  var present_args = cljs.core.filter.call(null, cljs.core.identity, cljs.core.PersistentVector.fromArray([characteristic, specljs.platform.secs_since.call(null, start_time), failure], true));
  var result = cljs.core.apply.call(null, result_constructor, present_args);
  specljs.reporting.report_run.call(null, result, reporters);
  return result
};
specljs.running.do_characteristic = function do_characteristic(characteristic, reporters) {
  var description = cljs.core.deref.call(null, characteristic.parent);
  var befores = specljs.running.collect_components.call(null, function(description) {
    return function(p1__17732_SHARP_) {
      return cljs.core.deref.call(null, p1__17732_SHARP_.befores)
    }
  }(description), description);
  var afters = specljs.running.collect_components.call(null, function(description, befores) {
    return function(p1__17733_SHARP_) {
      return cljs.core.deref.call(null, p1__17733_SHARP_.afters)
    }
  }(description, befores), description);
  var core_body = characteristic.body;
  var before_and_after_body = function(description, befores, afters, core_body) {
    return function() {
      return specljs.running.eval_characteristic.call(null, befores, core_body, afters)
    }
  }(description, befores, afters, core_body);
  var arounds = specljs.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body) {
    return function(p1__17734_SHARP_) {
      return cljs.core.deref.call(null, p1__17734_SHARP_.arounds)
    }
  }(description, befores, afters, core_body, before_and_after_body), description);
  var full_body = specljs.running.nested_fns.call(null, before_and_after_body, cljs.core.map.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds) {
    return function(p1__17735_SHARP_) {
      return p1__17735_SHARP_.body
    }
  }(description, befores, afters, core_body, before_and_after_body, arounds), arounds));
  var withs = specljs.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds, full_body) {
    return function(p1__17736_SHARP_) {
      return cljs.core.deref.call(null, p1__17736_SHARP_.withs)
    }
  }(description, befores, afters, core_body, before_and_after_body, arounds, full_body), description);
  var start_time = specljs.platform.current_time.call(null);
  try {
    full_body.call(null);
    return specljs.running.report_result.call(null, specljs.results.pass_result, characteristic, start_time, reporters, null)
  }catch(e17738) {
    if(e17738 instanceof Object) {
      var e = e17738;
      if(cljs.core.truth_(specljs.platform.pending_QMARK_.call(null, e))) {
        return specljs.running.report_result.call(null, specljs.results.pending_result, characteristic, start_time, reporters, e)
      }else {
        return specljs.running.report_result.call(null, specljs.results.fail_result, characteristic, start_time, reporters, e)
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e17738;
      }else {
        return null
      }
    }
  }finally {
    specljs.running.reset_withs.call(null, withs)
  }
};
specljs.running.do_characteristics = function do_characteristics(characteristics, reporters) {
  return cljs.core.doall.call(null, function() {
    var iter__3813__auto__ = function iter__17743(s__17744) {
      return new cljs.core.LazySeq(null, function() {
        var s__17744__$1 = s__17744;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__17744__$1);
          if(temp__4092__auto__) {
            var s__17744__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__17744__$2)) {
              var c__3811__auto__ = cljs.core.chunk_first.call(null, s__17744__$2);
              var size__3812__auto__ = cljs.core.count.call(null, c__3811__auto__);
              var b__17746 = cljs.core.chunk_buffer.call(null, size__3812__auto__);
              if(function() {
                var i__17745 = 0;
                while(true) {
                  if(i__17745 < size__3812__auto__) {
                    var characteristic = cljs.core._nth.call(null, c__3811__auto__, i__17745);
                    cljs.core.chunk_append.call(null, b__17746, specljs.running.do_characteristic.call(null, characteristic, reporters));
                    var G__17747 = i__17745 + 1;
                    i__17745 = G__17747;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17746), iter__17743.call(null, cljs.core.chunk_rest.call(null, s__17744__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17746), null)
              }
            }else {
              var characteristic = cljs.core.first.call(null, s__17744__$2);
              return cljs.core.cons.call(null, specljs.running.do_characteristic.call(null, characteristic, reporters), iter__17743.call(null, cljs.core.rest.call(null, s__17744__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__3813__auto__.call(null, characteristics)
  }())
};
specljs.running.do_child_contexts = function do_child_contexts(context, results, reporters) {
  var results__$1 = results;
  var contexts = cljs.core.deref.call(null, context.children);
  while(true) {
    if(cljs.core.seq.call(null, contexts)) {
      var G__17748 = cljs.core.concat.call(null, results__$1, specljs.running.do_description.call(null, cljs.core.first.call(null, contexts), reporters));
      var G__17749 = cljs.core.rest.call(null, contexts);
      results__$1 = G__17748;
      contexts = G__17749;
      continue
    }else {
      specljs.running.eval_components.call(null, cljs.core.deref.call(null, context.after_alls));
      return results__$1
    }
    break
  }
};
specljs.running.results_for_context = function results_for_context(context, reporters) {
  if(cljs.core.truth_(specljs.tags.pass_tag_filter_QMARK_.call(null, specljs.tags.tags_for.call(null, context)))) {
    return specljs.running.do_characteristics.call(null, cljs.core.deref.call(null, context.charcteristics), reporters)
  }else {
    return cljs.core.PersistentVector.EMPTY
  }
};
specljs.running.with_withs_bound = function with_withs_bound(description, body) {
  var withs = cljs.core.concat.call(null, cljs.core.deref.call(null, description.withs), cljs.core.deref.call(null, description.with_alls));
  var ns = clojure.string.replace.call(null, description.ns, "-", "_");
  var var_names = cljs.core.map.call(null, function(withs, ns) {
    return function(p1__17750_SHARP_) {
      return[cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__17750_SHARP_.name))].join("")
    }
  }(withs, ns), withs);
  var unique_names = cljs.core.map.call(null, function(withs, ns, var_names) {
    return function(p1__17751_SHARP_) {
      return[cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__17751_SHARP_.unique_name))].join("")
    }
  }(withs, ns, var_names), withs);
  var seq__17764_17776 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, var_names, unique_names)));
  var chunk__17765_17777 = null;
  var count__17766_17778 = 0;
  var i__17767_17779 = 0;
  while(true) {
    if(i__17767_17779 < count__17766_17778) {
      var vec__17768_17780 = cljs.core._nth.call(null, chunk__17765_17777, i__17767_17779);
      var n_17781 = cljs.core.nth.call(null, vec__17768_17780, 0, null);
      var un_17782 = cljs.core.nth.call(null, vec__17768_17780, 1, null);
      var code_17783 = [cljs.core.str(n_17781), cljs.core.str(" \x3d "), cljs.core.str(un_17782), cljs.core.str(";")].join("");
      eval(code_17783);
      var G__17784 = seq__17764_17776;
      var G__17785 = chunk__17765_17777;
      var G__17786 = count__17766_17778;
      var G__17787 = i__17767_17779 + 1;
      seq__17764_17776 = G__17784;
      chunk__17765_17777 = G__17785;
      count__17766_17778 = G__17786;
      i__17767_17779 = G__17787;
      continue
    }else {
      var temp__4092__auto___17788 = cljs.core.seq.call(null, seq__17764_17776);
      if(temp__4092__auto___17788) {
        var seq__17764_17789__$1 = temp__4092__auto___17788;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17764_17789__$1)) {
          var c__3844__auto___17790 = cljs.core.chunk_first.call(null, seq__17764_17789__$1);
          var G__17791 = cljs.core.chunk_rest.call(null, seq__17764_17789__$1);
          var G__17792 = c__3844__auto___17790;
          var G__17793 = cljs.core.count.call(null, c__3844__auto___17790);
          var G__17794 = 0;
          seq__17764_17776 = G__17791;
          chunk__17765_17777 = G__17792;
          count__17766_17778 = G__17793;
          i__17767_17779 = G__17794;
          continue
        }else {
          var vec__17769_17795 = cljs.core.first.call(null, seq__17764_17789__$1);
          var n_17796 = cljs.core.nth.call(null, vec__17769_17795, 0, null);
          var un_17797 = cljs.core.nth.call(null, vec__17769_17795, 1, null);
          var code_17798 = [cljs.core.str(n_17796), cljs.core.str(" \x3d "), cljs.core.str(un_17797), cljs.core.str(";")].join("");
          eval(code_17798);
          var G__17799 = cljs.core.next.call(null, seq__17764_17789__$1);
          var G__17800 = null;
          var G__17801 = 0;
          var G__17802 = 0;
          seq__17764_17776 = G__17799;
          chunk__17765_17777 = G__17800;
          count__17766_17778 = G__17801;
          i__17767_17779 = G__17802;
          continue
        }
      }else {
      }
    }
    break
  }
  try {
    return body.call(null)
  }finally {
    var seq__17770_17803 = cljs.core.seq.call(null, var_names);
    var chunk__17771_17804 = null;
    var count__17772_17805 = 0;
    var i__17773_17806 = 0;
    while(true) {
      if(i__17773_17806 < count__17772_17805) {
        var vec__17774_17807 = cljs.core._nth.call(null, chunk__17771_17804, i__17773_17806);
        var n_17808 = cljs.core.nth.call(null, vec__17774_17807, 0, null);
        var code_17809 = [cljs.core.str(n_17808), cljs.core.str(" \x3d null;")].join("");
        eval(code_17809);
        var G__17810 = seq__17770_17803;
        var G__17811 = chunk__17771_17804;
        var G__17812 = count__17772_17805;
        var G__17813 = i__17773_17806 + 1;
        seq__17770_17803 = G__17810;
        chunk__17771_17804 = G__17811;
        count__17772_17805 = G__17812;
        i__17773_17806 = G__17813;
        continue
      }else {
        var temp__4092__auto___17814 = cljs.core.seq.call(null, seq__17770_17803);
        if(temp__4092__auto___17814) {
          var seq__17770_17815__$1 = temp__4092__auto___17814;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17770_17815__$1)) {
            var c__3844__auto___17816 = cljs.core.chunk_first.call(null, seq__17770_17815__$1);
            var G__17817 = cljs.core.chunk_rest.call(null, seq__17770_17815__$1);
            var G__17818 = c__3844__auto___17816;
            var G__17819 = cljs.core.count.call(null, c__3844__auto___17816);
            var G__17820 = 0;
            seq__17770_17803 = G__17817;
            chunk__17771_17804 = G__17818;
            count__17772_17805 = G__17819;
            i__17773_17806 = G__17820;
            continue
          }else {
            var vec__17775_17821 = cljs.core.first.call(null, seq__17770_17815__$1);
            var n_17822 = cljs.core.nth.call(null, vec__17775_17821, 0, null);
            var code_17823 = [cljs.core.str(n_17822), cljs.core.str(" \x3d null;")].join("");
            eval(code_17823);
            var G__17824 = cljs.core.next.call(null, seq__17770_17815__$1);
            var G__17825 = null;
            var G__17826 = 0;
            var G__17827 = 0;
            seq__17770_17803 = G__17824;
            chunk__17771_17804 = G__17825;
            count__17772_17805 = G__17826;
            i__17773_17806 = G__17827;
            continue
          }
        }else {
        }
      }
      break
    }
  }
};
specljs.running.do_description = function do_description(description, reporters) {
  var tag_sets = specljs.tags.tag_sets_for.call(null, description);
  if(cljs.core.truth_(cljs.core.some.call(null, specljs.tags.pass_tag_filter_QMARK_, tag_sets))) {
    specljs.reporting.report_description_STAR_.call(null, reporters, description);
    return specljs.running.with_withs_bound.call(null, description, function() {
      specljs.running.eval_components.call(null, cljs.core.deref.call(null, description.before_alls));
      try {
        var results = specljs.running.results_for_context.call(null, description, reporters);
        return specljs.running.do_child_contexts.call(null, description, results, reporters)
      }finally {
        specljs.running.reset_withs.call(null, cljs.core.deref.call(null, description.with_alls))
      }
    })
  }else {
    return null
  }
};
specljs.running.process_compile_error = function process_compile_error(runner, e) {
  var error_result = specljs.results.error_result.call(null, e);
  cljs.core.swap_BANG_.call(null, runner.results, cljs.core.conj, error_result);
  return specljs.reporting.report_run.call(null, error_result, specljs.config.active_reporters.call(null))
};
specljs.running.Runner = {};
specljs.running.run_directories = function run_directories(this$, directories, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_directories$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_directories$arity$3(this$, directories, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_directories[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_directories["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-directories", this$);
        }
      }
    }().call(null, this$, directories, reporters)
  }
};
specljs.running.submit_description = function submit_description(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$submit_description$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$submit_description$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.submit_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.submit_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.submit-description", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.running.run_description = function run_description(this$, description, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_description$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_description$arity$3(this$, description, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-description", this$);
        }
      }
    }().call(null, this$, description, reporters)
  }
};
specljs.running.run_and_report = function run_and_report(this$, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_and_report$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_and_report$arity$2(this$, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_and_report[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_and_report["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-and-report", this$);
        }
      }
    }().call(null, this$, reporters)
  }
};
goog.provide("specljs.report.progress");
goog.require("cljs.core");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("specljs.reporting");
goog.require("specljs.results");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.platform");
goog.require("specljs.config");
specljs.report.progress.full_name = function full_name(characteristic) {
  var context = cljs.core.deref.call(null, characteristic.parent);
  var name = characteristic.name;
  while(true) {
    if(cljs.core.truth_(context)) {
      var G__17528 = cljs.core.deref.call(null, context.parent);
      var G__17529 = [cljs.core.str(context.name), cljs.core.str(" "), cljs.core.str(name)].join("");
      context = G__17528;
      name = G__17529;
      continue
    }else {
      return name
    }
    break
  }
};
specljs.report.progress.print_failure = function print_failure(id, result) {
  var characteristic = result.characteristic;
  var failure = result.failure;
  cljs.core.println.call(null);
  cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, id, ") ", specljs.report.progress.full_name.call(null, characteristic)));
  cljs.core.println.call(null, specljs.reporting.red.call(null, specljs.reporting.indent.call(null, 2.5, specljs.platform.error_message.call(null, failure))));
  if(cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, failure), specljs.platform.failure)) {
    return cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.platform.failure_source.call(null, failure))))
  }else {
    return cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, failure))))
  }
};
specljs.report.progress.print_failures = function print_failures(failures) {
  if(cljs.core.seq.call(null, failures)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Failures:")
  }else {
  }
  var n__3891__auto__ = cljs.core.count.call(null, failures);
  var i = 0;
  while(true) {
    if(i < n__3891__auto__) {
      specljs.report.progress.print_failure.call(null, i + 1, cljs.core.nth.call(null, failures, i));
      var G__17530 = i + 1;
      i = G__17530;
      continue
    }else {
      return null
    }
    break
  }
};
specljs.report.progress.print_pendings = function print_pendings(pending_results) {
  if(cljs.core.seq.call(null, pending_results)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Pending:")
  }else {
  }
  var seq__17535 = cljs.core.seq.call(null, pending_results);
  var chunk__17536 = null;
  var count__17537 = 0;
  var i__17538 = 0;
  while(true) {
    if(i__17538 < count__17537) {
      var result = cljs.core._nth.call(null, chunk__17536, i__17538);
      cljs.core.println.call(null);
      cljs.core.println.call(null, specljs.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(specljs.report.progress.full_name.call(null, result.characteristic))].join("")));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.error_message.call(null, result.exception))].join("")));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.failure_source.call(null, result.exception))].join("")));
      var G__17539 = seq__17535;
      var G__17540 = chunk__17536;
      var G__17541 = count__17537;
      var G__17542 = i__17538 + 1;
      seq__17535 = G__17539;
      chunk__17536 = G__17540;
      count__17537 = G__17541;
      i__17538 = G__17542;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17535);
      if(temp__4092__auto__) {
        var seq__17535__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17535__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17535__$1);
          var G__17543 = cljs.core.chunk_rest.call(null, seq__17535__$1);
          var G__17544 = c__3844__auto__;
          var G__17545 = cljs.core.count.call(null, c__3844__auto__);
          var G__17546 = 0;
          seq__17535 = G__17543;
          chunk__17536 = G__17544;
          count__17537 = G__17545;
          i__17538 = G__17546;
          continue
        }else {
          var result = cljs.core.first.call(null, seq__17535__$1);
          cljs.core.println.call(null);
          cljs.core.println.call(null, specljs.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(specljs.report.progress.full_name.call(null, result.characteristic))].join("")));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.error_message.call(null, result.exception))].join("")));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.failure_source.call(null, result.exception))].join("")));
          var G__17547 = cljs.core.next.call(null, seq__17535__$1);
          var G__17548 = null;
          var G__17549 = 0;
          var G__17550 = 0;
          seq__17535 = G__17547;
          chunk__17536 = G__17548;
          count__17537 = G__17549;
          i__17538 = G__17550;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.report.progress.print_errors = function print_errors(error_results) {
  if(cljs.core.seq.call(null, error_results)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Errors:")
  }else {
  }
  var seq__17557_17563 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.iterate.call(null, cljs.core.inc, 1), error_results)));
  var chunk__17558_17564 = null;
  var count__17559_17565 = 0;
  var i__17560_17566 = 0;
  while(true) {
    if(i__17560_17566 < count__17559_17565) {
      var vec__17561_17567 = cljs.core._nth.call(null, chunk__17558_17564, i__17560_17566);
      var number_17568 = cljs.core.nth.call(null, vec__17561_17567, 0, null);
      var result_17569 = cljs.core.nth.call(null, vec__17561_17567, 1, null);
      cljs.core.println.call(null);
      cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, number_17568, ") ", specljs.reporting.red.call(null, [cljs.core.str(result_17569.exception)].join(""))));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, result_17569.exception))));
      var G__17570 = seq__17557_17563;
      var G__17571 = chunk__17558_17564;
      var G__17572 = count__17559_17565;
      var G__17573 = i__17560_17566 + 1;
      seq__17557_17563 = G__17570;
      chunk__17558_17564 = G__17571;
      count__17559_17565 = G__17572;
      i__17560_17566 = G__17573;
      continue
    }else {
      var temp__4092__auto___17574 = cljs.core.seq.call(null, seq__17557_17563);
      if(temp__4092__auto___17574) {
        var seq__17557_17575__$1 = temp__4092__auto___17574;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17557_17575__$1)) {
          var c__3844__auto___17576 = cljs.core.chunk_first.call(null, seq__17557_17575__$1);
          var G__17577 = cljs.core.chunk_rest.call(null, seq__17557_17575__$1);
          var G__17578 = c__3844__auto___17576;
          var G__17579 = cljs.core.count.call(null, c__3844__auto___17576);
          var G__17580 = 0;
          seq__17557_17563 = G__17577;
          chunk__17558_17564 = G__17578;
          count__17559_17565 = G__17579;
          i__17560_17566 = G__17580;
          continue
        }else {
          var vec__17562_17581 = cljs.core.first.call(null, seq__17557_17575__$1);
          var number_17582 = cljs.core.nth.call(null, vec__17562_17581, 0, null);
          var result_17583 = cljs.core.nth.call(null, vec__17562_17581, 1, null);
          cljs.core.println.call(null);
          cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, number_17582, ") ", specljs.reporting.red.call(null, [cljs.core.str(result_17583.exception)].join(""))));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, result_17583.exception))));
          var G__17584 = cljs.core.next.call(null, seq__17557_17575__$1);
          var G__17585 = null;
          var G__17586 = 0;
          var G__17587 = 0;
          seq__17557_17563 = G__17584;
          chunk__17558_17564 = G__17585;
          count__17559_17565 = G__17586;
          i__17560_17566 = G__17587;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core.flush.call(null)
};
specljs.report.progress.print_duration = function print_duration(results) {
  cljs.core.println.call(null);
  return cljs.core.println.call(null, "Finished in", specljs.platform.format_seconds.call(null, specljs.reporting.tally_time.call(null, results)), "seconds")
};
specljs.report.progress.color_fn_for = function color_fn_for(result_map) {
  if(cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(result_map), (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(result_map))))) {
    return specljs.reporting.red
  }else {
    if(cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, (new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(result_map)))) {
      return specljs.reporting.yellow
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return specljs.reporting.green
      }else {
        return null
      }
    }
  }
};
specljs.report.progress.apply_pending_tally = function apply_pending_tally(report, tally) {
  if((new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" pending")].join(""))
  }else {
    return report
  }
};
specljs.report.progress.apply_error_tally = function apply_error_tally(report, tally) {
  if((new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" errors")].join(""))
  }else {
    return report
  }
};
specljs.report.progress.describe_counts_for = function describe_counts_for(result_map) {
  var tally = cljs.core.zipmap.call(null, cljs.core.keys.call(null, result_map), cljs.core.map.call(null, cljs.core.count, cljs.core.vals.call(null, result_map)));
  var always_on_counts = cljs.core.PersistentVector.fromArray([[cljs.core.str(cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.vals.call(null, tally))), cljs.core.str(" examples")].join(""), [cljs.core.str((new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" failures")].join("")], true);
  return clojure.string.join.call(null, ", ", specljs.report.progress.apply_error_tally.call(null, specljs.report.progress.apply_pending_tally.call(null, always_on_counts, tally), tally))
};
specljs.report.progress.print_tally = function print_tally(result_map) {
  var color_fn = specljs.report.progress.color_fn_for.call(null, result_map);
  return cljs.core.println.call(null, color_fn.call(null, specljs.report.progress.describe_counts_for.call(null, result_map)))
};
specljs.report.progress.print_summary = function print_summary(results) {
  var result_map = specljs.results.categorize.call(null, results);
  specljs.report.progress.print_failures.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_pendings.call(null, (new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_errors.call(null, (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_duration.call(null, results);
  return specljs.report.progress.print_tally.call(null, result_map)
};
specljs.report.progress.ProgressReporter = function() {
};
specljs.report.progress.ProgressReporter.cljs$lang$type = true;
specljs.report.progress.ProgressReporter.cljs$lang$ctorStr = "specljs.report.progress/ProgressReporter";
specljs.report.progress.ProgressReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.progress/ProgressReporter")
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.green.call(null, "."));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.yellow.call(null, "*"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.red.call(null, "F"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.red.call(null, "E"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null);
  return specljs.report.progress.print_summary.call(null, results)
};
specljs.report.progress.__GT_ProgressReporter = function __GT_ProgressReporter() {
  return new specljs.report.progress.ProgressReporter
};
specljs.report.progress.new_progress_reporter = function new_progress_reporter() {
  return new specljs.report.progress.ProgressReporter
};
cljs.core.reset_BANG_.call(null, specljs.config.default_reporters, cljs.core.PersistentVector.fromArray([specljs.report.progress.new_progress_reporter.call(null)], true));
goog.provide("specljs.run.standard");
goog.require("cljs.core");
goog.require("specljs.tags");
goog.require("specljs.running");
goog.require("specljs.reporting");
goog.require("specljs.config");
goog.require("specljs.results");
goog.require("specljs.tags");
goog.require("specljs.running");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.report.progress");
goog.require("specljs.config");
goog.require("specljs.components");
specljs.run.standard.counter = cljs.core.atom.call(null, 0);
specljs.run.standard.StandardRunner = function(num, descriptions, results) {
  this.num = num;
  this.descriptions = descriptions;
  this.results = results
};
specljs.run.standard.StandardRunner.cljs$lang$type = true;
specljs.run.standard.StandardRunner.cljs$lang$ctorStr = "specljs.run.standard/StandardRunner";
specljs.run.standard.StandardRunner.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.run.standard/StandardRunner")
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$ = true;
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_directories$arity$3 = function(this$, directories, reporters) {
  var self__ = this;
  var this$__$1 = this;
  return alert("StandardRunner.run-directories:  I don't know how to do this.")
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$submit_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.descriptions, cljs.core.conj, description)
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_description$arity$3 = function(this$, description, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var run_results = specljs.running.do_description.call(null, description, reporters);
  return cljs.core.swap_BANG_.call(null, self__.results, cljs.core.into, run_results)
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_and_report$arity$2 = function(this$, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var seq__17986_17990 = cljs.core.seq.call(null, cljs.core.deref.call(null, self__.descriptions));
  var chunk__17987_17991 = null;
  var count__17988_17992 = 0;
  var i__17989_17993 = 0;
  while(true) {
    if(i__17989_17993 < count__17988_17992) {
      var description_17994 = cljs.core._nth.call(null, chunk__17987_17991, i__17989_17993);
      specljs.running.run_description.call(null, this$__$1, description_17994, reporters);
      var G__17995 = seq__17986_17990;
      var G__17996 = chunk__17987_17991;
      var G__17997 = count__17988_17992;
      var G__17998 = i__17989_17993 + 1;
      seq__17986_17990 = G__17995;
      chunk__17987_17991 = G__17996;
      count__17988_17992 = G__17997;
      i__17989_17993 = G__17998;
      continue
    }else {
      var temp__4092__auto___17999 = cljs.core.seq.call(null, seq__17986_17990);
      if(temp__4092__auto___17999) {
        var seq__17986_18000__$1 = temp__4092__auto___17999;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17986_18000__$1)) {
          var c__3844__auto___18001 = cljs.core.chunk_first.call(null, seq__17986_18000__$1);
          var G__18002 = cljs.core.chunk_rest.call(null, seq__17986_18000__$1);
          var G__18003 = c__3844__auto___18001;
          var G__18004 = cljs.core.count.call(null, c__3844__auto___18001);
          var G__18005 = 0;
          seq__17986_17990 = G__18002;
          chunk__17987_17991 = G__18003;
          count__17988_17992 = G__18004;
          i__17989_17993 = G__18005;
          continue
        }else {
          var description_18006 = cljs.core.first.call(null, seq__17986_18000__$1);
          specljs.running.run_description.call(null, this$__$1, description_18006, reporters);
          var G__18007 = cljs.core.next.call(null, seq__17986_18000__$1);
          var G__18008 = null;
          var G__18009 = 0;
          var G__18010 = 0;
          seq__17986_17990 = G__18007;
          chunk__17987_17991 = G__18008;
          count__17988_17992 = G__18009;
          i__17989_17993 = G__18010;
          continue
        }
      }else {
      }
    }
    break
  }
  return specljs.reporting.report_runs_STAR_.call(null, reporters, cljs.core.deref.call(null, self__.results))
};
specljs.run.standard.__GT_StandardRunner = function __GT_StandardRunner(num, descriptions, results) {
  return new specljs.run.standard.StandardRunner(num, descriptions, results)
};
specljs.components.Description.prototype.cljs$core$IPrintWithWriter$ = true;
specljs.components.Description.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspecljs.component.Description(name: "), cljs.core.str(x__$1.name), cljs.core.str(")\x3e")].join(""))
};
specljs.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$ = true;
specljs.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspecljs.run.standard.StandardRunner(num: "), cljs.core.str(x__$1.num), cljs.core.str(", descriptions: ")].join(""));
  cljs.core._pr_writer.call(null, cljs.core.deref.call(null, x__$1.descriptions), writer, opts);
  return cljs.core._write.call(null, writer, ")\x3e")
};
specljs.run.standard.new_standard_runner = function new_standard_runner() {
  return new specljs.run.standard.StandardRunner(cljs.core.swap_BANG_.call(null, specljs.run.standard.counter, cljs.core.inc), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY))
};
cljs.core.reset_BANG_.call(null, specljs.config.default_runner_fn, specljs.run.standard.new_standard_runner);
cljs.core.reset_BANG_.call(null, specljs.config.default_runner, specljs.run.standard.new_standard_runner.call(null));
specljs.run.standard.armed = false;
specljs.run.standard.run_specs = function() {
  var run_specs__delegate = function(configurations) {
    if(cljs.core.truth_(specljs.run.standard.armed)) {
      var config = cljs.core.apply.call(null, cljs.core.hash_map, configurations);
      var config__$1 = cljs.core.merge.call(null, cljs.core.dissoc.call(null, specljs.config.default_config, new cljs.core.Keyword(null, "runner", "runner", 4389065378)), config);
      return specljs.config.with_config.call(null, config__$1, function() {
        var temp__4090__auto___18011 = specljs.tags.describe_filter.call(null);
        if(cljs.core.truth_(temp__4090__auto___18011)) {
          var filter_msg_18012 = temp__4090__auto___18011;
          specljs.reporting.report_message_STAR_.call(null, specljs.config.active_reporters.call(null), filter_msg_18012)
        }else {
        }
        specljs.running.run_and_report.call(null, specljs.config.active_runner.call(null), specljs.config.active_reporters.call(null));
        return specljs.results.fail_count.call(null, cljs.core.deref.call(null, specljs.config.active_runner.call(null).results))
      })
    }else {
      return null
    }
  };
  var run_specs = function(var_args) {
    var configurations = null;
    if(arguments.length > 0) {
      configurations = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return run_specs__delegate.call(this, configurations)
  };
  run_specs.cljs$lang$maxFixedArity = 0;
  run_specs.cljs$lang$applyTo = function(arglist__18013) {
    var configurations = cljs.core.seq(arglist__18013);
    return run_specs__delegate(configurations)
  };
  run_specs.cljs$core$IFn$_invoke$arity$variadic = run_specs__delegate;
  return run_specs
}();
goog.provide("specljs.report.silent");
goog.require("cljs.core");
goog.require("specljs.reporting");
specljs.report.silent.SilentReporter = function(passes, fails, results) {
  this.passes = passes;
  this.fails = fails;
  this.results = results
};
specljs.report.silent.SilentReporter.cljs$lang$type = true;
specljs.report.silent.SilentReporter.cljs$lang$ctorStr = "specljs.report.silent/SilentReporter";
specljs.report.silent.SilentReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.silent/SilentReporter")
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results__$1) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, exception) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.__GT_SilentReporter = function __GT_SilentReporter(passes, fails, results) {
  return new specljs.report.silent.SilentReporter(passes, fails, results)
};
specljs.report.silent.new_silent_reporter = function new_silent_reporter() {
  return new specljs.report.silent.SilentReporter(cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
goog.provide("specljs.report.documentation");
goog.require("cljs.core");
goog.require("specljs.report.progress");
goog.require("specljs.config");
goog.require("specljs.platform");
goog.require("specljs.reporting");
goog.require("specljs.results");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.report.progress");
goog.require("specljs.platform");
goog.require("specljs.config");
specljs.report.documentation.level_of = function level_of(component) {
  var component__$1 = cljs.core.deref.call(null, component.parent);
  var level = 0;
  while(true) {
    if(cljs.core.truth_(component__$1)) {
      var G__17588 = cljs.core.deref.call(null, component__$1.parent);
      var G__17589 = level + 1;
      component__$1 = G__17588;
      level = G__17589;
      continue
    }else {
      return level
    }
    break
  }
};
specljs.report.documentation.DocumentationReporter = function() {
};
specljs.report.documentation.DocumentationReporter.cljs$lang$type = true;
specljs.report.documentation.DocumentationReporter.cljs$lang$ctorStr = "specljs.report.documentation/DocumentationReporter";
specljs.report.documentation.DocumentationReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.documentation/DocumentationReporter")
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  var level = specljs.report.documentation.level_of.call(null, description);
  if(level === 0) {
    cljs.core.println.call(null)
  }else {
  }
  cljs.core.println.call(null, [cljs.core.str(specljs.reporting.indent.call(null, level, description.name))].join(""));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.green.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name)));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.yellow.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (PENDING: ", specljs.platform.error_message.call(null, result.exception), ")")));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.red.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (FAILED)")));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.println.call(null, specljs.reporting.red.call(null, result.exception.toString()))
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  return specljs.report.progress.print_summary.call(null, results)
};
specljs.report.documentation.__GT_DocumentationReporter = function __GT_DocumentationReporter() {
  return new specljs.report.documentation.DocumentationReporter
};
specljs.report.documentation.new_documentation_reporter = function new_documentation_reporter() {
  return new specljs.report.documentation.DocumentationReporter
};
goog.provide("specljs.version");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.version.major = 2;
specljs.version.minor = 7;
specljs.version.tiny = 5;
specljs.version.snapshot = false;
specljs.version.string = [cljs.core.str(clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, cljs.core.PersistentVector.fromArray([specljs.version.major, specljs.version.minor, specljs.version.tiny], true)))), cljs.core.str(cljs.core.truth_(specljs.version.snapshot) ? "-SNAPSHOT" : "")].join("");
specljs.version.summary = [cljs.core.str("specljs "), cljs.core.str(specljs.version.string)].join("");
goog.provide("specljs.core");
goog.require("cljs.core");
goog.require("clojure.data");
goog.require("specljs.results");
goog.require("specljs.config");
goog.require("specljs.run.standard");
goog.require("specljs.report.silent");
goog.require("specljs.platform");
goog.require("specljs.reporting");
goog.require("specljs.running");
goog.require("specljs.components");
goog.require("specljs.tags");
goog.require("specljs.report.documentation");
goog.require("specljs.report.progress");
goog.require("specljs.version");
goog.provide("koans.meditations");
goog.require("cljs.core");
koans.meditations.meditations = cljs.core.list("We shall contemplate truth by testing reality, via equality", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), true), "To understand reality, we must compare our expectations against reality", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "+", 
"+", -1640531484, null), 1, 1)), "You can test equality of many things", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -1640531484, null), 3, 4), 7, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -1640531484, null), 2, new cljs.core.Keyword(null, "__", "__", 1013907282))), "But you may not string yourself along", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 2, "2")), "Something is not equal to nothing", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 1, null))), "Strings, and keywords, and symbols: oh my!", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "foo", new cljs.core.Keyword(null, "foo", "foo", 1014005816), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "foo", "foo", -1640429953, null)))), "Make a keyword with your keyboard", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"foo", "foo", 1014005816), cljs.core.list(new cljs.core.Symbol(null, "keyword", "keyword", 1840027554, null), new cljs.core.Keyword(null, "__", "__", 1013907282))), "Symbolism is all around us", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "foo", "foo", -1640429953, null)), cljs.core.list(new cljs.core.Symbol(null, "symbol", "symbol", 1766911825, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282))), "When things cannot be equal, they must be different", cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Keyword(null, "fill-in-the-blank", "fill-in-the-blank", 2866381260), new cljs.core.Keyword(null, "__", "__", 1013907282)));
koans.meditations.Koan = function(description, before, after, __meta, __extmap) {
  this.description = description;
  this.before = before;
  this.after = after;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
koans.meditations.Koan.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3677__auto__) {
  var self__ = this;
  var this__3677__auto____$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, this__3677__auto____$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
koans.meditations.Koan.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3682__auto__, k__3683__auto__) {
  var self__ = this;
  var this__3682__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3682__auto____$1, k__3683__auto__, null)
};
koans.meditations.Koan.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3684__auto__, k12517, else__3685__auto__) {
  var self__ = this;
  var this__3684__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k12517, new cljs.core.Keyword(null, "description", "description", 3584325486))) {
    return self__.description
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k12517, new cljs.core.Keyword(null, "before", "before", 3915985649))) {
      return self__.before
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k12517, new cljs.core.Keyword(null, "after", "after", 1106639182))) {
        return self__.after
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k12517, else__3685__auto__)
        }else {
          return null
        }
      }
    }
  }
};
koans.meditations.Koan.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3689__auto__, k__3690__auto__, G__12516) {
  var self__ = this;
  var this__3689__auto____$1 = this;
  var pred__12519 = cljs.core.keyword_identical_QMARK_;
  var expr__12520 = k__3690__auto__;
  if(pred__12519.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), expr__12520)) {
    return new koans.meditations.Koan(G__12516, self__.before, self__.after, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__12519.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), expr__12520)) {
      return new koans.meditations.Koan(self__.description, G__12516, self__.after, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__12519.call(null, new cljs.core.Keyword(null, "after", "after", 1106639182), expr__12520)) {
        return new koans.meditations.Koan(self__.description, self__.before, G__12516, self__.__meta, self__.__extmap, null)
      }else {
        return new koans.meditations.Koan(self__.description, self__.before, self__.after, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3690__auto__, G__12516), null)
      }
    }
  }
};
koans.meditations.Koan.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3696__auto__, writer__3697__auto__, opts__3698__auto__) {
  var self__ = this;
  var this__3696__auto____$1 = this;
  var pr_pair__3699__auto__ = function(keyval__3700__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, cljs.core.pr_writer, "", " ", "", opts__3698__auto__, keyval__3700__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, pr_pair__3699__auto__, "#koans.meditations.Koan{", ", ", "}", opts__3698__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), self__.description), cljs.core.vector.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), self__.before), cljs.core.vector.call(null, new cljs.core.Keyword(null, 
  "after", "after", 1106639182), self__.after)], true), self__.__extmap))
};
koans.meditations.Koan.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3687__auto__, entry__3688__auto__) {
  var self__ = this;
  var this__3687__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3688__auto__)) {
    return cljs.core._assoc.call(null, this__3687__auto____$1, cljs.core._nth.call(null, entry__3688__auto__, 0), cljs.core._nth.call(null, entry__3688__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3687__auto____$1, entry__3688__auto__)
  }
};
koans.meditations.Koan.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3694__auto__) {
  var self__ = this;
  var this__3694__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), self__.description), cljs.core.vector.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), self__.before), cljs.core.vector.call(null, new cljs.core.Keyword(null, "after", "after", 1106639182), self__.after)], true), self__.__extmap))
};
koans.meditations.Koan.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3686__auto__) {
  var self__ = this;
  var this__3686__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
koans.meditations.Koan.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3678__auto__, other__3679__auto__) {
  var self__ = this;
  var this__3678__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = other__3679__auto__;
    if(cljs.core.truth_(and__3119__auto__)) {
      var and__3119__auto____$1 = this__3678__auto____$1.constructor === other__3679__auto__.constructor;
      if(and__3119__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3678__auto____$1, other__3679__auto__)
      }else {
        return and__3119__auto____$1
      }
    }else {
      return and__3119__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
koans.meditations.Koan.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3681__auto__, G__12516) {
  var self__ = this;
  var this__3681__auto____$1 = this;
  return new koans.meditations.Koan(self__.description, self__.before, self__.after, G__12516, self__.__extmap, self__.__hash)
};
koans.meditations.Koan.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3680__auto__) {
  var self__ = this;
  var this__3680__auto____$1 = this;
  return self__.__meta
};
koans.meditations.Koan.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3691__auto__, k__3692__auto__) {
  var self__ = this;
  var this__3691__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "before", "before", 3915985649), null, new cljs.core.Keyword(null, "after", "after", 1106639182), null, new cljs.core.Keyword(null, "description", "description", 3584325486), null], true), k__3692__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3691__auto____$1), self__.__meta), k__3692__auto__)
  }else {
    return new koans.meditations.Koan(self__.description, self__.before, self__.after, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3692__auto__)), null)
  }
};
koans.meditations.Koan.cljs$lang$type = true;
koans.meditations.Koan.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "koans.meditations/Koan")
};
koans.meditations.Koan.cljs$lang$ctorPrWriter = function(this__3716__auto__, writer__3717__auto__) {
  return cljs.core._write.call(null, writer__3717__auto__, "koans.meditations/Koan")
};
koans.meditations.__GT_Koan = function __GT_Koan(description, before, after) {
  return new koans.meditations.Koan(description, before, after)
};
koans.meditations.map__GT_Koan = function map__GT_Koan(G__12518) {
  return new koans.meditations.Koan((new cljs.core.Keyword(null, "description", "description", 3584325486)).cljs$core$IFn$_invoke$arity$1(G__12518), (new cljs.core.Keyword(null, "before", "before", 3915985649)).cljs$core$IFn$_invoke$arity$1(G__12518), (new cljs.core.Keyword(null, "after", "after", 1106639182)).cljs$core$IFn$_invoke$arity$1(G__12518), null, cljs.core.dissoc.call(null, G__12518, new cljs.core.Keyword(null, "description", "description", 3584325486), new cljs.core.Keyword(null, "before", 
  "before", 3915985649), new cljs.core.Keyword(null, "after", "after", 1106639182)))
};
koans.meditations.nth_koan = function nth_koan(n) {
  var item = cljs.core.nth.call(null, cljs.core.partition.call(null, 2, koans.meditations.meditations), n);
  var description = cljs.core.first.call(null, item);
  var vec__12523 = clojure.string.split.call(null, cljs.core.pr_str.call(null, cljs.core.last.call(null, item)), /:__/);
  var before = cljs.core.nth.call(null, vec__12523, 0, null);
  var after = cljs.core.nth.call(null, vec__12523, 1, null);
  return new koans.meditations.Koan(description, before, after)
};
goog.provide("koans.meditations_spec");
goog.require("cljs.core");
goog.require("koans.meditations");
goog.require("koans.meditations");
goog.require("specljs.core");
var description__20096__auto___22661 = specljs.components.new_description.call(null, "nth-koan", "koans.meditations-spec");
var _STAR_parent_description_STAR_22656_22662 = specljs.config._STAR_parent_description_STAR_;
try {
  specljs.config._STAR_parent_description_STAR_ = description__20096__auto___22661;
  var seq__22657_22663 = cljs.core.seq.call(null, cljs.core.list.call(null, specljs.components.new_characteristic.call(null, "should return a valid Koan object", function() {
    koans.meditations_spec.koan = koans.meditations.nth_koan.call(null, 0);
    var value__20164__auto___22667 = typeof(new cljs.core.Keyword(null, "description", "description", 3584325486)).cljs$core$IFn$_invoke$arity$1(koans.meditations_spec.koan) === "string";
    if(!value__20164__auto___22667) {
      throw new specljs.platform.SpecFailure([cljs.core.str("Expected truthy but was: "), cljs.core.str(value__20164__auto___22667 == null ? "nil" : cljs.core.pr_str.call(null, value__20164__auto___22667)), cljs.core.str("")].join(""));
    }else {
    }
    var value__20164__auto___22668 = typeof(new cljs.core.Keyword(null, "before", "before", 3915985649)).cljs$core$IFn$_invoke$arity$1(koans.meditations_spec.koan) === "string";
    if(!value__20164__auto___22668) {
      throw new specljs.platform.SpecFailure([cljs.core.str("Expected truthy but was: "), cljs.core.str(value__20164__auto___22668 == null ? "nil" : cljs.core.pr_str.call(null, value__20164__auto___22668)), cljs.core.str("")].join(""));
    }else {
    }
    var value__20164__auto__ = typeof(new cljs.core.Keyword(null, "after", "after", 1106639182)).cljs$core$IFn$_invoke$arity$1(koans.meditations_spec.koan) === "string";
    if(!value__20164__auto__) {
      throw new specljs.platform.SpecFailure([cljs.core.str("Expected truthy but was: "), cljs.core.str(value__20164__auto__ == null ? "nil" : cljs.core.pr_str.call(null, value__20164__auto__)), cljs.core.str("")].join(""));
    }else {
      return null
    }
  }), specljs.components.new_characteristic.call(null, "should return different koans for different indices", function() {
    koans.meditations_spec.koan_0 = koans.meditations.nth_koan.call(null, 0);
    koans.meditations_spec.koan_1 = koans.meditations.nth_koan.call(null, 1);
    var expected__20214__auto__ = koans.meditations_spec.koan_0;
    var actual__20215__auto__ = koans.meditations_spec.koan_1;
    if(expected__20214__auto__ === actual__20215__auto__) {
      throw new specljs.platform.SpecFailure([cljs.core.str("             Expected: "), cljs.core.str(expected__20214__auto__ == null ? "nil" : cljs.core.pr_str.call(null, expected__20214__auto__)), cljs.core.str(specljs.platform.endl), cljs.core.str("not to be the same as: "), cljs.core.str(actual__20215__auto__ == null ? "nil" : cljs.core.pr_str.call(null, actual__20215__auto__)), cljs.core.str(" (using identical?)")].join(""));
    }else {
      return null
    }
  })));
  var chunk__22658_22664 = null;
  var count__22659_22665 = 0;
  var i__22660_22666 = 0;
  while(true) {
    if(i__22660_22666 < count__22659_22665) {
      var component__20097__auto___22669 = cljs.core._nth.call(null, chunk__22658_22664, i__22660_22666);
      specljs.components.install.call(null, component__20097__auto___22669, description__20096__auto___22661);
      var G__22670 = seq__22657_22663;
      var G__22671 = chunk__22658_22664;
      var G__22672 = count__22659_22665;
      var G__22673 = i__22660_22666 + 1;
      seq__22657_22663 = G__22670;
      chunk__22658_22664 = G__22671;
      count__22659_22665 = G__22672;
      i__22660_22666 = G__22673;
      continue
    }else {
      var temp__4092__auto___22674 = cljs.core.seq.call(null, seq__22657_22663);
      if(temp__4092__auto___22674) {
        var seq__22657_22675__$1 = temp__4092__auto___22674;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__22657_22675__$1)) {
          var c__3844__auto___22676 = cljs.core.chunk_first.call(null, seq__22657_22675__$1);
          var G__22677 = cljs.core.chunk_rest.call(null, seq__22657_22675__$1);
          var G__22678 = c__3844__auto___22676;
          var G__22679 = cljs.core.count.call(null, c__3844__auto___22676);
          var G__22680 = 0;
          seq__22657_22663 = G__22677;
          chunk__22658_22664 = G__22678;
          count__22659_22665 = G__22679;
          i__22660_22666 = G__22680;
          continue
        }else {
          var component__20097__auto___22681 = cljs.core.first.call(null, seq__22657_22675__$1);
          specljs.components.install.call(null, component__20097__auto___22681, description__20096__auto___22661);
          var G__22682 = cljs.core.next.call(null, seq__22657_22675__$1);
          var G__22683 = null;
          var G__22684 = 0;
          var G__22685 = 0;
          seq__22657_22663 = G__22682;
          chunk__22658_22664 = G__22683;
          count__22659_22665 = G__22684;
          i__22660_22666 = G__22685;
          continue
        }
      }else {
      }
    }
    break
  }
}finally {
  specljs.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_22656_22662
}
if(cljs.core.not.call(null, specljs.config._STAR_parent_description_STAR_)) {
  specljs.running.submit_description.call(null, specljs.config.active_runner.call(null), description__20096__auto___22661)
}else {
}
;goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3119__auto__ = idx === 0 || " " === class_name.charAt(idx - 1);
  if(and__3119__auto__) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      return stop === total_len || " " === class_name.charAt(stop)
    }else {
      return null
    }
  }else {
    return and__3119__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__17244 = i + class$.length;
        start_from = G__17244;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___17269 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___17269)) {
        var class_list_17270 = temp__4090__auto___17269;
        var seq__17257_17271 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__17258_17272 = null;
        var count__17259_17273 = 0;
        var i__17260_17274 = 0;
        while(true) {
          if(i__17260_17274 < count__17259_17273) {
            var class_17275 = cljs.core._nth.call(null, chunk__17258_17272, i__17260_17274);
            class_list_17270.add(class_17275);
            var G__17276 = seq__17257_17271;
            var G__17277 = chunk__17258_17272;
            var G__17278 = count__17259_17273;
            var G__17279 = i__17260_17274 + 1;
            seq__17257_17271 = G__17276;
            chunk__17258_17272 = G__17277;
            count__17259_17273 = G__17278;
            i__17260_17274 = G__17279;
            continue
          }else {
            var temp__4092__auto___17280 = cljs.core.seq.call(null, seq__17257_17271);
            if(temp__4092__auto___17280) {
              var seq__17257_17281__$1 = temp__4092__auto___17280;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17257_17281__$1)) {
                var c__3844__auto___17282 = cljs.core.chunk_first.call(null, seq__17257_17281__$1);
                var G__17283 = cljs.core.chunk_rest.call(null, seq__17257_17281__$1);
                var G__17284 = c__3844__auto___17282;
                var G__17285 = cljs.core.count.call(null, c__3844__auto___17282);
                var G__17286 = 0;
                seq__17257_17271 = G__17283;
                chunk__17258_17272 = G__17284;
                count__17259_17273 = G__17285;
                i__17260_17274 = G__17286;
                continue
              }else {
                var class_17287 = cljs.core.first.call(null, seq__17257_17281__$1);
                class_list_17270.add(class_17287);
                var G__17288 = cljs.core.next.call(null, seq__17257_17281__$1);
                var G__17289 = null;
                var G__17290 = 0;
                var G__17291 = 0;
                seq__17257_17271 = G__17288;
                chunk__17258_17272 = G__17289;
                count__17259_17273 = G__17290;
                i__17260_17274 = G__17291;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_17292 = elem__$1.className;
        var seq__17261_17293 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__17262_17294 = null;
        var count__17263_17295 = 0;
        var i__17264_17296 = 0;
        while(true) {
          if(i__17264_17296 < count__17263_17295) {
            var class_17297 = cljs.core._nth.call(null, chunk__17262_17294, i__17264_17296);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_17292, class_17297))) {
            }else {
              elem__$1.className = class_name_17292 === "" ? class_17297 : [cljs.core.str(class_name_17292), cljs.core.str(" "), cljs.core.str(class_17297)].join("")
            }
            var G__17298 = seq__17261_17293;
            var G__17299 = chunk__17262_17294;
            var G__17300 = count__17263_17295;
            var G__17301 = i__17264_17296 + 1;
            seq__17261_17293 = G__17298;
            chunk__17262_17294 = G__17299;
            count__17263_17295 = G__17300;
            i__17264_17296 = G__17301;
            continue
          }else {
            var temp__4092__auto___17302 = cljs.core.seq.call(null, seq__17261_17293);
            if(temp__4092__auto___17302) {
              var seq__17261_17303__$1 = temp__4092__auto___17302;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17261_17303__$1)) {
                var c__3844__auto___17304 = cljs.core.chunk_first.call(null, seq__17261_17303__$1);
                var G__17305 = cljs.core.chunk_rest.call(null, seq__17261_17303__$1);
                var G__17306 = c__3844__auto___17304;
                var G__17307 = cljs.core.count.call(null, c__3844__auto___17304);
                var G__17308 = 0;
                seq__17261_17293 = G__17305;
                chunk__17262_17294 = G__17306;
                count__17263_17295 = G__17307;
                i__17264_17296 = G__17308;
                continue
              }else {
                var class_17309 = cljs.core.first.call(null, seq__17261_17303__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_17292, class_17309))) {
                }else {
                  elem__$1.className = class_name_17292 === "" ? class_17309 : [cljs.core.str(class_name_17292), cljs.core.str(" "), cljs.core.str(class_17309)].join("")
                }
                var G__17310 = cljs.core.next.call(null, seq__17261_17303__$1);
                var G__17311 = null;
                var G__17312 = 0;
                var G__17313 = 0;
                seq__17261_17293 = G__17310;
                chunk__17262_17294 = G__17311;
                count__17263_17295 = G__17312;
                i__17264_17296 = G__17313;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__17314__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17265_17315 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__17266_17316 = null;
      var count__17267_17317 = 0;
      var i__17268_17318 = 0;
      while(true) {
        if(i__17268_17318 < count__17267_17317) {
          var c_17319 = cljs.core._nth.call(null, chunk__17266_17316, i__17268_17318);
          add_class_BANG_.call(null, elem__$1, c_17319);
          var G__17320 = seq__17265_17315;
          var G__17321 = chunk__17266_17316;
          var G__17322 = count__17267_17317;
          var G__17323 = i__17268_17318 + 1;
          seq__17265_17315 = G__17320;
          chunk__17266_17316 = G__17321;
          count__17267_17317 = G__17322;
          i__17268_17318 = G__17323;
          continue
        }else {
          var temp__4092__auto___17324 = cljs.core.seq.call(null, seq__17265_17315);
          if(temp__4092__auto___17324) {
            var seq__17265_17325__$1 = temp__4092__auto___17324;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17265_17325__$1)) {
              var c__3844__auto___17326 = cljs.core.chunk_first.call(null, seq__17265_17325__$1);
              var G__17327 = cljs.core.chunk_rest.call(null, seq__17265_17325__$1);
              var G__17328 = c__3844__auto___17326;
              var G__17329 = cljs.core.count.call(null, c__3844__auto___17326);
              var G__17330 = 0;
              seq__17265_17315 = G__17327;
              chunk__17266_17316 = G__17328;
              count__17267_17317 = G__17329;
              i__17268_17318 = G__17330;
              continue
            }else {
              var c_17331 = cljs.core.first.call(null, seq__17265_17325__$1);
              add_class_BANG_.call(null, elem__$1, c_17331);
              var G__17332 = cljs.core.next.call(null, seq__17265_17325__$1);
              var G__17333 = null;
              var G__17334 = 0;
              var G__17335 = 0;
              seq__17265_17315 = G__17332;
              chunk__17266_17316 = G__17333;
              count__17267_17317 = G__17334;
              i__17268_17318 = G__17335;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17314 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17314__delegate.call(this, elem, classes, more_classes)
    };
    G__17314.cljs$lang$maxFixedArity = 2;
    G__17314.cljs$lang$applyTo = function(arglist__17336) {
      var elem = cljs.core.first(arglist__17336);
      arglist__17336 = cljs.core.next(arglist__17336);
      var classes = cljs.core.first(arglist__17336);
      var more_classes = cljs.core.rest(arglist__17336);
      return G__17314__delegate(elem, classes, more_classes)
    };
    G__17314.cljs$core$IFn$_invoke$arity$variadic = G__17314__delegate;
    return G__17314
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__17337 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__17337;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___17346 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___17346)) {
      var class_list_17347 = temp__4090__auto___17346;
      class_list_17347.remove(class$__$1)
    }else {
      var class_name_17348 = elem__$1.className;
      var new_class_name_17349 = dommy.attrs.remove_class_str.call(null, class_name_17348, class$__$1);
      if(class_name_17348 === new_class_name_17349) {
      }else {
        elem__$1.className = new_class_name_17349
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__17350__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17342 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__17343 = null;
      var count__17344 = 0;
      var i__17345 = 0;
      while(true) {
        if(i__17345 < count__17344) {
          var c = cljs.core._nth.call(null, chunk__17343, i__17345);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__17351 = seq__17342;
          var G__17352 = chunk__17343;
          var G__17353 = count__17344;
          var G__17354 = i__17345 + 1;
          seq__17342 = G__17351;
          chunk__17343 = G__17352;
          count__17344 = G__17353;
          i__17345 = G__17354;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__17342);
          if(temp__4092__auto__) {
            var seq__17342__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17342__$1)) {
              var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17342__$1);
              var G__17355 = cljs.core.chunk_rest.call(null, seq__17342__$1);
              var G__17356 = c__3844__auto__;
              var G__17357 = cljs.core.count.call(null, c__3844__auto__);
              var G__17358 = 0;
              seq__17342 = G__17355;
              chunk__17343 = G__17356;
              count__17344 = G__17357;
              i__17345 = G__17358;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__17342__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__17359 = cljs.core.next.call(null, seq__17342__$1);
              var G__17360 = null;
              var G__17361 = 0;
              var G__17362 = 0;
              seq__17342 = G__17359;
              chunk__17343 = G__17360;
              count__17344 = G__17361;
              i__17345 = G__17362;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__17350 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17350__delegate.call(this, elem, class$, classes)
    };
    G__17350.cljs$lang$maxFixedArity = 2;
    G__17350.cljs$lang$applyTo = function(arglist__17363) {
      var elem = cljs.core.first(arglist__17363);
      arglist__17363 = cljs.core.next(arglist__17363);
      var class$ = cljs.core.first(arglist__17363);
      var classes = cljs.core.rest(arglist__17363);
      return G__17350__delegate(elem, class$, classes)
    };
    G__17350.cljs$core$IFn$_invoke$arity$variadic = G__17350__delegate;
    return G__17350
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___17364 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___17364)) {
      var class_list_17365 = temp__4090__auto___17364;
      class_list_17365.toggle(class$__$1)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$__$1, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$__$1))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(typeof x === "string") {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__17368) {
      var vec__17369 = p__17368;
      var k = cljs.core.nth.call(null, vec__17369, 0, null);
      var v = cljs.core.nth.call(null, vec__17369, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__17376_17382 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__17377_17383 = null;
    var count__17378_17384 = 0;
    var i__17379_17385 = 0;
    while(true) {
      if(i__17379_17385 < count__17378_17384) {
        var vec__17380_17386 = cljs.core._nth.call(null, chunk__17377_17383, i__17379_17385);
        var k_17387 = cljs.core.nth.call(null, vec__17380_17386, 0, null);
        var v_17388 = cljs.core.nth.call(null, vec__17380_17386, 1, null);
        style[cljs.core.name.call(null, k_17387)] = v_17388;
        var G__17389 = seq__17376_17382;
        var G__17390 = chunk__17377_17383;
        var G__17391 = count__17378_17384;
        var G__17392 = i__17379_17385 + 1;
        seq__17376_17382 = G__17389;
        chunk__17377_17383 = G__17390;
        count__17378_17384 = G__17391;
        i__17379_17385 = G__17392;
        continue
      }else {
        var temp__4092__auto___17393 = cljs.core.seq.call(null, seq__17376_17382);
        if(temp__4092__auto___17393) {
          var seq__17376_17394__$1 = temp__4092__auto___17393;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17376_17394__$1)) {
            var c__3844__auto___17395 = cljs.core.chunk_first.call(null, seq__17376_17394__$1);
            var G__17396 = cljs.core.chunk_rest.call(null, seq__17376_17394__$1);
            var G__17397 = c__3844__auto___17395;
            var G__17398 = cljs.core.count.call(null, c__3844__auto___17395);
            var G__17399 = 0;
            seq__17376_17382 = G__17396;
            chunk__17377_17383 = G__17397;
            count__17378_17384 = G__17398;
            i__17379_17385 = G__17399;
            continue
          }else {
            var vec__17381_17400 = cljs.core.first.call(null, seq__17376_17394__$1);
            var k_17401 = cljs.core.nth.call(null, vec__17381_17400, 0, null);
            var v_17402 = cljs.core.nth.call(null, vec__17381_17400, 1, null);
            style[cljs.core.name.call(null, k_17401)] = v_17402;
            var G__17403 = cljs.core.next.call(null, seq__17376_17394__$1);
            var G__17404 = null;
            var G__17405 = 0;
            var G__17406 = 0;
            seq__17376_17382 = G__17403;
            chunk__17377_17383 = G__17404;
            count__17378_17384 = G__17405;
            i__17379_17385 = G__17406;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__17407) {
    var elem = cljs.core.first(arglist__17407);
    var kvs = cljs.core.rest(arglist__17407);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__17414_17420 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__17415_17421 = null;
    var count__17416_17422 = 0;
    var i__17417_17423 = 0;
    while(true) {
      if(i__17417_17423 < count__17416_17422) {
        var vec__17418_17424 = cljs.core._nth.call(null, chunk__17415_17421, i__17417_17423);
        var k_17425 = cljs.core.nth.call(null, vec__17418_17424, 0, null);
        var v_17426 = cljs.core.nth.call(null, vec__17418_17424, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_17425, [cljs.core.str(v_17426), cljs.core.str("px")].join(""));
        var G__17427 = seq__17414_17420;
        var G__17428 = chunk__17415_17421;
        var G__17429 = count__17416_17422;
        var G__17430 = i__17417_17423 + 1;
        seq__17414_17420 = G__17427;
        chunk__17415_17421 = G__17428;
        count__17416_17422 = G__17429;
        i__17417_17423 = G__17430;
        continue
      }else {
        var temp__4092__auto___17431 = cljs.core.seq.call(null, seq__17414_17420);
        if(temp__4092__auto___17431) {
          var seq__17414_17432__$1 = temp__4092__auto___17431;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17414_17432__$1)) {
            var c__3844__auto___17433 = cljs.core.chunk_first.call(null, seq__17414_17432__$1);
            var G__17434 = cljs.core.chunk_rest.call(null, seq__17414_17432__$1);
            var G__17435 = c__3844__auto___17433;
            var G__17436 = cljs.core.count.call(null, c__3844__auto___17433);
            var G__17437 = 0;
            seq__17414_17420 = G__17434;
            chunk__17415_17421 = G__17435;
            count__17416_17422 = G__17436;
            i__17417_17423 = G__17437;
            continue
          }else {
            var vec__17419_17438 = cljs.core.first.call(null, seq__17414_17432__$1);
            var k_17439 = cljs.core.nth.call(null, vec__17419_17438, 0, null);
            var v_17440 = cljs.core.nth.call(null, vec__17419_17438, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_17439, [cljs.core.str(v_17440), cljs.core.str("px")].join(""));
            var G__17441 = cljs.core.next.call(null, seq__17414_17432__$1);
            var G__17442 = null;
            var G__17443 = 0;
            var G__17444 = 0;
            seq__17414_17420 = G__17441;
            chunk__17415_17421 = G__17442;
            count__17416_17422 = G__17443;
            i__17417_17423 = G__17444;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__17445) {
    var elem = cljs.core.first(arglist__17445);
    var kvs = cljs.core.rest(arglist__17445);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__17454 = dommy.template.__GT_node_like.call(null, elem);
        G__17454[cljs.core.name.call(null, k)] = v;
        return G__17454
      }else {
        var G__17455 = dommy.template.__GT_node_like.call(null, elem);
        G__17455.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__17455
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__17462__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17456_17463 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__17457_17464 = null;
      var count__17458_17465 = 0;
      var i__17459_17466 = 0;
      while(true) {
        if(i__17459_17466 < count__17458_17465) {
          var vec__17460_17467 = cljs.core._nth.call(null, chunk__17457_17464, i__17459_17466);
          var k_17468__$1 = cljs.core.nth.call(null, vec__17460_17467, 0, null);
          var v_17469__$1 = cljs.core.nth.call(null, vec__17460_17467, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_17468__$1, v_17469__$1);
          var G__17470 = seq__17456_17463;
          var G__17471 = chunk__17457_17464;
          var G__17472 = count__17458_17465;
          var G__17473 = i__17459_17466 + 1;
          seq__17456_17463 = G__17470;
          chunk__17457_17464 = G__17471;
          count__17458_17465 = G__17472;
          i__17459_17466 = G__17473;
          continue
        }else {
          var temp__4092__auto___17474 = cljs.core.seq.call(null, seq__17456_17463);
          if(temp__4092__auto___17474) {
            var seq__17456_17475__$1 = temp__4092__auto___17474;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17456_17475__$1)) {
              var c__3844__auto___17476 = cljs.core.chunk_first.call(null, seq__17456_17475__$1);
              var G__17477 = cljs.core.chunk_rest.call(null, seq__17456_17475__$1);
              var G__17478 = c__3844__auto___17476;
              var G__17479 = cljs.core.count.call(null, c__3844__auto___17476);
              var G__17480 = 0;
              seq__17456_17463 = G__17477;
              chunk__17457_17464 = G__17478;
              count__17458_17465 = G__17479;
              i__17459_17466 = G__17480;
              continue
            }else {
              var vec__17461_17481 = cljs.core.first.call(null, seq__17456_17475__$1);
              var k_17482__$1 = cljs.core.nth.call(null, vec__17461_17481, 0, null);
              var v_17483__$1 = cljs.core.nth.call(null, vec__17461_17481, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_17482__$1, v_17483__$1);
              var G__17484 = cljs.core.next.call(null, seq__17456_17475__$1);
              var G__17485 = null;
              var G__17486 = 0;
              var G__17487 = 0;
              seq__17456_17463 = G__17484;
              chunk__17457_17464 = G__17485;
              count__17458_17465 = G__17486;
              i__17459_17466 = G__17487;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17462 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__17462__delegate.call(this, elem, k, v, kvs)
    };
    G__17462.cljs$lang$maxFixedArity = 3;
    G__17462.cljs$lang$applyTo = function(arglist__17488) {
      var elem = cljs.core.first(arglist__17488);
      arglist__17488 = cljs.core.next(arglist__17488);
      var k = cljs.core.first(arglist__17488);
      arglist__17488 = cljs.core.next(arglist__17488);
      var v = cljs.core.first(arglist__17488);
      var kvs = cljs.core.rest(arglist__17488);
      return G__17462__delegate(elem, k, v, kvs)
    };
    G__17462.cljs$core$IFn$_invoke$arity$variadic = G__17462__delegate;
    return G__17462
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__17497__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17493_17498 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__17494_17499 = null;
      var count__17495_17500 = 0;
      var i__17496_17501 = 0;
      while(true) {
        if(i__17496_17501 < count__17495_17500) {
          var k_17502__$1 = cljs.core._nth.call(null, chunk__17494_17499, i__17496_17501);
          remove_attr_BANG_.call(null, elem__$1, k_17502__$1);
          var G__17503 = seq__17493_17498;
          var G__17504 = chunk__17494_17499;
          var G__17505 = count__17495_17500;
          var G__17506 = i__17496_17501 + 1;
          seq__17493_17498 = G__17503;
          chunk__17494_17499 = G__17504;
          count__17495_17500 = G__17505;
          i__17496_17501 = G__17506;
          continue
        }else {
          var temp__4092__auto___17507 = cljs.core.seq.call(null, seq__17493_17498);
          if(temp__4092__auto___17507) {
            var seq__17493_17508__$1 = temp__4092__auto___17507;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17493_17508__$1)) {
              var c__3844__auto___17509 = cljs.core.chunk_first.call(null, seq__17493_17508__$1);
              var G__17510 = cljs.core.chunk_rest.call(null, seq__17493_17508__$1);
              var G__17511 = c__3844__auto___17509;
              var G__17512 = cljs.core.count.call(null, c__3844__auto___17509);
              var G__17513 = 0;
              seq__17493_17498 = G__17510;
              chunk__17494_17499 = G__17511;
              count__17495_17500 = G__17512;
              i__17496_17501 = G__17513;
              continue
            }else {
              var k_17514__$1 = cljs.core.first.call(null, seq__17493_17508__$1);
              remove_attr_BANG_.call(null, elem__$1, k_17514__$1);
              var G__17515 = cljs.core.next.call(null, seq__17493_17508__$1);
              var G__17516 = null;
              var G__17517 = 0;
              var G__17518 = 0;
              seq__17493_17498 = G__17515;
              chunk__17494_17499 = G__17516;
              count__17495_17500 = G__17517;
              i__17496_17501 = G__17518;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17497 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17497__delegate.call(this, elem, k, ks)
    };
    G__17497.cljs$lang$maxFixedArity = 2;
    G__17497.cljs$lang$applyTo = function(arglist__17519) {
      var elem = cljs.core.first(arglist__17519);
      arglist__17519 = cljs.core.next(arglist__17519);
      var k = cljs.core.first(arglist__17519);
      var ks = cljs.core.rest(arglist__17519);
      return G__17497__delegate(elem, k, ks)
    };
    G__17497.cljs$core$IFn$_invoke$arity$variadic = G__17497__delegate;
    return G__17497
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.toggle_attr_BANG_ = function() {
  var toggle_attr_BANG_ = null;
  var toggle_attr_BANG___2 = function(elem, k) {
    return toggle_attr_BANG_.call(null, elem, k, cljs.core.boolean$.call(null, dommy.attrs.attr.call(null, elem, k)))
  };
  var toggle_attr_BANG___3 = function(elem, k, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      return dommy.attrs.set_attr_BANG_.call(null, elem__$1, k)
    }else {
      return dommy.attrs.remove_attr_BANG_.call(null, elem__$1, k)
    }
  };
  toggle_attr_BANG_ = function(elem, k, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_attr_BANG___2.call(this, elem, k);
      case 3:
        return toggle_attr_BANG___3.call(this, elem, k, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_attr_BANG___2;
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_attr_BANG___3;
  return toggle_attr_BANG_
}();
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__17521 = dommy.template.__GT_node_like.call(null, elem);
    G__17521.style.display = show_QMARK_ ? "" : "none";
    return G__17521
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__17523 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__17523, false);
  return G__17523
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__17525 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__17525, true);
  return G__17525
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__17527 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__17527["constructor"] = Object;
    return G__17527
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)
};
dommy.attrs.scroll_into_view = function scroll_into_view(elem, align_with_top_QMARK_) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var top = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(dommy.attrs.bounding_client_rect.call(null, elem__$1));
  if(window.innerHeight < top + elem__$1.offsetHeight) {
    return elem__$1.scrollIntoView(align_with_top_QMARK_)
  }else {
    return null
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3119__auto__ = port;
    if(and__3119__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3723__auto__ = port == null ? null : port;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3119__auto__ = port;
    if(and__3119__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3723__auto__ = port == null ? null : port;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3119__auto__ = chan;
    if(and__3119__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3723__auto__ = chan == null ? null : chan;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3119__auto__ = h;
    if(and__3119__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3723__auto__ = h == null ? null : h;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3119__auto__ = h;
    if(and__3119__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3723__auto__ = h == null ? null : h;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__16647 = cnt + 1;
      cnt = G__16647;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3891__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3891__auto__) {
      var v_16648 = this$.pop();
      if(keep_QMARK_.call(null, v_16648)) {
        this$.unshift(v_16648)
      }else {
      }
      var G__16649 = x + 1;
      x = G__16649;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_16636 = 0;
  while(true) {
    var m_16637 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_16637 == null) {
    }else {
      m_16637.call(null);
      if(count_16636 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__16638 = count_16636 + 1;
        count_16636 = G__16638;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(and__3119__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3119__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t16653 !== "undefined") {
  }else {
    cljs.core.async.impl.ioc_helpers.t16653 = function(f, fn_handler, meta16654) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16654 = meta16654;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t16653.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t16653.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t16653";
    cljs.core.async.impl.ioc_helpers.t16653.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.ioc-helpers/t16653")
    };
    cljs.core.async.impl.ioc_helpers.t16653.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t16653.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t16653.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t16653.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16655) {
      var self__ = this;
      var _16655__$1 = this;
      return self__.meta16654
    };
    cljs.core.async.impl.ioc_helpers.t16653.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16655, meta16654__$1) {
      var self__ = this;
      var _16655__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t16653(self__.f, self__.fn_handler, meta16654__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t16653 = function __GT_t16653(f__$1, fn_handler__$1, meta16654) {
      return new cljs.core.async.impl.ioc_helpers.t16653(f__$1, fn_handler__$1, meta16654)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t16653(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e16657) {
    if(e16657 instanceof Object) {
      var ex = e16657;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e16657;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_16660_16662 = state;
    statearr_16660_16662[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_16660_16662[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16661_16663 = state;
    statearr_16661_16663[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16661_16663[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_16666_16668 = state;
    statearr_16666_16668[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_16666_16668[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16667_16669 = state;
    statearr_16667_16669[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16667_16669[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__16670) {
    var map__16675 = p__16670;
    var map__16675__$1 = cljs.core.seq_QMARK_.call(null, map__16675) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16675) : map__16675;
    var opts = map__16675__$1;
    var statearr_16676_16679 = state;
    statearr_16676_16679[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_16677_16680 = state;
      statearr_16677_16680[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_16678_16681 = state;
      statearr_16678_16681[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__16670 = null;
    if(arguments.length > 3) {
      p__16670 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__16670)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__16682) {
    var state = cljs.core.first(arglist__16682);
    arglist__16682 = cljs.core.next(arglist__16682);
    var cont_block = cljs.core.first(arglist__16682);
    arglist__16682 = cljs.core.next(arglist__16682);
    var ports = cljs.core.first(arglist__16682);
    var p__16670 = cljs.core.rest(arglist__16682);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__16670)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t16642 !== "undefined") {
  }else {
    cljs.core.async.impl.channels.t16642 = function(val, box, meta16643) {
      this.val = val;
      this.box = box;
      this.meta16643 = meta16643;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t16642.cljs$lang$type = true;
    cljs.core.async.impl.channels.t16642.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t16642";
    cljs.core.async.impl.channels.t16642.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.channels/t16642")
    };
    cljs.core.async.impl.channels.t16642.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t16642.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16644) {
      var self__ = this;
      var _16644__$1 = this;
      return self__.meta16643
    };
    cljs.core.async.impl.channels.t16642.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16644, meta16643__$1) {
      var self__ = this;
      var _16644__$1 = this;
      return new cljs.core.async.impl.channels.t16642(self__.val, self__.box, meta16643__$1)
    };
    cljs.core.async.impl.channels.__GT_t16642 = function __GT_t16642(val__$1, box__$1, meta16643) {
      return new cljs.core.async.impl.channels.t16642(val__$1, box__$1, meta16643)
    }
  }
  return new cljs.core.async.impl.channels.t16642(val, box, null)
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_16645 = self__.takes.pop();
      if(taker_16645 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_16645)) {
          var take_cb_16646 = cljs.core.async.impl.protocols.commit.call(null, taker_16645);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_16646, taker_16645) {
            return function() {
              return take_cb_16646.call(null, null)
            }
          }(take_cb_16646, taker_16645))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__16612 = level + 1;
        level = G__16612;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_16613 = 0;
    while(true) {
      if(i_16613 < arr.length) {
        arr[i_16613] = null;
        var G__16614 = i_16613 + 1;
        i_16613 = G__16614;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__16615 = x_SINGLEQUOTE_;
                x__$1 = G__16615;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__16616 = x__$1;
        var G__16617 = k;
        var G__16618 = level - 1;
        var G__16619 = update;
        x = G__16616;
        k = G__16617;
        level = G__16618;
        update = G__16619;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_16620 = self__.level + 1;
      while(true) {
        if(i_16620 <= new_level + 1) {
          update[i_16620] = self__.header;
          var G__16621 = i_16620 + 1;
          i_16620 = G__16621;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    var i_16622 = 0;
    while(true) {
      if(i_16622 <= self__.level) {
        var links_16623 = update[i_16622].forward;
        if(links_16623[i_16622] === x__$1) {
          links_16623[i_16622] = x__$1.forward[i_16622];
          var G__16624 = i_16622 + 1;
          i_16622 = G__16624;
          continue
        }else {
          var G__16625 = i_16622 + 1;
          i_16622 = G__16625;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__16626 = x_SINGLEQUOTE_;
              x__$1 = G__16626;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__16627 = nx;
        var G__16628 = level__$1 - 1;
        x = G__16627;
        level__$1 = G__16628;
        continue
      }else {
        var G__16629 = x;
        var G__16630 = level__$1 - 1;
        x = G__16629;
        level__$1 = G__16630;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__16631 = x_SINGLEQUOTE_;
              x__$1 = G__16631;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__16632 = nx;
        var G__16633 = level__$1 - 1;
        x = G__16632;
        level__$1 = G__16633;
        continue
      }else {
        var G__16634 = x;
        var G__16635 = level__$1 - 1;
        x = G__16634;
        level__$1 = G__16635;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3128__auto__ = cljs.core.truth_(function() {
    var and__3119__auto__ = me;
    if(cljs.core.truth_(and__3119__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3119__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t14710 !== "undefined") {
  }else {
    cljs.core.async.t14710 = function(f, fn_handler, meta14711) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14711 = meta14711;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14710.cljs$lang$type = true;
    cljs.core.async.t14710.cljs$lang$ctorStr = "cljs.core.async/t14710";
    cljs.core.async.t14710.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14710")
    };
    cljs.core.async.t14710.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14710.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.t14710.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.t14710.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14712) {
      var self__ = this;
      var _14712__$1 = this;
      return self__.meta14711
    };
    cljs.core.async.t14710.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14712, meta14711__$1) {
      var self__ = this;
      var _14712__$1 = this;
      return new cljs.core.async.t14710(self__.f, self__.fn_handler, meta14711__$1)
    };
    cljs.core.async.__GT_t14710 = function __GT_t14710(f__$1, fn_handler__$1, meta14711) {
      return new cljs.core.async.t14710(f__$1, fn_handler__$1, meta14711)
    }
  }
  return new cljs.core.async.t14710(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_14713 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14713)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_14713)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3119__auto__ = ret;
      if(cljs.core.truth_(and__3119__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3119__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3891__auto___14714 = n;
  var x_14715 = 0;
  while(true) {
    if(x_14715 < n__3891__auto___14714) {
      a[x_14715] = 0;
      var G__14716 = x_14715 + 1;
      x_14715 = G__14716;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14717 = i + 1;
      i = G__14717;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t14721 !== "undefined") {
  }else {
    cljs.core.async.t14721 = function(flag, alt_flag, meta14722) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14722 = meta14722;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14721.cljs$lang$type = true;
    cljs.core.async.t14721.cljs$lang$ctorStr = "cljs.core.async/t14721";
    cljs.core.async.t14721.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14721")
    };
    cljs.core.async.t14721.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14721.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t14721.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t14721.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14723) {
      var self__ = this;
      var _14723__$1 = this;
      return self__.meta14722
    };
    cljs.core.async.t14721.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14723, meta14722__$1) {
      var self__ = this;
      var _14723__$1 = this;
      return new cljs.core.async.t14721(self__.flag, self__.alt_flag, meta14722__$1)
    };
    cljs.core.async.__GT_t14721 = function __GT_t14721(flag__$1, alt_flag__$1, meta14722) {
      return new cljs.core.async.t14721(flag__$1, alt_flag__$1, meta14722)
    }
  }
  return new cljs.core.async.t14721(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t14727 !== "undefined") {
  }else {
    cljs.core.async.t14727 = function(cb, flag, alt_handler, meta14728) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14728 = meta14728;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14727.cljs$lang$type = true;
    cljs.core.async.t14727.cljs$lang$ctorStr = "cljs.core.async/t14727";
    cljs.core.async.t14727.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14727")
    };
    cljs.core.async.t14727.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14727.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t14727.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t14727.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14729) {
      var self__ = this;
      var _14729__$1 = this;
      return self__.meta14728
    };
    cljs.core.async.t14727.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14729, meta14728__$1) {
      var self__ = this;
      var _14729__$1 = this;
      return new cljs.core.async.t14727(self__.cb, self__.flag, self__.alt_handler, meta14728__$1)
    };
    cljs.core.async.__GT_t14727 = function __GT_t14727(cb__$1, flag__$1, alt_handler__$1, meta14728) {
      return new cljs.core.async.t14727(cb__$1, flag__$1, alt_handler__$1, meta14728)
    }
  }
  return new cljs.core.async.t14727(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14730_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__14730_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3128__auto__ = wport;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__14731 = i + 1;
          i = G__14731;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3128__auto__ = ret;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3119__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3119__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3119__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14732) {
    var map__14734 = p__14732;
    var map__14734__$1 = cljs.core.seq_QMARK_.call(null, map__14734) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14734) : map__14734;
    var opts = map__14734__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14732 = null;
    if(arguments.length > 1) {
      p__14732 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__14732)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14735) {
    var ports = cljs.core.first(arglist__14735);
    var p__14732 = cljs.core.rest(arglist__14735);
    return alts_BANG___delegate(ports, p__14732)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t14743 !== "undefined") {
  }else {
    cljs.core.async.t14743 = function(ch, f, map_LT_, meta14744) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14744 = meta14744;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14743.cljs$lang$type = true;
    cljs.core.async.t14743.cljs$lang$ctorStr = "cljs.core.async/t14743";
    cljs.core.async.t14743.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14743")
    };
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t14746 !== "undefined") {
        }else {
          cljs.core.async.t14746 = function(fn1, _, meta14744, ch, f, map_LT_, meta14747) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14744 = meta14744;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta14747 = meta14747;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t14746.cljs$lang$type = true;
          cljs.core.async.t14746.cljs$lang$ctorStr = "cljs.core.async/t14746";
          cljs.core.async.t14746.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
            return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14746")
          };
          cljs.core.async.t14746.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14746.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t14746.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t14746.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__14736_SHARP_) {
                return f1.call(null, p1__14736_SHARP_ == null ? null : self__.f.call(null, p1__14736_SHARP_))
              }
            }(f1, ___$4)
          };
          cljs.core.async.t14746.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14748) {
            var self__ = this;
            var _14748__$1 = this;
            return self__.meta14747
          };
          cljs.core.async.t14746.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14748, meta14747__$1) {
            var self__ = this;
            var _14748__$1 = this;
            return new cljs.core.async.t14746(self__.fn1, self__._, self__.meta14744, self__.ch, self__.f, self__.map_LT_, meta14747__$1)
          };
          cljs.core.async.__GT_t14746 = function __GT_t14746(fn1__$1, ___$2, meta14744__$1, ch__$2, f__$2, map_LT___$2, meta14747) {
            return new cljs.core.async.t14746(fn1__$1, ___$2, meta14744__$1, ch__$2, f__$2, map_LT___$2, meta14747)
          }
        }
        return new cljs.core.async.t14746(fn1, ___$1, self__.meta14744, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = ret;
        if(cljs.core.truth_(and__3119__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3119__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14743.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14743.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14745) {
      var self__ = this;
      var _14745__$1 = this;
      return self__.meta14744
    };
    cljs.core.async.t14743.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14745, meta14744__$1) {
      var self__ = this;
      var _14745__$1 = this;
      return new cljs.core.async.t14743(self__.ch, self__.f, self__.map_LT_, meta14744__$1)
    };
    cljs.core.async.__GT_t14743 = function __GT_t14743(ch__$1, f__$1, map_LT___$1, meta14744) {
      return new cljs.core.async.t14743(ch__$1, f__$1, map_LT___$1, meta14744)
    }
  }
  return new cljs.core.async.t14743(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t14752 !== "undefined") {
  }else {
    cljs.core.async.t14752 = function(ch, f, map_GT_, meta14753) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14753 = meta14753;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14752.cljs$lang$type = true;
    cljs.core.async.t14752.cljs$lang$ctorStr = "cljs.core.async/t14752";
    cljs.core.async.t14752.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14752")
    };
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14752.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14752.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14754) {
      var self__ = this;
      var _14754__$1 = this;
      return self__.meta14753
    };
    cljs.core.async.t14752.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14754, meta14753__$1) {
      var self__ = this;
      var _14754__$1 = this;
      return new cljs.core.async.t14752(self__.ch, self__.f, self__.map_GT_, meta14753__$1)
    };
    cljs.core.async.__GT_t14752 = function __GT_t14752(ch__$1, f__$1, map_GT___$1, meta14753) {
      return new cljs.core.async.t14752(ch__$1, f__$1, map_GT___$1, meta14753)
    }
  }
  return new cljs.core.async.t14752(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t14758 !== "undefined") {
  }else {
    cljs.core.async.t14758 = function(ch, p, filter_GT_, meta14759) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14759 = meta14759;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14758.cljs$lang$type = true;
    cljs.core.async.t14758.cljs$lang$ctorStr = "cljs.core.async/t14758";
    cljs.core.async.t14758.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14758")
    };
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14758.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14758.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14760) {
      var self__ = this;
      var _14760__$1 = this;
      return self__.meta14759
    };
    cljs.core.async.t14758.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14760, meta14759__$1) {
      var self__ = this;
      var _14760__$1 = this;
      return new cljs.core.async.t14758(self__.ch, self__.p, self__.filter_GT_, meta14759__$1)
    };
    cljs.core.async.__GT_t14758 = function __GT_t14758(ch__$1, p__$1, filter_GT___$1, meta14759) {
      return new cljs.core.async.t14758(ch__$1, p__$1, filter_GT___$1, meta14759)
    }
  }
  return new cljs.core.async.t14758(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5380__auto___14835 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_14818) {
          var state_val_14819 = state_14818[1];
          if(state_val_14819 === 1) {
            var state_14818__$1 = state_14818;
            var statearr_14820_14836 = state_14818__$1;
            statearr_14820_14836[2] = null;
            statearr_14820_14836[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14819 === 2) {
              var state_14818__$1 = state_14818;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14818__$1, 4, ch)
            }else {
              if(state_val_14819 === 3) {
                var inst_14816 = state_14818[2];
                var state_14818__$1 = state_14818;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14818__$1, inst_14816)
              }else {
                if(state_val_14819 === 4) {
                  var inst_14800 = state_14818[5];
                  var inst_14800__$1 = state_14818[2];
                  var inst_14801 = inst_14800__$1 == null;
                  var state_14818__$1 = function() {
                    var statearr_14821 = state_14818;
                    statearr_14821[5] = inst_14800__$1;
                    return statearr_14821
                  }();
                  if(cljs.core.truth_(inst_14801)) {
                    var statearr_14822_14837 = state_14818__$1;
                    statearr_14822_14837[1] = 5
                  }else {
                    var statearr_14823_14838 = state_14818__$1;
                    statearr_14823_14838[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14819 === 5) {
                    var inst_14803 = cljs.core.async.close_BANG_.call(null, out);
                    var state_14818__$1 = state_14818;
                    var statearr_14824_14839 = state_14818__$1;
                    statearr_14824_14839[2] = inst_14803;
                    statearr_14824_14839[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14819 === 6) {
                      var inst_14800 = state_14818[5];
                      var inst_14805 = p.call(null, inst_14800);
                      var state_14818__$1 = state_14818;
                      if(cljs.core.truth_(inst_14805)) {
                        var statearr_14825_14840 = state_14818__$1;
                        statearr_14825_14840[1] = 8
                      }else {
                        var statearr_14826_14841 = state_14818__$1;
                        statearr_14826_14841[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14819 === 7) {
                        var inst_14814 = state_14818[2];
                        var state_14818__$1 = state_14818;
                        var statearr_14827_14842 = state_14818__$1;
                        statearr_14827_14842[2] = inst_14814;
                        statearr_14827_14842[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14819 === 8) {
                          var inst_14800 = state_14818[5];
                          var state_14818__$1 = state_14818;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14818__$1, 11, out, inst_14800)
                        }else {
                          if(state_val_14819 === 9) {
                            var state_14818__$1 = state_14818;
                            var statearr_14828_14843 = state_14818__$1;
                            statearr_14828_14843[2] = null;
                            statearr_14828_14843[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14819 === 10) {
                              var inst_14811 = state_14818[2];
                              var state_14818__$1 = function() {
                                var statearr_14829 = state_14818;
                                statearr_14829[6] = inst_14811;
                                return statearr_14829
                              }();
                              var statearr_14830_14844 = state_14818__$1;
                              statearr_14830_14844[2] = null;
                              statearr_14830_14844[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14819 === 11) {
                                var inst_14808 = state_14818[2];
                                var state_14818__$1 = state_14818;
                                var statearr_14831_14845 = state_14818__$1;
                                statearr_14831_14845[2] = inst_14808;
                                statearr_14831_14845[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_14833 = new Array(7);
              statearr_14833[0] = state_machine__5331__auto__;
              statearr_14833[1] = 1;
              return statearr_14833
            };
            var state_machine__5331__auto____1 = function(state_14818) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_14818);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_14818) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_14818)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_14834 = f__5381__auto__.call(null);
        statearr_14834[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___14835;
        return statearr_14834
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_14993) {
        var state_val_14994 = state_14993[1];
        if(state_val_14994 === 1) {
          var state_14993__$1 = state_14993;
          var statearr_14995_15028 = state_14993__$1;
          statearr_14995_15028[2] = null;
          statearr_14995_15028[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_14994 === 2) {
            var state_14993__$1 = state_14993;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14993__$1, 4, in$)
          }else {
            if(state_val_14994 === 3) {
              var inst_14991 = state_14993[2];
              var state_14993__$1 = state_14993;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14993__$1, inst_14991)
            }else {
              if(state_val_14994 === 4) {
                var inst_14939 = state_14993[5];
                var inst_14939__$1 = state_14993[2];
                var inst_14940 = inst_14939__$1 == null;
                var state_14993__$1 = function() {
                  var statearr_14996 = state_14993;
                  statearr_14996[5] = inst_14939__$1;
                  return statearr_14996
                }();
                if(cljs.core.truth_(inst_14940)) {
                  var statearr_14997_15029 = state_14993__$1;
                  statearr_14997_15029[1] = 5
                }else {
                  var statearr_14998_15030 = state_14993__$1;
                  statearr_14998_15030[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_14994 === 5) {
                  var inst_14942 = cljs.core.async.close_BANG_.call(null, out);
                  var state_14993__$1 = state_14993;
                  var statearr_14999_15031 = state_14993__$1;
                  statearr_14999_15031[2] = inst_14942;
                  statearr_14999_15031[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14994 === 6) {
                    var inst_14939 = state_14993[5];
                    var inst_14944 = f.call(null, inst_14939);
                    var inst_14949 = cljs.core.seq.call(null, inst_14944);
                    var inst_14950 = inst_14949;
                    var inst_14951 = null;
                    var inst_14952 = 0;
                    var inst_14953 = 0;
                    var state_14993__$1 = function() {
                      var statearr_15000 = state_14993;
                      statearr_15000[6] = inst_14953;
                      statearr_15000[7] = inst_14952;
                      statearr_15000[8] = inst_14951;
                      statearr_15000[9] = inst_14950;
                      return statearr_15000
                    }();
                    var statearr_15001_15032 = state_14993__$1;
                    statearr_15001_15032[2] = null;
                    statearr_15001_15032[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14994 === 7) {
                      var inst_14989 = state_14993[2];
                      var state_14993__$1 = state_14993;
                      var statearr_15002_15033 = state_14993__$1;
                      statearr_15002_15033[2] = inst_14989;
                      statearr_15002_15033[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14994 === 8) {
                        var inst_14953 = state_14993[6];
                        var inst_14952 = state_14993[7];
                        var inst_14955 = inst_14953 < inst_14952;
                        var inst_14956 = inst_14955;
                        var state_14993__$1 = state_14993;
                        if(cljs.core.truth_(inst_14956)) {
                          var statearr_15003_15034 = state_14993__$1;
                          statearr_15003_15034[1] = 10
                        }else {
                          var statearr_15004_15035 = state_14993__$1;
                          statearr_15004_15035[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14994 === 9) {
                          var inst_14986 = state_14993[2];
                          var state_14993__$1 = function() {
                            var statearr_15005 = state_14993;
                            statearr_15005[10] = inst_14986;
                            return statearr_15005
                          }();
                          var statearr_15006_15036 = state_14993__$1;
                          statearr_15006_15036[2] = null;
                          statearr_15006_15036[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_14994 === 10) {
                            var inst_14953 = state_14993[6];
                            var inst_14951 = state_14993[8];
                            var inst_14958 = cljs.core._nth.call(null, inst_14951, inst_14953);
                            var state_14993__$1 = state_14993;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14993__$1, 13, out, inst_14958)
                          }else {
                            if(state_val_14994 === 11) {
                              var inst_14964 = state_14993[11];
                              var inst_14950 = state_14993[9];
                              var inst_14964__$1 = cljs.core.seq.call(null, inst_14950);
                              var state_14993__$1 = function() {
                                var statearr_15010 = state_14993;
                                statearr_15010[11] = inst_14964__$1;
                                return statearr_15010
                              }();
                              if(inst_14964__$1) {
                                var statearr_15011_15037 = state_14993__$1;
                                statearr_15011_15037[1] = 14
                              }else {
                                var statearr_15012_15038 = state_14993__$1;
                                statearr_15012_15038[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14994 === 12) {
                                var inst_14984 = state_14993[2];
                                var state_14993__$1 = state_14993;
                                var statearr_15013_15039 = state_14993__$1;
                                statearr_15013_15039[2] = inst_14984;
                                statearr_15013_15039[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_14994 === 13) {
                                  var inst_14953 = state_14993[6];
                                  var inst_14952 = state_14993[7];
                                  var inst_14951 = state_14993[8];
                                  var inst_14950 = state_14993[9];
                                  var inst_14960 = state_14993[2];
                                  var inst_14961 = inst_14953 + 1;
                                  var tmp15007 = inst_14952;
                                  var tmp15008 = inst_14951;
                                  var tmp15009 = inst_14950;
                                  var inst_14950__$1 = tmp15009;
                                  var inst_14951__$1 = tmp15008;
                                  var inst_14952__$1 = tmp15007;
                                  var inst_14953__$1 = inst_14961;
                                  var state_14993__$1 = function() {
                                    var statearr_15014 = state_14993;
                                    statearr_15014[12] = inst_14960;
                                    statearr_15014[6] = inst_14953__$1;
                                    statearr_15014[7] = inst_14952__$1;
                                    statearr_15014[8] = inst_14951__$1;
                                    statearr_15014[9] = inst_14950__$1;
                                    return statearr_15014
                                  }();
                                  var statearr_15015_15040 = state_14993__$1;
                                  statearr_15015_15040[2] = null;
                                  statearr_15015_15040[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_14994 === 14) {
                                    var inst_14964 = state_14993[11];
                                    var inst_14966 = cljs.core.chunked_seq_QMARK_.call(null, inst_14964);
                                    var state_14993__$1 = state_14993;
                                    if(inst_14966) {
                                      var statearr_15016_15041 = state_14993__$1;
                                      statearr_15016_15041[1] = 17
                                    }else {
                                      var statearr_15017_15042 = state_14993__$1;
                                      statearr_15017_15042[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_14994 === 15) {
                                      var state_14993__$1 = state_14993;
                                      var statearr_15018_15043 = state_14993__$1;
                                      statearr_15018_15043[2] = null;
                                      statearr_15018_15043[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_14994 === 16) {
                                        var inst_14982 = state_14993[2];
                                        var state_14993__$1 = state_14993;
                                        var statearr_15019_15044 = state_14993__$1;
                                        statearr_15019_15044[2] = inst_14982;
                                        statearr_15019_15044[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_14994 === 17) {
                                          var inst_14964 = state_14993[11];
                                          var inst_14968 = cljs.core.chunk_first.call(null, inst_14964);
                                          var inst_14969 = cljs.core.chunk_rest.call(null, inst_14964);
                                          var inst_14970 = cljs.core.count.call(null, inst_14968);
                                          var inst_14950 = inst_14969;
                                          var inst_14951 = inst_14968;
                                          var inst_14952 = inst_14970;
                                          var inst_14953 = 0;
                                          var state_14993__$1 = function() {
                                            var statearr_15020 = state_14993;
                                            statearr_15020[6] = inst_14953;
                                            statearr_15020[7] = inst_14952;
                                            statearr_15020[8] = inst_14951;
                                            statearr_15020[9] = inst_14950;
                                            return statearr_15020
                                          }();
                                          var statearr_15021_15045 = state_14993__$1;
                                          statearr_15021_15045[2] = null;
                                          statearr_15021_15045[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_14994 === 18) {
                                            var inst_14964 = state_14993[11];
                                            var inst_14973 = cljs.core.first.call(null, inst_14964);
                                            var state_14993__$1 = state_14993;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14993__$1, 20, out, inst_14973)
                                          }else {
                                            if(state_val_14994 === 19) {
                                              var inst_14979 = state_14993[2];
                                              var state_14993__$1 = state_14993;
                                              var statearr_15022_15046 = state_14993__$1;
                                              statearr_15022_15046[2] = inst_14979;
                                              statearr_15022_15046[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_14994 === 20) {
                                                var inst_14964 = state_14993[11];
                                                var inst_14975 = state_14993[2];
                                                var inst_14976 = cljs.core.next.call(null, inst_14964);
                                                var inst_14950 = inst_14976;
                                                var inst_14951 = null;
                                                var inst_14952 = 0;
                                                var inst_14953 = 0;
                                                var state_14993__$1 = function() {
                                                  var statearr_15023 = state_14993;
                                                  statearr_15023[13] = inst_14975;
                                                  statearr_15023[6] = inst_14953;
                                                  statearr_15023[7] = inst_14952;
                                                  statearr_15023[8] = inst_14951;
                                                  statearr_15023[9] = inst_14950;
                                                  return statearr_15023
                                                }();
                                                var statearr_15024_15047 = state_14993__$1;
                                                statearr_15024_15047[2] = null;
                                                statearr_15024_15047[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15026 = new Array(14);
            statearr_15026[0] = state_machine__5331__auto__;
            statearr_15026[1] = 1;
            return statearr_15026
          };
          var state_machine__5331__auto____1 = function(state_14993) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_14993);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_14993) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_14993)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15027 = f__5381__auto__.call(null);
      statearr_15027[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_15027
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5380__auto___15120 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15103) {
          var state_val_15104 = state_15103[1];
          if(state_val_15104 === 1) {
            var state_15103__$1 = state_15103;
            var statearr_15105_15121 = state_15103__$1;
            statearr_15105_15121[2] = null;
            statearr_15105_15121[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15104 === 2) {
              var state_15103__$1 = state_15103;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15103__$1, 4, from)
            }else {
              if(state_val_15104 === 3) {
                var inst_15101 = state_15103[2];
                var state_15103__$1 = state_15103;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15103__$1, inst_15101)
              }else {
                if(state_val_15104 === 4) {
                  var inst_15086 = state_15103[5];
                  var inst_15086__$1 = state_15103[2];
                  var inst_15087 = inst_15086__$1 == null;
                  var state_15103__$1 = function() {
                    var statearr_15106 = state_15103;
                    statearr_15106[5] = inst_15086__$1;
                    return statearr_15106
                  }();
                  if(cljs.core.truth_(inst_15087)) {
                    var statearr_15107_15122 = state_15103__$1;
                    statearr_15107_15122[1] = 5
                  }else {
                    var statearr_15108_15123 = state_15103__$1;
                    statearr_15108_15123[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15104 === 5) {
                    var state_15103__$1 = state_15103;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_15109_15124 = state_15103__$1;
                      statearr_15109_15124[1] = 8
                    }else {
                      var statearr_15110_15125 = state_15103__$1;
                      statearr_15110_15125[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15104 === 6) {
                      var inst_15086 = state_15103[5];
                      var state_15103__$1 = state_15103;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15103__$1, 11, to, inst_15086)
                    }else {
                      if(state_val_15104 === 7) {
                        var inst_15099 = state_15103[2];
                        var state_15103__$1 = state_15103;
                        var statearr_15111_15126 = state_15103__$1;
                        statearr_15111_15126[2] = inst_15099;
                        statearr_15111_15126[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15104 === 8) {
                          var inst_15090 = cljs.core.async.close_BANG_.call(null, to);
                          var state_15103__$1 = state_15103;
                          var statearr_15112_15127 = state_15103__$1;
                          statearr_15112_15127[2] = inst_15090;
                          statearr_15112_15127[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15104 === 9) {
                            var state_15103__$1 = state_15103;
                            var statearr_15113_15128 = state_15103__$1;
                            statearr_15113_15128[2] = null;
                            statearr_15113_15128[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15104 === 10) {
                              var inst_15093 = state_15103[2];
                              var state_15103__$1 = state_15103;
                              var statearr_15114_15129 = state_15103__$1;
                              statearr_15114_15129[2] = inst_15093;
                              statearr_15114_15129[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15104 === 11) {
                                var inst_15096 = state_15103[2];
                                var state_15103__$1 = function() {
                                  var statearr_15115 = state_15103;
                                  statearr_15115[6] = inst_15096;
                                  return statearr_15115
                                }();
                                var statearr_15116_15130 = state_15103__$1;
                                statearr_15116_15130[2] = null;
                                statearr_15116_15130[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15118 = new Array(7);
              statearr_15118[0] = state_machine__5331__auto__;
              statearr_15118[1] = 1;
              return statearr_15118
            };
            var state_machine__5331__auto____1 = function(state_15103) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15103);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15103) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15103)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15119 = f__5381__auto__.call(null);
        statearr_15119[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15120;
        return statearr_15119
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5380__auto___15209 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15191) {
          var state_val_15192 = state_15191[1];
          if(state_val_15192 === 1) {
            var state_15191__$1 = state_15191;
            var statearr_15193_15210 = state_15191__$1;
            statearr_15193_15210[2] = null;
            statearr_15193_15210[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15192 === 2) {
              var state_15191__$1 = state_15191;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15191__$1, 4, ch)
            }else {
              if(state_val_15192 === 3) {
                var inst_15189 = state_15191[2];
                var state_15191__$1 = state_15191;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15191__$1, inst_15189)
              }else {
                if(state_val_15192 === 4) {
                  var inst_15172 = state_15191[5];
                  var inst_15172__$1 = state_15191[2];
                  var inst_15173 = inst_15172__$1 == null;
                  var state_15191__$1 = function() {
                    var statearr_15194 = state_15191;
                    statearr_15194[5] = inst_15172__$1;
                    return statearr_15194
                  }();
                  if(cljs.core.truth_(inst_15173)) {
                    var statearr_15195_15211 = state_15191__$1;
                    statearr_15195_15211[1] = 5
                  }else {
                    var statearr_15196_15212 = state_15191__$1;
                    statearr_15196_15212[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15192 === 5) {
                    var inst_15175 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_15176 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_15191__$1 = function() {
                      var statearr_15197 = state_15191;
                      statearr_15197[6] = inst_15175;
                      return statearr_15197
                    }();
                    var statearr_15198_15213 = state_15191__$1;
                    statearr_15198_15213[2] = inst_15176;
                    statearr_15198_15213[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15192 === 6) {
                      var inst_15172 = state_15191[5];
                      var inst_15178 = p.call(null, inst_15172);
                      var state_15191__$1 = state_15191;
                      if(cljs.core.truth_(inst_15178)) {
                        var statearr_15199_15214 = state_15191__$1;
                        statearr_15199_15214[1] = 9
                      }else {
                        var statearr_15200_15215 = state_15191__$1;
                        statearr_15200_15215[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15192 === 7) {
                        var inst_15187 = state_15191[2];
                        var state_15191__$1 = state_15191;
                        var statearr_15201_15216 = state_15191__$1;
                        statearr_15201_15216[2] = inst_15187;
                        statearr_15201_15216[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15192 === 8) {
                          var inst_15184 = state_15191[2];
                          var state_15191__$1 = function() {
                            var statearr_15202 = state_15191;
                            statearr_15202[7] = inst_15184;
                            return statearr_15202
                          }();
                          var statearr_15203_15217 = state_15191__$1;
                          statearr_15203_15217[2] = null;
                          statearr_15203_15217[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15192 === 9) {
                            var state_15191__$1 = state_15191;
                            var statearr_15204_15218 = state_15191__$1;
                            statearr_15204_15218[2] = tc;
                            statearr_15204_15218[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15192 === 10) {
                              var state_15191__$1 = state_15191;
                              var statearr_15205_15219 = state_15191__$1;
                              statearr_15205_15219[2] = fc;
                              statearr_15205_15219[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15192 === 11) {
                                var inst_15172 = state_15191[5];
                                var inst_15182 = state_15191[2];
                                var state_15191__$1 = state_15191;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15191__$1, 8, inst_15182, inst_15172)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15207 = new Array(8);
              statearr_15207[0] = state_machine__5331__auto__;
              statearr_15207[1] = 1;
              return statearr_15207
            };
            var state_machine__5331__auto____1 = function(state_15191) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15191);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15191) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15191)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15208 = f__5381__auto__.call(null);
        statearr_15208[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15209;
        return statearr_15208
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return cljs.core.PersistentVector.fromArray([tc, fc], true)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_15262) {
        var state_val_15263 = state_15262[1];
        if(state_val_15263 === 7) {
          var inst_15258 = state_15262[2];
          var state_15262__$1 = state_15262;
          var statearr_15264_15276 = state_15262__$1;
          statearr_15264_15276[2] = inst_15258;
          statearr_15264_15276[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_15263 === 6) {
            var inst_15251 = state_15262[5];
            var inst_15248 = state_15262[6];
            var inst_15255 = f.call(null, inst_15248, inst_15251);
            var inst_15248__$1 = inst_15255;
            var state_15262__$1 = function() {
              var statearr_15265 = state_15262;
              statearr_15265[6] = inst_15248__$1;
              return statearr_15265
            }();
            var statearr_15266_15277 = state_15262__$1;
            statearr_15266_15277[2] = null;
            statearr_15266_15277[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15263 === 5) {
              var inst_15248 = state_15262[6];
              var state_15262__$1 = state_15262;
              var statearr_15267_15278 = state_15262__$1;
              statearr_15267_15278[2] = inst_15248;
              statearr_15267_15278[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15263 === 4) {
                var inst_15251 = state_15262[5];
                var inst_15251__$1 = state_15262[2];
                var inst_15252 = inst_15251__$1 == null;
                var state_15262__$1 = function() {
                  var statearr_15268 = state_15262;
                  statearr_15268[5] = inst_15251__$1;
                  return statearr_15268
                }();
                if(cljs.core.truth_(inst_15252)) {
                  var statearr_15269_15279 = state_15262__$1;
                  statearr_15269_15279[1] = 5
                }else {
                  var statearr_15270_15280 = state_15262__$1;
                  statearr_15270_15280[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_15263 === 3) {
                  var inst_15260 = state_15262[2];
                  var state_15262__$1 = state_15262;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15262__$1, inst_15260)
                }else {
                  if(state_val_15263 === 2) {
                    var state_15262__$1 = state_15262;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15262__$1, 4, ch)
                  }else {
                    if(state_val_15263 === 1) {
                      var inst_15248 = init;
                      var state_15262__$1 = function() {
                        var statearr_15271 = state_15262;
                        statearr_15271[6] = inst_15248;
                        return statearr_15271
                      }();
                      var statearr_15272_15281 = state_15262__$1;
                      statearr_15272_15281[2] = null;
                      statearr_15272_15281[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15274 = new Array(7);
            statearr_15274[0] = state_machine__5331__auto__;
            statearr_15274[1] = 1;
            return statearr_15274
          };
          var state_machine__5331__auto____1 = function(state_15262) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_15262);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_15262) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_15262)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15275 = f__5381__auto__.call(null);
      statearr_15275[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_15275
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15339) {
          var state_val_15340 = state_15339[1];
          if(state_val_15340 === 1) {
            var inst_15319 = cljs.core.seq.call(null, coll);
            var inst_15320 = inst_15319;
            var state_15339__$1 = function() {
              var statearr_15341 = state_15339;
              statearr_15341[5] = inst_15320;
              return statearr_15341
            }();
            var statearr_15342_15356 = state_15339__$1;
            statearr_15342_15356[2] = null;
            statearr_15342_15356[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15340 === 2) {
              var inst_15320 = state_15339[5];
              var state_15339__$1 = state_15339;
              if(cljs.core.truth_(inst_15320)) {
                var statearr_15343_15357 = state_15339__$1;
                statearr_15343_15357[1] = 4
              }else {
                var statearr_15344_15358 = state_15339__$1;
                statearr_15344_15358[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15340 === 3) {
                var inst_15337 = state_15339[2];
                var state_15339__$1 = state_15339;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15339__$1, inst_15337)
              }else {
                if(state_val_15340 === 4) {
                  var inst_15320 = state_15339[5];
                  var inst_15323 = cljs.core.first.call(null, inst_15320);
                  var state_15339__$1 = state_15339;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15339__$1, 7, ch, inst_15323)
                }else {
                  if(state_val_15340 === 5) {
                    var state_15339__$1 = state_15339;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_15345_15359 = state_15339__$1;
                      statearr_15345_15359[1] = 8
                    }else {
                      var statearr_15346_15360 = state_15339__$1;
                      statearr_15346_15360[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15340 === 6) {
                      var inst_15335 = state_15339[2];
                      var state_15339__$1 = state_15339;
                      var statearr_15347_15361 = state_15339__$1;
                      statearr_15347_15361[2] = inst_15335;
                      statearr_15347_15361[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15340 === 7) {
                        var inst_15320 = state_15339[5];
                        var inst_15325 = state_15339[2];
                        var inst_15326 = cljs.core.next.call(null, inst_15320);
                        var inst_15320__$1 = inst_15326;
                        var state_15339__$1 = function() {
                          var statearr_15348 = state_15339;
                          statearr_15348[6] = inst_15325;
                          statearr_15348[5] = inst_15320__$1;
                          return statearr_15348
                        }();
                        var statearr_15349_15362 = state_15339__$1;
                        statearr_15349_15362[2] = null;
                        statearr_15349_15362[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15340 === 8) {
                          var inst_15330 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_15339__$1 = state_15339;
                          var statearr_15350_15363 = state_15339__$1;
                          statearr_15350_15363[2] = inst_15330;
                          statearr_15350_15363[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15340 === 9) {
                            var state_15339__$1 = state_15339;
                            var statearr_15351_15364 = state_15339__$1;
                            statearr_15351_15364[2] = null;
                            statearr_15351_15364[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15340 === 10) {
                              var inst_15333 = state_15339[2];
                              var state_15339__$1 = state_15339;
                              var statearr_15352_15365 = state_15339__$1;
                              statearr_15352_15365[2] = inst_15333;
                              statearr_15352_15365[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15354 = new Array(7);
              statearr_15354[0] = state_machine__5331__auto__;
              statearr_15354[1] = 1;
              return statearr_15354
            };
            var state_machine__5331__auto____1 = function(state_15339) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15339);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15339) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15339)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15355 = f__5381__auto__.call(null);
        statearr_15355[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
        return statearr_15355
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return c__5380__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3119__auto__ = _;
    if(and__3119__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3723__auto__ = _ == null ? null : _;
    return function() {
      var or__3128__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t15578 !== "undefined") {
    }else {
      cljs.core.async.t15578 = function(cs, ch, mult, meta15579) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta15579 = meta15579;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t15578.cljs$lang$type = true;
      cljs.core.async.t15578.cljs$lang$ctorStr = "cljs.core.async/t15578";
      cljs.core.async.t15578.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t15578")
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t15578.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15578.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_15580) {
          var self__ = this;
          var _15580__$1 = this;
          return self__.meta15579
        }
      }(cs);
      cljs.core.async.t15578.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_15580, meta15579__$1) {
          var self__ = this;
          var _15580__$1 = this;
          return new cljs.core.async.t15578(self__.cs, self__.ch, self__.mult, meta15579__$1)
        }
      }(cs);
      cljs.core.async.__GT_t15578 = function(cs) {
        return function __GT_t15578(cs__$1, ch__$1, mult__$1, meta15579) {
          return new cljs.core.async.t15578(cs__$1, ch__$1, mult__$1, meta15579)
        }
      }(cs)
    }
    return new cljs.core.async.t15578(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5380__auto___15790 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_15708) {
        var state_val_15709 = state_15708[1];
        if(state_val_15709 === 32) {
          try {
            var inst_15659 = state_15708[5];
            var inst_15583 = state_15708[6];
            var inst_15665 = cljs.core.async.put_BANG_.call(null, inst_15659, inst_15583, done);
            var state_15708__$1 = state_15708;
            var statearr_15712_15791 = state_15708__$1;
            statearr_15712_15791[2] = inst_15665;
            statearr_15712_15791[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e15710) {
            if(e15710 instanceof Object) {
              var ex__5324__auto__ = e15710;
              var statearr_15711_15792 = state_15708;
              statearr_15711_15792[1] = 31;
              statearr_15711_15792[2] = ex__5324__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e15710;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_15709 === 1) {
            var state_15708__$1 = state_15708;
            var statearr_15713_15793 = state_15708__$1;
            statearr_15713_15793[2] = null;
            statearr_15713_15793[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15709 === 33) {
              var inst_15671 = state_15708[7];
              var inst_15673 = cljs.core.chunked_seq_QMARK_.call(null, inst_15671);
              var state_15708__$1 = state_15708;
              if(inst_15673) {
                var statearr_15714_15794 = state_15708__$1;
                statearr_15714_15794[1] = 36
              }else {
                var statearr_15715_15795 = state_15708__$1;
                statearr_15715_15795[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15709 === 2) {
                var state_15708__$1 = state_15708;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15708__$1, 4, ch)
              }else {
                if(state_val_15709 === 34) {
                  var state_15708__$1 = state_15708;
                  var statearr_15716_15796 = state_15708__$1;
                  statearr_15716_15796[2] = null;
                  statearr_15716_15796[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15709 === 3) {
                    var inst_15706 = state_15708[2];
                    var state_15708__$1 = state_15708;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15708__$1, inst_15706)
                  }else {
                    if(state_val_15709 === 35) {
                      var inst_15695 = state_15708[2];
                      var state_15708__$1 = state_15708;
                      var statearr_15717_15797 = state_15708__$1;
                      statearr_15717_15797[2] = inst_15695;
                      statearr_15717_15797[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15709 === 4) {
                        var inst_15583 = state_15708[6];
                        var inst_15583__$1 = state_15708[2];
                        var inst_15584 = inst_15583__$1 == null;
                        var state_15708__$1 = function() {
                          var statearr_15718 = state_15708;
                          statearr_15718[6] = inst_15583__$1;
                          return statearr_15718
                        }();
                        if(cljs.core.truth_(inst_15584)) {
                          var statearr_15719_15798 = state_15708__$1;
                          statearr_15719_15798[1] = 5
                        }else {
                          var statearr_15720_15799 = state_15708__$1;
                          statearr_15720_15799[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15709 === 36) {
                          var inst_15671 = state_15708[7];
                          var inst_15675 = cljs.core.chunk_first.call(null, inst_15671);
                          var inst_15676 = cljs.core.chunk_rest.call(null, inst_15671);
                          var inst_15677 = cljs.core.count.call(null, inst_15675);
                          var inst_15651 = inst_15676;
                          var inst_15652 = inst_15675;
                          var inst_15653 = inst_15677;
                          var inst_15654 = 0;
                          var state_15708__$1 = function() {
                            var statearr_15721 = state_15708;
                            statearr_15721[8] = inst_15652;
                            statearr_15721[9] = inst_15653;
                            statearr_15721[10] = inst_15651;
                            statearr_15721[11] = inst_15654;
                            return statearr_15721
                          }();
                          var statearr_15722_15800 = state_15708__$1;
                          statearr_15722_15800[2] = null;
                          statearr_15722_15800[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15709 === 5) {
                            var inst_15590 = cljs.core.deref.call(null, cs);
                            var inst_15591 = cljs.core.seq.call(null, inst_15590);
                            var inst_15592 = inst_15591;
                            var inst_15593 = null;
                            var inst_15594 = 0;
                            var inst_15595 = 0;
                            var state_15708__$1 = function() {
                              var statearr_15723 = state_15708;
                              statearr_15723[12] = inst_15595;
                              statearr_15723[13] = inst_15592;
                              statearr_15723[14] = inst_15594;
                              statearr_15723[15] = inst_15593;
                              return statearr_15723
                            }();
                            var statearr_15724_15801 = state_15708__$1;
                            statearr_15724_15801[2] = null;
                            statearr_15724_15801[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15709 === 37) {
                              var inst_15671 = state_15708[7];
                              var inst_15680 = cljs.core.first.call(null, inst_15671);
                              var state_15708__$1 = function() {
                                var statearr_15725 = state_15708;
                                statearr_15725[16] = inst_15680;
                                return statearr_15725
                              }();
                              var statearr_15726_15802 = state_15708__$1;
                              statearr_15726_15802[2] = null;
                              statearr_15726_15802[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15709 === 6) {
                                var inst_15642 = cljs.core.deref.call(null, cs);
                                var inst_15643 = cljs.core.keys.call(null, inst_15642);
                                var inst_15644 = cljs.core.count.call(null, inst_15643);
                                var inst_15645 = cljs.core.reset_BANG_.call(null, dctr, inst_15644);
                                var inst_15650 = cljs.core.seq.call(null, inst_15643);
                                var inst_15651 = inst_15650;
                                var inst_15652 = null;
                                var inst_15653 = 0;
                                var inst_15654 = 0;
                                var state_15708__$1 = function() {
                                  var statearr_15727 = state_15708;
                                  statearr_15727[8] = inst_15652;
                                  statearr_15727[9] = inst_15653;
                                  statearr_15727[10] = inst_15651;
                                  statearr_15727[11] = inst_15654;
                                  statearr_15727[17] = inst_15645;
                                  return statearr_15727
                                }();
                                var statearr_15728_15803 = state_15708__$1;
                                statearr_15728_15803[2] = null;
                                statearr_15728_15803[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15709 === 38) {
                                  var inst_15692 = state_15708[2];
                                  var state_15708__$1 = state_15708;
                                  var statearr_15729_15804 = state_15708__$1;
                                  statearr_15729_15804[2] = inst_15692;
                                  statearr_15729_15804[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15709 === 7) {
                                    var inst_15704 = state_15708[2];
                                    var state_15708__$1 = state_15708;
                                    var statearr_15730_15805 = state_15708__$1;
                                    statearr_15730_15805[2] = inst_15704;
                                    statearr_15730_15805[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15709 === 39) {
                                      var inst_15671 = state_15708[7];
                                      var inst_15688 = state_15708[2];
                                      var inst_15689 = cljs.core.next.call(null, inst_15671);
                                      var inst_15651 = inst_15689;
                                      var inst_15652 = null;
                                      var inst_15653 = 0;
                                      var inst_15654 = 0;
                                      var state_15708__$1 = function() {
                                        var statearr_15731 = state_15708;
                                        statearr_15731[8] = inst_15652;
                                        statearr_15731[9] = inst_15653;
                                        statearr_15731[10] = inst_15651;
                                        statearr_15731[11] = inst_15654;
                                        statearr_15731[18] = inst_15688;
                                        return statearr_15731
                                      }();
                                      var statearr_15732_15806 = state_15708__$1;
                                      statearr_15732_15806[2] = null;
                                      statearr_15732_15806[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15709 === 8) {
                                        var inst_15595 = state_15708[12];
                                        var inst_15594 = state_15708[14];
                                        var inst_15597 = inst_15595 < inst_15594;
                                        var inst_15598 = inst_15597;
                                        var state_15708__$1 = state_15708;
                                        if(cljs.core.truth_(inst_15598)) {
                                          var statearr_15733_15807 = state_15708__$1;
                                          statearr_15733_15807[1] = 10
                                        }else {
                                          var statearr_15734_15808 = state_15708__$1;
                                          statearr_15734_15808[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15709 === 40) {
                                          var inst_15680 = state_15708[16];
                                          var inst_15681 = state_15708[2];
                                          var inst_15682 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_15683 = cljs.core.async.untap_STAR_.call(null, m, inst_15680);
                                          var state_15708__$1 = function() {
                                            var statearr_15735 = state_15708;
                                            statearr_15735[19] = inst_15682;
                                            statearr_15735[20] = inst_15681;
                                            return statearr_15735
                                          }();
                                          var statearr_15736_15809 = state_15708__$1;
                                          statearr_15736_15809[2] = inst_15683;
                                          statearr_15736_15809[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15709 === 9) {
                                            var inst_15640 = state_15708[2];
                                            var state_15708__$1 = state_15708;
                                            var statearr_15737_15810 = state_15708__$1;
                                            statearr_15737_15810[2] = inst_15640;
                                            statearr_15737_15810[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_15709 === 41) {
                                              try {
                                                var inst_15583 = state_15708[6];
                                                var inst_15680 = state_15708[16];
                                                var inst_15686 = cljs.core.async.put_BANG_.call(null, inst_15680, inst_15583, done);
                                                var state_15708__$1 = state_15708;
                                                var statearr_15740_15811 = state_15708__$1;
                                                statearr_15740_15811[2] = inst_15686;
                                                statearr_15740_15811[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e15738) {
                                                if(e15738 instanceof Object) {
                                                  var ex__5324__auto__ = e15738;
                                                  var statearr_15739_15812 = state_15708;
                                                  statearr_15739_15812[1] = 40;
                                                  statearr_15739_15812[2] = ex__5324__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e15738;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_15709 === 10) {
                                                var inst_15595 = state_15708[12];
                                                var inst_15593 = state_15708[15];
                                                var inst_15601 = cljs.core._nth.call(null, inst_15593, inst_15595);
                                                var inst_15602 = cljs.core.nth.call(null, inst_15601, 0, null);
                                                var inst_15603 = cljs.core.nth.call(null, inst_15601, 1, null);
                                                var state_15708__$1 = function() {
                                                  var statearr_15741 = state_15708;
                                                  statearr_15741[21] = inst_15602;
                                                  return statearr_15741
                                                }();
                                                if(cljs.core.truth_(inst_15603)) {
                                                  var statearr_15742_15813 = state_15708__$1;
                                                  statearr_15742_15813[1] = 13
                                                }else {
                                                  var statearr_15743_15814 = state_15708__$1;
                                                  statearr_15743_15814[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_15709 === 42) {
                                                  var inst_15701 = state_15708[2];
                                                  var state_15708__$1 = function() {
                                                    var statearr_15744 = state_15708;
                                                    statearr_15744[22] = inst_15701;
                                                    return statearr_15744
                                                  }();
                                                  var statearr_15745_15815 = state_15708__$1;
                                                  statearr_15745_15815[2] = null;
                                                  statearr_15745_15815[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_15709 === 11) {
                                                    var inst_15612 = state_15708[23];
                                                    var inst_15592 = state_15708[13];
                                                    var inst_15612__$1 = cljs.core.seq.call(null, inst_15592);
                                                    var state_15708__$1 = function() {
                                                      var statearr_15746 = state_15708;
                                                      statearr_15746[23] = inst_15612__$1;
                                                      return statearr_15746
                                                    }();
                                                    if(inst_15612__$1) {
                                                      var statearr_15747_15816 = state_15708__$1;
                                                      statearr_15747_15816[1] = 16
                                                    }else {
                                                      var statearr_15748_15817 = state_15708__$1;
                                                      statearr_15748_15817[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_15709 === 12) {
                                                      var inst_15638 = state_15708[2];
                                                      var state_15708__$1 = state_15708;
                                                      var statearr_15749_15818 = state_15708__$1;
                                                      statearr_15749_15818[2] = inst_15638;
                                                      statearr_15749_15818[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_15709 === 13) {
                                                        var inst_15602 = state_15708[21];
                                                        var inst_15605 = cljs.core.async.close_BANG_.call(null, inst_15602);
                                                        var state_15708__$1 = state_15708;
                                                        var statearr_15753_15819 = state_15708__$1;
                                                        statearr_15753_15819[2] = inst_15605;
                                                        statearr_15753_15819[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_15709 === 14) {
                                                          var state_15708__$1 = state_15708;
                                                          var statearr_15754_15820 = state_15708__$1;
                                                          statearr_15754_15820[2] = null;
                                                          statearr_15754_15820[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_15709 === 15) {
                                                            var inst_15595 = state_15708[12];
                                                            var inst_15592 = state_15708[13];
                                                            var inst_15594 = state_15708[14];
                                                            var inst_15593 = state_15708[15];
                                                            var inst_15608 = state_15708[2];
                                                            var inst_15609 = inst_15595 + 1;
                                                            var tmp15750 = inst_15592;
                                                            var tmp15751 = inst_15594;
                                                            var tmp15752 = inst_15593;
                                                            var inst_15592__$1 = tmp15750;
                                                            var inst_15593__$1 = tmp15752;
                                                            var inst_15594__$1 = tmp15751;
                                                            var inst_15595__$1 = inst_15609;
                                                            var state_15708__$1 = function() {
                                                              var statearr_15755 = state_15708;
                                                              statearr_15755[24] = inst_15608;
                                                              statearr_15755[12] = inst_15595__$1;
                                                              statearr_15755[13] = inst_15592__$1;
                                                              statearr_15755[14] = inst_15594__$1;
                                                              statearr_15755[15] = inst_15593__$1;
                                                              return statearr_15755
                                                            }();
                                                            var statearr_15756_15821 = state_15708__$1;
                                                            statearr_15756_15821[2] = null;
                                                            statearr_15756_15821[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_15709 === 16) {
                                                              var inst_15612 = state_15708[23];
                                                              var inst_15614 = cljs.core.chunked_seq_QMARK_.call(null, inst_15612);
                                                              var state_15708__$1 = state_15708;
                                                              if(inst_15614) {
                                                                var statearr_15757_15822 = state_15708__$1;
                                                                statearr_15757_15822[1] = 19
                                                              }else {
                                                                var statearr_15758_15823 = state_15708__$1;
                                                                statearr_15758_15823[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_15709 === 17) {
                                                                var state_15708__$1 = state_15708;
                                                                var statearr_15759_15824 = state_15708__$1;
                                                                statearr_15759_15824[2] = null;
                                                                statearr_15759_15824[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_15709 === 18) {
                                                                  var inst_15636 = state_15708[2];
                                                                  var state_15708__$1 = state_15708;
                                                                  var statearr_15760_15825 = state_15708__$1;
                                                                  statearr_15760_15825[2] = inst_15636;
                                                                  statearr_15760_15825[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_15709 === 19) {
                                                                    var inst_15612 = state_15708[23];
                                                                    var inst_15616 = cljs.core.chunk_first.call(null, inst_15612);
                                                                    var inst_15617 = cljs.core.chunk_rest.call(null, inst_15612);
                                                                    var inst_15618 = cljs.core.count.call(null, inst_15616);
                                                                    var inst_15592 = inst_15617;
                                                                    var inst_15593 = inst_15616;
                                                                    var inst_15594 = inst_15618;
                                                                    var inst_15595 = 0;
                                                                    var state_15708__$1 = function() {
                                                                      var statearr_15761 = state_15708;
                                                                      statearr_15761[12] = inst_15595;
                                                                      statearr_15761[13] = inst_15592;
                                                                      statearr_15761[14] = inst_15594;
                                                                      statearr_15761[15] = inst_15593;
                                                                      return statearr_15761
                                                                    }();
                                                                    var statearr_15762_15826 = state_15708__$1;
                                                                    statearr_15762_15826[2] = null;
                                                                    statearr_15762_15826[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_15709 === 20) {
                                                                      var inst_15612 = state_15708[23];
                                                                      var inst_15622 = cljs.core.first.call(null, inst_15612);
                                                                      var inst_15623 = cljs.core.nth.call(null, inst_15622, 0, null);
                                                                      var inst_15624 = cljs.core.nth.call(null, inst_15622, 1, null);
                                                                      var state_15708__$1 = function() {
                                                                        var statearr_15763 = state_15708;
                                                                        statearr_15763[25] = inst_15623;
                                                                        return statearr_15763
                                                                      }();
                                                                      if(cljs.core.truth_(inst_15624)) {
                                                                        var statearr_15764_15827 = state_15708__$1;
                                                                        statearr_15764_15827[1] = 22
                                                                      }else {
                                                                        var statearr_15765_15828 = state_15708__$1;
                                                                        statearr_15765_15828[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_15709 === 21) {
                                                                        var inst_15633 = state_15708[2];
                                                                        var state_15708__$1 = state_15708;
                                                                        var statearr_15766_15829 = state_15708__$1;
                                                                        statearr_15766_15829[2] = inst_15633;
                                                                        statearr_15766_15829[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_15709 === 22) {
                                                                          var inst_15623 = state_15708[25];
                                                                          var inst_15626 = cljs.core.async.close_BANG_.call(null, inst_15623);
                                                                          var state_15708__$1 = state_15708;
                                                                          var statearr_15767_15830 = state_15708__$1;
                                                                          statearr_15767_15830[2] = inst_15626;
                                                                          statearr_15767_15830[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_15709 === 23) {
                                                                            var state_15708__$1 = state_15708;
                                                                            var statearr_15768_15831 = state_15708__$1;
                                                                            statearr_15768_15831[2] = null;
                                                                            statearr_15768_15831[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_15709 === 24) {
                                                                              var inst_15612 = state_15708[23];
                                                                              var inst_15629 = state_15708[2];
                                                                              var inst_15630 = cljs.core.next.call(null, inst_15612);
                                                                              var inst_15592 = inst_15630;
                                                                              var inst_15593 = null;
                                                                              var inst_15594 = 0;
                                                                              var inst_15595 = 0;
                                                                              var state_15708__$1 = function() {
                                                                                var statearr_15769 = state_15708;
                                                                                statearr_15769[26] = inst_15629;
                                                                                statearr_15769[12] = inst_15595;
                                                                                statearr_15769[13] = inst_15592;
                                                                                statearr_15769[14] = inst_15594;
                                                                                statearr_15769[15] = inst_15593;
                                                                                return statearr_15769
                                                                              }();
                                                                              var statearr_15770_15832 = state_15708__$1;
                                                                              statearr_15770_15832[2] = null;
                                                                              statearr_15770_15832[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_15709 === 25) {
                                                                                var inst_15653 = state_15708[9];
                                                                                var inst_15654 = state_15708[11];
                                                                                var inst_15656 = inst_15654 < inst_15653;
                                                                                var inst_15657 = inst_15656;
                                                                                var state_15708__$1 = state_15708;
                                                                                if(cljs.core.truth_(inst_15657)) {
                                                                                  var statearr_15771_15833 = state_15708__$1;
                                                                                  statearr_15771_15833[1] = 27
                                                                                }else {
                                                                                  var statearr_15772_15834 = state_15708__$1;
                                                                                  statearr_15772_15834[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_15709 === 26) {
                                                                                  var inst_15699 = state_15708[2];
                                                                                  var state_15708__$1 = function() {
                                                                                    var statearr_15773 = state_15708;
                                                                                    statearr_15773[27] = inst_15699;
                                                                                    return statearr_15773
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15708__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_15709 === 27) {
                                                                                    var inst_15652 = state_15708[8];
                                                                                    var inst_15654 = state_15708[11];
                                                                                    var inst_15659 = cljs.core._nth.call(null, inst_15652, inst_15654);
                                                                                    var state_15708__$1 = function() {
                                                                                      var statearr_15774 = state_15708;
                                                                                      statearr_15774[5] = inst_15659;
                                                                                      return statearr_15774
                                                                                    }();
                                                                                    var statearr_15775_15835 = state_15708__$1;
                                                                                    statearr_15775_15835[2] = null;
                                                                                    statearr_15775_15835[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_15709 === 28) {
                                                                                      var inst_15651 = state_15708[10];
                                                                                      var inst_15671 = state_15708[7];
                                                                                      var inst_15671__$1 = cljs.core.seq.call(null, inst_15651);
                                                                                      var state_15708__$1 = function() {
                                                                                        var statearr_15779 = state_15708;
                                                                                        statearr_15779[7] = inst_15671__$1;
                                                                                        return statearr_15779
                                                                                      }();
                                                                                      if(inst_15671__$1) {
                                                                                        var statearr_15780_15836 = state_15708__$1;
                                                                                        statearr_15780_15836[1] = 33
                                                                                      }else {
                                                                                        var statearr_15781_15837 = state_15708__$1;
                                                                                        statearr_15781_15837[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_15709 === 29) {
                                                                                        var inst_15697 = state_15708[2];
                                                                                        var state_15708__$1 = state_15708;
                                                                                        var statearr_15782_15838 = state_15708__$1;
                                                                                        statearr_15782_15838[2] = inst_15697;
                                                                                        statearr_15782_15838[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_15709 === 30) {
                                                                                          var inst_15652 = state_15708[8];
                                                                                          var inst_15653 = state_15708[9];
                                                                                          var inst_15651 = state_15708[10];
                                                                                          var inst_15654 = state_15708[11];
                                                                                          var inst_15667 = state_15708[2];
                                                                                          var inst_15668 = inst_15654 + 1;
                                                                                          var tmp15776 = inst_15652;
                                                                                          var tmp15777 = inst_15653;
                                                                                          var tmp15778 = inst_15651;
                                                                                          var inst_15651__$1 = tmp15778;
                                                                                          var inst_15652__$1 = tmp15776;
                                                                                          var inst_15653__$1 = tmp15777;
                                                                                          var inst_15654__$1 = inst_15668;
                                                                                          var state_15708__$1 = function() {
                                                                                            var statearr_15783 = state_15708;
                                                                                            statearr_15783[8] = inst_15652__$1;
                                                                                            statearr_15783[9] = inst_15653__$1;
                                                                                            statearr_15783[10] = inst_15651__$1;
                                                                                            statearr_15783[28] = inst_15667;
                                                                                            statearr_15783[11] = inst_15654__$1;
                                                                                            return statearr_15783
                                                                                          }();
                                                                                          var statearr_15784_15839 = state_15708__$1;
                                                                                          statearr_15784_15839[2] = null;
                                                                                          statearr_15784_15839[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_15709 === 31) {
                                                                                            var inst_15659 = state_15708[5];
                                                                                            var inst_15660 = state_15708[2];
                                                                                            var inst_15661 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_15662 = cljs.core.async.untap_STAR_.call(null, m, inst_15659);
                                                                                            var state_15708__$1 = function() {
                                                                                              var statearr_15785 = state_15708;
                                                                                              statearr_15785[29] = inst_15661;
                                                                                              statearr_15785[30] = inst_15660;
                                                                                              return statearr_15785
                                                                                            }();
                                                                                            var statearr_15786_15840 = state_15708__$1;
                                                                                            statearr_15786_15840[2] = inst_15662;
                                                                                            statearr_15786_15840[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15788 = new Array(31);
            statearr_15788[0] = state_machine__5331__auto__;
            statearr_15788[1] = 1;
            return statearr_15788
          };
          var state_machine__5331__auto____1 = function(state_15708) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_15708);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_15708) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_15708)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15789 = f__5381__auto__.call(null);
      statearr_15789[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15790;
      return statearr_15789
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], true);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], true)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t15946 !== "undefined") {
    }else {
      cljs.core.async.t15946 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta15947) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta15947 = meta15947;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t15946.cljs$lang$type = true;
      cljs.core.async.t15946.cljs$lang$ctorStr = "cljs.core.async/t15946";
      cljs.core.async.t15946.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t15946")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15946.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15948) {
          var self__ = this;
          var _15948__$1 = this;
          return self__.meta15947
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t15946.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_15948, meta15947__$1) {
          var self__ = this;
          var _15948__$1 = this;
          return new cljs.core.async.t15946(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta15947__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t15946 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t15946(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta15947) {
          return new cljs.core.async.t15946(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta15947)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t15946(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5380__auto___16051 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_16013) {
        var state_val_16014 = state_16013[1];
        if(state_val_16014 === 1) {
          var inst_15952 = state_16013[5];
          var inst_15952__$1 = calc_state.call(null);
          var inst_15953 = cljs.core.seq_QMARK_.call(null, inst_15952__$1);
          var state_16013__$1 = function() {
            var statearr_16015 = state_16013;
            statearr_16015[5] = inst_15952__$1;
            return statearr_16015
          }();
          if(inst_15953) {
            var statearr_16016_16052 = state_16013__$1;
            statearr_16016_16052[1] = 2
          }else {
            var statearr_16017_16053 = state_16013__$1;
            statearr_16017_16053[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_16014 === 2) {
            var inst_15952 = state_16013[5];
            var inst_15955 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15952);
            var state_16013__$1 = state_16013;
            var statearr_16018_16054 = state_16013__$1;
            statearr_16018_16054[2] = inst_15955;
            statearr_16018_16054[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16014 === 3) {
              var inst_15952 = state_16013[5];
              var state_16013__$1 = state_16013;
              var statearr_16019_16055 = state_16013__$1;
              statearr_16019_16055[2] = inst_15952;
              statearr_16019_16055[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16014 === 4) {
                var inst_15952 = state_16013[5];
                var inst_15958 = state_16013[2];
                var inst_15959 = cljs.core.get.call(null, inst_15958, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_15960 = cljs.core.get.call(null, inst_15958, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_15961 = cljs.core.get.call(null, inst_15958, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_15962 = inst_15952;
                var state_16013__$1 = function() {
                  var statearr_16020 = state_16013;
                  statearr_16020[6] = inst_15959;
                  statearr_16020[7] = inst_15962;
                  statearr_16020[8] = inst_15960;
                  statearr_16020[9] = inst_15961;
                  return statearr_16020
                }();
                var statearr_16021_16056 = state_16013__$1;
                statearr_16021_16056[2] = null;
                statearr_16021_16056[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_16014 === 5) {
                  var inst_15962 = state_16013[7];
                  var inst_15965 = cljs.core.seq_QMARK_.call(null, inst_15962);
                  var state_16013__$1 = state_16013;
                  if(inst_15965) {
                    var statearr_16022_16057 = state_16013__$1;
                    statearr_16022_16057[1] = 7
                  }else {
                    var statearr_16023_16058 = state_16013__$1;
                    statearr_16023_16058[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16014 === 6) {
                    var inst_16011 = state_16013[2];
                    var state_16013__$1 = state_16013;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16013__$1, inst_16011)
                  }else {
                    if(state_val_16014 === 7) {
                      var inst_15962 = state_16013[7];
                      var inst_15967 = cljs.core.apply.call(null, cljs.core.hash_map, inst_15962);
                      var state_16013__$1 = state_16013;
                      var statearr_16024_16059 = state_16013__$1;
                      statearr_16024_16059[2] = inst_15967;
                      statearr_16024_16059[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16014 === 8) {
                        var inst_15962 = state_16013[7];
                        var state_16013__$1 = state_16013;
                        var statearr_16025_16060 = state_16013__$1;
                        statearr_16025_16060[2] = inst_15962;
                        statearr_16025_16060[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16014 === 9) {
                          var inst_15970 = state_16013[10];
                          var inst_15970__$1 = state_16013[2];
                          var inst_15971 = cljs.core.get.call(null, inst_15970__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_15972 = cljs.core.get.call(null, inst_15970__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_15973 = cljs.core.get.call(null, inst_15970__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_16013__$1 = function() {
                            var statearr_16026 = state_16013;
                            statearr_16026[11] = inst_15972;
                            statearr_16026[10] = inst_15970__$1;
                            statearr_16026[12] = inst_15973;
                            return statearr_16026
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_16013__$1, 10, inst_15971)
                        }else {
                          if(state_val_16014 === 10) {
                            var inst_15977 = state_16013[13];
                            var inst_15978 = state_16013[14];
                            var inst_15976 = state_16013[2];
                            var inst_15977__$1 = cljs.core.nth.call(null, inst_15976, 0, null);
                            var inst_15978__$1 = cljs.core.nth.call(null, inst_15976, 1, null);
                            var inst_15979 = inst_15977__$1 == null;
                            var inst_15980 = cljs.core._EQ_.call(null, inst_15978__$1, change);
                            var inst_15981 = inst_15979 || inst_15980;
                            var state_16013__$1 = function() {
                              var statearr_16027 = state_16013;
                              statearr_16027[13] = inst_15977__$1;
                              statearr_16027[14] = inst_15978__$1;
                              return statearr_16027
                            }();
                            if(cljs.core.truth_(inst_15981)) {
                              var statearr_16028_16061 = state_16013__$1;
                              statearr_16028_16061[1] = 11
                            }else {
                              var statearr_16029_16062 = state_16013__$1;
                              statearr_16029_16062[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16014 === 11) {
                              var inst_15977 = state_16013[13];
                              var inst_15983 = inst_15977 == null;
                              var state_16013__$1 = state_16013;
                              if(cljs.core.truth_(inst_15983)) {
                                var statearr_16030_16063 = state_16013__$1;
                                statearr_16030_16063[1] = 14
                              }else {
                                var statearr_16031_16064 = state_16013__$1;
                                statearr_16031_16064[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16014 === 12) {
                                var inst_15978 = state_16013[14];
                                var inst_15973 = state_16013[12];
                                var inst_15992 = state_16013[15];
                                var inst_15992__$1 = inst_15973.call(null, inst_15978);
                                var state_16013__$1 = function() {
                                  var statearr_16032 = state_16013;
                                  statearr_16032[15] = inst_15992__$1;
                                  return statearr_16032
                                }();
                                if(cljs.core.truth_(inst_15992__$1)) {
                                  var statearr_16033_16065 = state_16013__$1;
                                  statearr_16033_16065[1] = 17
                                }else {
                                  var statearr_16034_16066 = state_16013__$1;
                                  statearr_16034_16066[1] = 18
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_16014 === 13) {
                                  var inst_16009 = state_16013[2];
                                  var state_16013__$1 = state_16013;
                                  var statearr_16035_16067 = state_16013__$1;
                                  statearr_16035_16067[2] = inst_16009;
                                  statearr_16035_16067[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16014 === 14) {
                                    var inst_15978 = state_16013[14];
                                    var inst_15985 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_15978);
                                    var state_16013__$1 = state_16013;
                                    var statearr_16036_16068 = state_16013__$1;
                                    statearr_16036_16068[2] = inst_15985;
                                    statearr_16036_16068[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16014 === 15) {
                                      var state_16013__$1 = state_16013;
                                      var statearr_16037_16069 = state_16013__$1;
                                      statearr_16037_16069[2] = null;
                                      statearr_16037_16069[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_16014 === 16) {
                                        var inst_15988 = state_16013[2];
                                        var inst_15989 = calc_state.call(null);
                                        var inst_15962 = inst_15989;
                                        var state_16013__$1 = function() {
                                          var statearr_16038 = state_16013;
                                          statearr_16038[7] = inst_15962;
                                          statearr_16038[16] = inst_15988;
                                          return statearr_16038
                                        }();
                                        var statearr_16039_16070 = state_16013__$1;
                                        statearr_16039_16070[2] = null;
                                        statearr_16039_16070[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16014 === 17) {
                                          var inst_15992 = state_16013[15];
                                          var state_16013__$1 = state_16013;
                                          var statearr_16040_16071 = state_16013__$1;
                                          statearr_16040_16071[2] = inst_15992;
                                          statearr_16040_16071[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_16014 === 18) {
                                            var inst_15972 = state_16013[11];
                                            var inst_15978 = state_16013[14];
                                            var inst_15973 = state_16013[12];
                                            var inst_15995 = cljs.core.empty_QMARK_.call(null, inst_15973);
                                            var inst_15996 = inst_15972.call(null, inst_15978);
                                            var inst_15997 = cljs.core.not.call(null, inst_15996);
                                            var inst_15998 = inst_15995 && inst_15997;
                                            var state_16013__$1 = state_16013;
                                            var statearr_16041_16072 = state_16013__$1;
                                            statearr_16041_16072[2] = inst_15998;
                                            statearr_16041_16072[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_16014 === 19) {
                                              var inst_16000 = state_16013[2];
                                              var state_16013__$1 = state_16013;
                                              if(cljs.core.truth_(inst_16000)) {
                                                var statearr_16042_16073 = state_16013__$1;
                                                statearr_16042_16073[1] = 20
                                              }else {
                                                var statearr_16043_16074 = state_16013__$1;
                                                statearr_16043_16074[1] = 21
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_16014 === 20) {
                                                var inst_15977 = state_16013[13];
                                                var state_16013__$1 = state_16013;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16013__$1, 23, out, inst_15977)
                                              }else {
                                                if(state_val_16014 === 21) {
                                                  var state_16013__$1 = state_16013;
                                                  var statearr_16044_16075 = state_16013__$1;
                                                  statearr_16044_16075[2] = null;
                                                  statearr_16044_16075[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_16014 === 22) {
                                                    var inst_15970 = state_16013[10];
                                                    var inst_16006 = state_16013[2];
                                                    var inst_15962 = inst_15970;
                                                    var state_16013__$1 = function() {
                                                      var statearr_16045 = state_16013;
                                                      statearr_16045[7] = inst_15962;
                                                      statearr_16045[17] = inst_16006;
                                                      return statearr_16045
                                                    }();
                                                    var statearr_16046_16076 = state_16013__$1;
                                                    statearr_16046_16076[2] = null;
                                                    statearr_16046_16076[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_16014 === 23) {
                                                      var inst_16003 = state_16013[2];
                                                      var state_16013__$1 = state_16013;
                                                      var statearr_16047_16077 = state_16013__$1;
                                                      statearr_16047_16077[2] = inst_16003;
                                                      statearr_16047_16077[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_16049 = new Array(18);
            statearr_16049[0] = state_machine__5331__auto__;
            statearr_16049[1] = 1;
            return statearr_16049
          };
          var state_machine__5331__auto____1 = function(state_16013) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_16013);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_16013) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_16013)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_16050 = f__5381__auto__.call(null);
      statearr_16050[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16051;
      return statearr_16050
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3119__auto__ = p;
    if(and__3119__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3119__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3723__auto__ = p == null ? null : p;
    return function() {
      var or__3128__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3119__auto__ = p;
    if(and__3119__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3723__auto__ = p == null ? null : p;
    return function() {
      var or__3128__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3119__auto__ = p;
      if(and__3119__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3119__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3723__auto__ = p == null ? null : p;
      return function() {
        var or__3128__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3119__auto__ = p;
      if(and__3119__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3723__auto__ = p == null ? null : p;
      return function() {
        var or__3128__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3128__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3128__auto__, mults) {
            return function(p1__16078_SHARP_) {
              if(cljs.core.truth_(p1__16078_SHARP_.call(null, topic))) {
                return p1__16078_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__16078_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3128__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t16202 !== "undefined") {
      }else {
        cljs.core.async.t16202 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta16203) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta16203 = meta16203;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t16202.cljs$lang$type = true;
        cljs.core.async.t16202.cljs$lang$ctorStr = "cljs.core.async/t16202";
        cljs.core.async.t16202.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
            return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t16202")
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t16202.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t16202.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_16204) {
            var self__ = this;
            var _16204__$1 = this;
            return self__.meta16203
          }
        }(mults, ensure_mult);
        cljs.core.async.t16202.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_16204, meta16203__$1) {
            var self__ = this;
            var _16204__$1 = this;
            return new cljs.core.async.t16202(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta16203__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t16202 = function(mults, ensure_mult) {
          return function __GT_t16202(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta16203) {
            return new cljs.core.async.t16202(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta16203)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t16202(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5380__auto___16325 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16277) {
          var state_val_16278 = state_16277[1];
          if(state_val_16278 === 1) {
            var state_16277__$1 = state_16277;
            var statearr_16279_16326 = state_16277__$1;
            statearr_16279_16326[2] = null;
            statearr_16279_16326[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16278 === 2) {
              var state_16277__$1 = state_16277;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16277__$1, 4, ch)
            }else {
              if(state_val_16278 === 3) {
                var inst_16275 = state_16277[2];
                var state_16277__$1 = state_16277;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16277__$1, inst_16275)
              }else {
                if(state_val_16278 === 4) {
                  var inst_16207 = state_16277[5];
                  var inst_16207__$1 = state_16277[2];
                  var inst_16208 = inst_16207__$1 == null;
                  var state_16277__$1 = function() {
                    var statearr_16280 = state_16277;
                    statearr_16280[5] = inst_16207__$1;
                    return statearr_16280
                  }();
                  if(cljs.core.truth_(inst_16208)) {
                    var statearr_16281_16327 = state_16277__$1;
                    statearr_16281_16327[1] = 5
                  }else {
                    var statearr_16282_16328 = state_16277__$1;
                    statearr_16282_16328[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16278 === 5) {
                    var inst_16214 = cljs.core.deref.call(null, mults);
                    var inst_16215 = cljs.core.vals.call(null, inst_16214);
                    var inst_16216 = cljs.core.seq.call(null, inst_16215);
                    var inst_16217 = inst_16216;
                    var inst_16218 = null;
                    var inst_16219 = 0;
                    var inst_16220 = 0;
                    var state_16277__$1 = function() {
                      var statearr_16283 = state_16277;
                      statearr_16283[6] = inst_16220;
                      statearr_16283[7] = inst_16219;
                      statearr_16283[8] = inst_16218;
                      statearr_16283[9] = inst_16217;
                      return statearr_16283
                    }();
                    var statearr_16284_16329 = state_16277__$1;
                    statearr_16284_16329[2] = null;
                    statearr_16284_16329[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_16278 === 6) {
                      var inst_16257 = state_16277[10];
                      var inst_16255 = state_16277[11];
                      var inst_16207 = state_16277[5];
                      var inst_16255__$1 = topic_fn.call(null, inst_16207);
                      var inst_16256 = cljs.core.deref.call(null, mults);
                      var inst_16257__$1 = cljs.core.get.call(null, inst_16256, inst_16255__$1);
                      var state_16277__$1 = function() {
                        var statearr_16285 = state_16277;
                        statearr_16285[10] = inst_16257__$1;
                        statearr_16285[11] = inst_16255__$1;
                        return statearr_16285
                      }();
                      if(cljs.core.truth_(inst_16257__$1)) {
                        var statearr_16286_16330 = state_16277__$1;
                        statearr_16286_16330[1] = 19
                      }else {
                        var statearr_16287_16331 = state_16277__$1;
                        statearr_16287_16331[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16278 === 7) {
                        var inst_16273 = state_16277[2];
                        var state_16277__$1 = state_16277;
                        var statearr_16288_16332 = state_16277__$1;
                        statearr_16288_16332[2] = inst_16273;
                        statearr_16288_16332[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16278 === 8) {
                          var inst_16220 = state_16277[6];
                          var inst_16219 = state_16277[7];
                          var inst_16222 = inst_16220 < inst_16219;
                          var inst_16223 = inst_16222;
                          var state_16277__$1 = state_16277;
                          if(cljs.core.truth_(inst_16223)) {
                            var statearr_16292_16333 = state_16277__$1;
                            statearr_16292_16333[1] = 10
                          }else {
                            var statearr_16293_16334 = state_16277__$1;
                            statearr_16293_16334[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16278 === 9) {
                            var inst_16253 = state_16277[2];
                            var state_16277__$1 = state_16277;
                            var statearr_16294_16335 = state_16277__$1;
                            statearr_16294_16335[2] = inst_16253;
                            statearr_16294_16335[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16278 === 10) {
                              var inst_16220 = state_16277[6];
                              var inst_16219 = state_16277[7];
                              var inst_16218 = state_16277[8];
                              var inst_16217 = state_16277[9];
                              var inst_16225 = cljs.core._nth.call(null, inst_16218, inst_16220);
                              var inst_16226 = cljs.core.async.muxch_STAR_.call(null, inst_16225);
                              var inst_16227 = cljs.core.async.close_BANG_.call(null, inst_16226);
                              var inst_16228 = inst_16220 + 1;
                              var tmp16289 = inst_16219;
                              var tmp16290 = inst_16218;
                              var tmp16291 = inst_16217;
                              var inst_16217__$1 = tmp16291;
                              var inst_16218__$1 = tmp16290;
                              var inst_16219__$1 = tmp16289;
                              var inst_16220__$1 = inst_16228;
                              var state_16277__$1 = function() {
                                var statearr_16295 = state_16277;
                                statearr_16295[6] = inst_16220__$1;
                                statearr_16295[7] = inst_16219__$1;
                                statearr_16295[12] = inst_16227;
                                statearr_16295[8] = inst_16218__$1;
                                statearr_16295[9] = inst_16217__$1;
                                return statearr_16295
                              }();
                              var statearr_16296_16336 = state_16277__$1;
                              statearr_16296_16336[2] = null;
                              statearr_16296_16336[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16278 === 11) {
                                var inst_16231 = state_16277[13];
                                var inst_16217 = state_16277[9];
                                var inst_16231__$1 = cljs.core.seq.call(null, inst_16217);
                                var state_16277__$1 = function() {
                                  var statearr_16297 = state_16277;
                                  statearr_16297[13] = inst_16231__$1;
                                  return statearr_16297
                                }();
                                if(inst_16231__$1) {
                                  var statearr_16298_16337 = state_16277__$1;
                                  statearr_16298_16337[1] = 13
                                }else {
                                  var statearr_16299_16338 = state_16277__$1;
                                  statearr_16299_16338[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_16278 === 12) {
                                  var inst_16251 = state_16277[2];
                                  var state_16277__$1 = state_16277;
                                  var statearr_16300_16339 = state_16277__$1;
                                  statearr_16300_16339[2] = inst_16251;
                                  statearr_16300_16339[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16278 === 13) {
                                    var inst_16231 = state_16277[13];
                                    var inst_16233 = cljs.core.chunked_seq_QMARK_.call(null, inst_16231);
                                    var state_16277__$1 = state_16277;
                                    if(inst_16233) {
                                      var statearr_16301_16340 = state_16277__$1;
                                      statearr_16301_16340[1] = 16
                                    }else {
                                      var statearr_16302_16341 = state_16277__$1;
                                      statearr_16302_16341[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16278 === 14) {
                                      var state_16277__$1 = state_16277;
                                      var statearr_16303_16342 = state_16277__$1;
                                      statearr_16303_16342[2] = null;
                                      statearr_16303_16342[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_16278 === 15) {
                                        var inst_16249 = state_16277[2];
                                        var state_16277__$1 = state_16277;
                                        var statearr_16304_16343 = state_16277__$1;
                                        statearr_16304_16343[2] = inst_16249;
                                        statearr_16304_16343[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16278 === 16) {
                                          var inst_16231 = state_16277[13];
                                          var inst_16235 = cljs.core.chunk_first.call(null, inst_16231);
                                          var inst_16236 = cljs.core.chunk_rest.call(null, inst_16231);
                                          var inst_16237 = cljs.core.count.call(null, inst_16235);
                                          var inst_16217 = inst_16236;
                                          var inst_16218 = inst_16235;
                                          var inst_16219 = inst_16237;
                                          var inst_16220 = 0;
                                          var state_16277__$1 = function() {
                                            var statearr_16305 = state_16277;
                                            statearr_16305[6] = inst_16220;
                                            statearr_16305[7] = inst_16219;
                                            statearr_16305[8] = inst_16218;
                                            statearr_16305[9] = inst_16217;
                                            return statearr_16305
                                          }();
                                          var statearr_16306_16344 = state_16277__$1;
                                          statearr_16306_16344[2] = null;
                                          statearr_16306_16344[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_16278 === 17) {
                                            var inst_16231 = state_16277[13];
                                            var inst_16240 = cljs.core.first.call(null, inst_16231);
                                            var inst_16241 = cljs.core.async.muxch_STAR_.call(null, inst_16240);
                                            var inst_16242 = cljs.core.async.close_BANG_.call(null, inst_16241);
                                            var inst_16243 = cljs.core.next.call(null, inst_16231);
                                            var inst_16217 = inst_16243;
                                            var inst_16218 = null;
                                            var inst_16219 = 0;
                                            var inst_16220 = 0;
                                            var state_16277__$1 = function() {
                                              var statearr_16307 = state_16277;
                                              statearr_16307[6] = inst_16220;
                                              statearr_16307[7] = inst_16219;
                                              statearr_16307[8] = inst_16218;
                                              statearr_16307[9] = inst_16217;
                                              statearr_16307[14] = inst_16242;
                                              return statearr_16307
                                            }();
                                            var statearr_16308_16345 = state_16277__$1;
                                            statearr_16308_16345[2] = null;
                                            statearr_16308_16345[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_16278 === 18) {
                                              var inst_16246 = state_16277[2];
                                              var state_16277__$1 = state_16277;
                                              var statearr_16309_16346 = state_16277__$1;
                                              statearr_16309_16346[2] = inst_16246;
                                              statearr_16309_16346[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_16278 === 19) {
                                                var state_16277__$1 = state_16277;
                                                var statearr_16310_16347 = state_16277__$1;
                                                statearr_16310_16347[2] = null;
                                                statearr_16310_16347[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_16278 === 20) {
                                                  var state_16277__$1 = state_16277;
                                                  var statearr_16311_16348 = state_16277__$1;
                                                  statearr_16311_16348[2] = null;
                                                  statearr_16311_16348[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_16278 === 21) {
                                                    var inst_16270 = state_16277[2];
                                                    var state_16277__$1 = function() {
                                                      var statearr_16312 = state_16277;
                                                      statearr_16312[15] = inst_16270;
                                                      return statearr_16312
                                                    }();
                                                    var statearr_16313_16349 = state_16277__$1;
                                                    statearr_16313_16349[2] = null;
                                                    statearr_16313_16349[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_16278 === 22) {
                                                      var inst_16267 = state_16277[2];
                                                      var state_16277__$1 = state_16277;
                                                      var statearr_16314_16350 = state_16277__$1;
                                                      statearr_16314_16350[2] = inst_16267;
                                                      statearr_16314_16350[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_16278 === 23) {
                                                        var inst_16255 = state_16277[11];
                                                        var inst_16259 = state_16277[2];
                                                        var inst_16260 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_16255);
                                                        var state_16277__$1 = function() {
                                                          var statearr_16315 = state_16277;
                                                          statearr_16315[16] = inst_16259;
                                                          return statearr_16315
                                                        }();
                                                        var statearr_16316_16351 = state_16277__$1;
                                                        statearr_16316_16351[2] = inst_16260;
                                                        statearr_16316_16351[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_16278 === 24) {
                                                          try {
                                                            var inst_16257 = state_16277[10];
                                                            var inst_16207 = state_16277[5];
                                                            var inst_16263 = cljs.core.async.muxch_STAR_.call(null, inst_16257);
                                                            var state_16277__$1 = state_16277;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16277__$1, 25, inst_16263, inst_16207)
                                                          }catch(e16317) {
                                                            if(e16317 instanceof Object) {
                                                              var ex__5324__auto__ = e16317;
                                                              var statearr_16318_16352 = state_16277;
                                                              statearr_16318_16352[1] = 23;
                                                              statearr_16318_16352[2] = ex__5324__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e16317;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_16278 === 25) {
                                                            try {
                                                              var inst_16265 = state_16277[2];
                                                              var state_16277__$1 = state_16277;
                                                              var statearr_16321_16353 = state_16277__$1;
                                                              statearr_16321_16353[2] = inst_16265;
                                                              statearr_16321_16353[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e16319) {
                                                              if(e16319 instanceof Object) {
                                                                var ex__5324__auto__ = e16319;
                                                                var statearr_16320_16354 = state_16277;
                                                                statearr_16320_16354[1] = 23;
                                                                statearr_16320_16354[2] = ex__5324__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e16319;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16323 = new Array(17);
              statearr_16323[0] = state_machine__5331__auto__;
              statearr_16323[1] = 1;
              return statearr_16323
            };
            var state_machine__5331__auto____1 = function(state_16277) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16277);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16277) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16277)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16324 = f__5381__auto__.call(null);
        statearr_16324[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16325;
        return statearr_16324
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5380__auto___16485 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16457) {
          var state_val_16458 = state_16457[1];
          if(state_val_16458 === 1) {
            var state_16457__$1 = state_16457;
            var statearr_16459_16486 = state_16457__$1;
            statearr_16459_16486[2] = null;
            statearr_16459_16486[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16458 === 2) {
              var inst_16421 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_16422 = 0;
              var state_16457__$1 = function() {
                var statearr_16460 = state_16457;
                statearr_16460[5] = inst_16422;
                statearr_16460[6] = inst_16421;
                return statearr_16460
              }();
              var statearr_16461_16487 = state_16457__$1;
              statearr_16461_16487[2] = null;
              statearr_16461_16487[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16458 === 3) {
                var inst_16455 = state_16457[2];
                var state_16457__$1 = state_16457;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16457__$1, inst_16455)
              }else {
                if(state_val_16458 === 4) {
                  var inst_16422 = state_16457[5];
                  var inst_16424 = inst_16422 < cnt;
                  var state_16457__$1 = state_16457;
                  if(cljs.core.truth_(inst_16424)) {
                    var statearr_16462_16488 = state_16457__$1;
                    statearr_16462_16488[1] = 6
                  }else {
                    var statearr_16463_16489 = state_16457__$1;
                    statearr_16463_16489[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16458 === 5) {
                    var inst_16441 = state_16457[2];
                    var state_16457__$1 = function() {
                      var statearr_16464 = state_16457;
                      statearr_16464[7] = inst_16441;
                      return statearr_16464
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16457__$1, 12, dchan)
                  }else {
                    if(state_val_16458 === 6) {
                      var state_16457__$1 = state_16457;
                      var statearr_16465_16490 = state_16457__$1;
                      statearr_16465_16490[2] = null;
                      statearr_16465_16490[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16458 === 7) {
                        var state_16457__$1 = state_16457;
                        var statearr_16466_16491 = state_16457__$1;
                        statearr_16466_16491[2] = null;
                        statearr_16466_16491[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16458 === 8) {
                          var inst_16439 = state_16457[2];
                          var state_16457__$1 = state_16457;
                          var statearr_16467_16492 = state_16457__$1;
                          statearr_16467_16492[2] = inst_16439;
                          statearr_16467_16492[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16458 === 9) {
                            var inst_16422 = state_16457[5];
                            var inst_16434 = state_16457[2];
                            var inst_16435 = inst_16422 + 1;
                            var inst_16422__$1 = inst_16435;
                            var state_16457__$1 = function() {
                              var statearr_16468 = state_16457;
                              statearr_16468[5] = inst_16422__$1;
                              statearr_16468[8] = inst_16434;
                              return statearr_16468
                            }();
                            var statearr_16469_16493 = state_16457__$1;
                            statearr_16469_16493[2] = null;
                            statearr_16469_16493[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16458 === 10) {
                              var inst_16426 = state_16457[2];
                              var inst_16427 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_16457__$1 = function() {
                                var statearr_16470 = state_16457;
                                statearr_16470[9] = inst_16426;
                                return statearr_16470
                              }();
                              var statearr_16471_16494 = state_16457__$1;
                              statearr_16471_16494[2] = inst_16427;
                              statearr_16471_16494[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16458 === 11) {
                                try {
                                  var inst_16422 = state_16457[5];
                                  var inst_16430 = chs__$1.call(null, inst_16422);
                                  var inst_16431 = done.call(null, inst_16422);
                                  var inst_16432 = cljs.core.async.take_BANG_.call(null, inst_16430, inst_16431);
                                  var state_16457__$1 = state_16457;
                                  var statearr_16474_16495 = state_16457__$1;
                                  statearr_16474_16495[2] = inst_16432;
                                  statearr_16474_16495[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e16472) {
                                  if(e16472 instanceof Object) {
                                    var ex__5324__auto__ = e16472;
                                    var statearr_16473_16496 = state_16457;
                                    statearr_16473_16496[1] = 10;
                                    statearr_16473_16496[2] = ex__5324__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e16472;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_16458 === 12) {
                                  var inst_16443 = state_16457[10];
                                  var inst_16443__$1 = state_16457[2];
                                  var inst_16444 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_16443__$1);
                                  var state_16457__$1 = function() {
                                    var statearr_16475 = state_16457;
                                    statearr_16475[10] = inst_16443__$1;
                                    return statearr_16475
                                  }();
                                  if(cljs.core.truth_(inst_16444)) {
                                    var statearr_16476_16497 = state_16457__$1;
                                    statearr_16476_16497[1] = 13
                                  }else {
                                    var statearr_16477_16498 = state_16457__$1;
                                    statearr_16477_16498[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16458 === 13) {
                                    var inst_16446 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_16457__$1 = state_16457;
                                    var statearr_16478_16499 = state_16457__$1;
                                    statearr_16478_16499[2] = inst_16446;
                                    statearr_16478_16499[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16458 === 14) {
                                      var inst_16443 = state_16457[10];
                                      var inst_16448 = cljs.core.apply.call(null, f, inst_16443);
                                      var state_16457__$1 = state_16457;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16457__$1, 16, out, inst_16448)
                                    }else {
                                      if(state_val_16458 === 15) {
                                        var inst_16453 = state_16457[2];
                                        var state_16457__$1 = state_16457;
                                        var statearr_16479_16500 = state_16457__$1;
                                        statearr_16479_16500[2] = inst_16453;
                                        statearr_16479_16500[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16458 === 16) {
                                          var inst_16450 = state_16457[2];
                                          var state_16457__$1 = function() {
                                            var statearr_16480 = state_16457;
                                            statearr_16480[11] = inst_16450;
                                            return statearr_16480
                                          }();
                                          var statearr_16481_16501 = state_16457__$1;
                                          statearr_16481_16501[2] = null;
                                          statearr_16481_16501[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16483 = new Array(12);
              statearr_16483[0] = state_machine__5331__auto__;
              statearr_16483[1] = 1;
              return statearr_16483
            };
            var state_machine__5331__auto____1 = function(state_16457) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16457);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16457) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16457)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16484 = f__5381__auto__.call(null);
        statearr_16484[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16485;
        return statearr_16484
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5380__auto___16601 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16581) {
          var state_val_16582 = state_16581[1];
          if(state_val_16582 === 1) {
            var inst_16552 = cljs.core.vec.call(null, chs);
            var inst_16553 = inst_16552;
            var state_16581__$1 = function() {
              var statearr_16583 = state_16581;
              statearr_16583[5] = inst_16553;
              return statearr_16583
            }();
            var statearr_16584_16602 = state_16581__$1;
            statearr_16584_16602[2] = null;
            statearr_16584_16602[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16582 === 2) {
              var inst_16553 = state_16581[5];
              var inst_16555 = cljs.core.count.call(null, inst_16553);
              var inst_16556 = inst_16555 > 0;
              var state_16581__$1 = state_16581;
              if(cljs.core.truth_(inst_16556)) {
                var statearr_16585_16603 = state_16581__$1;
                statearr_16585_16603[1] = 4
              }else {
                var statearr_16586_16604 = state_16581__$1;
                statearr_16586_16604[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16582 === 3) {
                var inst_16579 = state_16581[2];
                var state_16581__$1 = state_16581;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16581__$1, inst_16579)
              }else {
                if(state_val_16582 === 4) {
                  var inst_16553 = state_16581[5];
                  var state_16581__$1 = state_16581;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_16581__$1, 7, inst_16553)
                }else {
                  if(state_val_16582 === 5) {
                    var inst_16575 = cljs.core.async.close_BANG_.call(null, out);
                    var state_16581__$1 = state_16581;
                    var statearr_16587_16605 = state_16581__$1;
                    statearr_16587_16605[2] = inst_16575;
                    statearr_16587_16605[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_16582 === 6) {
                      var inst_16577 = state_16581[2];
                      var state_16581__$1 = state_16581;
                      var statearr_16588_16606 = state_16581__$1;
                      statearr_16588_16606[2] = inst_16577;
                      statearr_16588_16606[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16582 === 7) {
                        var inst_16560 = state_16581[6];
                        var inst_16561 = state_16581[7];
                        var inst_16560__$1 = state_16581[2];
                        var inst_16561__$1 = cljs.core.nth.call(null, inst_16560__$1, 0, null);
                        var inst_16562 = cljs.core.nth.call(null, inst_16560__$1, 1, null);
                        var inst_16563 = inst_16561__$1 == null;
                        var state_16581__$1 = function() {
                          var statearr_16589 = state_16581;
                          statearr_16589[6] = inst_16560__$1;
                          statearr_16589[8] = inst_16562;
                          statearr_16589[7] = inst_16561__$1;
                          return statearr_16589
                        }();
                        if(cljs.core.truth_(inst_16563)) {
                          var statearr_16590_16607 = state_16581__$1;
                          statearr_16590_16607[1] = 8
                        }else {
                          var statearr_16591_16608 = state_16581__$1;
                          statearr_16591_16608[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16582 === 8) {
                          var inst_16553 = state_16581[5];
                          var inst_16560 = state_16581[6];
                          var inst_16562 = state_16581[8];
                          var inst_16561 = state_16581[7];
                          var inst_16565 = function() {
                            var c = inst_16562;
                            var v = inst_16561;
                            var vec__16558 = inst_16560;
                            var cs = inst_16553;
                            return function(c, v, vec__16558, cs, inst_16553, inst_16560, inst_16562, inst_16561, state_val_16582) {
                              return function(p1__16502_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__16502_SHARP_)
                              }
                            }(c, v, vec__16558, cs, inst_16553, inst_16560, inst_16562, inst_16561, state_val_16582)
                          }();
                          var inst_16566 = cljs.core.filterv.call(null, inst_16565, inst_16553);
                          var inst_16553__$1 = inst_16566;
                          var state_16581__$1 = function() {
                            var statearr_16592 = state_16581;
                            statearr_16592[5] = inst_16553__$1;
                            return statearr_16592
                          }();
                          var statearr_16593_16609 = state_16581__$1;
                          statearr_16593_16609[2] = null;
                          statearr_16593_16609[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16582 === 9) {
                            var inst_16561 = state_16581[7];
                            var state_16581__$1 = state_16581;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16581__$1, 11, out, inst_16561)
                          }else {
                            if(state_val_16582 === 10) {
                              var inst_16573 = state_16581[2];
                              var state_16581__$1 = state_16581;
                              var statearr_16595_16610 = state_16581__$1;
                              statearr_16595_16610[2] = inst_16573;
                              statearr_16595_16610[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16582 === 11) {
                                var inst_16553 = state_16581[5];
                                var inst_16570 = state_16581[2];
                                var tmp16594 = inst_16553;
                                var inst_16553__$1 = tmp16594;
                                var state_16581__$1 = function() {
                                  var statearr_16596 = state_16581;
                                  statearr_16596[5] = inst_16553__$1;
                                  statearr_16596[9] = inst_16570;
                                  return statearr_16596
                                }();
                                var statearr_16597_16611 = state_16581__$1;
                                statearr_16597_16611[2] = null;
                                statearr_16597_16611[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16599 = new Array(10);
              statearr_16599[0] = state_machine__5331__auto__;
              statearr_16599[1] = 1;
              return statearr_16599
            };
            var state_machine__5331__auto____1 = function(state_16581) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16581);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16581) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16581)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16600 = f__5381__auto__.call(null);
        statearr_16600[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16601;
        return statearr_16600
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__14704) {
  var vec__14706 = p__14704;
  var k = cljs.core.nth.call(null, vec__14706, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14706, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3119__auto__ = ks;
      if(cljs.core.truth_(and__3119__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3119__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("koans.repl");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
koans.repl.output_chan = cljs.core.async.chan.call(null);
koans.repl.error_chan = cljs.core.async.chan.call(null);
koans.repl.channel_piping_fn = function channel_piping_fn(chan) {
  return function(text) {
    var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_22587) {
          var state_val_22588 = state_22587[1];
          if(state_val_22588 === 2) {
            var inst_22585 = state_22587[2];
            var state_22587__$1 = state_22587;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22587__$1, inst_22585)
          }else {
            if(state_val_22588 === 1) {
              var state_22587__$1 = state_22587;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22587__$1, 2, chan, text)
            }else {
              return null
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_22590 = new Array(5);
              statearr_22590[0] = state_machine__5331__auto__;
              statearr_22590[1] = 1;
              return statearr_22590
            };
            var state_machine__5331__auto____1 = function(state_22587) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_22587);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_22587) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_22587)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_22591 = f__5381__auto__.call(null);
        statearr_22591[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
        return statearr_22591
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return c__5380__auto__
  }
};
repl.output = koans.repl.channel_piping_fn.call(null, koans.repl.output_chan);
repl.error = koans.repl.channel_piping_fn.call(null, koans.repl.error_chan);
repl.print_fn = function() {
  return cljs.core.List.EMPTY
};
koans.repl.eval = function eval(input_string) {
  return repl.evaluate(input_string)
};
goog.exportSymbol("koans.repl.eval", koans.repl.eval);
koans.repl.listen_for_output = function listen_for_output(handler) {
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_22638) {
        var state_val_22639 = state_22638[1];
        if(state_val_22639 === 7) {
          var inst_22626 = state_22638[2];
          var inst_22627 = cljs.core.nth.call(null, inst_22626, 0, null);
          var inst_22628 = cljs.core.nth.call(null, inst_22626, 1, null);
          var inst_22629 = console.log(inst_22627);
          var inst_22630 = handler.call(null, inst_22627);
          var state_22638__$1 = function() {
            var statearr_22640 = state_22638;
            statearr_22640[5] = inst_22630;
            statearr_22640[6] = inst_22628;
            statearr_22640[7] = inst_22629;
            return statearr_22640
          }();
          var statearr_22641_22650 = state_22638__$1;
          statearr_22641_22650[2] = null;
          statearr_22641_22650[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_22639 === 6) {
            var inst_22634 = state_22638[2];
            var state_22638__$1 = state_22638;
            var statearr_22642_22651 = state_22638__$1;
            statearr_22642_22651[2] = inst_22634;
            statearr_22642_22651[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_22639 === 5) {
              var state_22638__$1 = state_22638;
              var statearr_22643_22652 = state_22638__$1;
              statearr_22643_22652[2] = null;
              statearr_22643_22652[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_22639 === 4) {
                var inst_22624 = cljs.core.vector.call(null, koans.repl.output_chan);
                var state_22638__$1 = state_22638;
                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_22638__$1, 7, inst_22624)
              }else {
                if(state_val_22639 === 3) {
                  var inst_22636 = state_22638[2];
                  var state_22638__$1 = state_22638;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22638__$1, inst_22636)
                }else {
                  if(state_val_22639 === 2) {
                    var state_22638__$1 = state_22638;
                    if(true) {
                      var statearr_22644_22653 = state_22638__$1;
                      statearr_22644_22653[1] = 4
                    }else {
                      var statearr_22645_22654 = state_22638__$1;
                      statearr_22645_22654[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_22639 === 1) {
                      var state_22638__$1 = state_22638;
                      var statearr_22646_22655 = state_22638__$1;
                      statearr_22646_22655[2] = null;
                      statearr_22646_22655[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_22648 = new Array(8);
            statearr_22648[0] = state_machine__5331__auto__;
            statearr_22648[1] = 1;
            return statearr_22648
          };
          var state_machine__5331__auto____1 = function(state_22638) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_22638);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_22638) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_22638)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_22649 = f__5381__auto__.call(null);
      statearr_22649[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_22649
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
goog.exportSymbol("koans.repl.listen_for_output", koans.repl.listen_for_output);
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.template._PLUS_svg_ns_PLUS_ = "http://www.w3.org/2000/svg";
dommy.template._PLUS_svg_tags_PLUS_ = cljs.core.PersistentHashSet.fromArray(["svg", null, "line", null], true);
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = dommy.template._elem[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = dommy.template._elem["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = cljs.core.truth_(dommy.template._PLUS_svg_tags_PLUS_.call(null, tag)) ? document.createElementNS(dommy.template._PLUS_svg_ns_PLUS_, tag) : document.createElement(tag);
  if(base_idx >= 0) {
    var str_17094 = node_str.substring(base_idx);
    while(true) {
      var next_idx_17095 = dommy.template.next_css_index.call(null, str_17094, 1);
      var frag_17096 = next_idx_17095 >= 0 ? str_17094.substring(0, next_idx_17095) : str_17094;
      var G__17093_17097 = frag_17096.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__17093_17097)) {
        node.setAttribute("id", frag_17096.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__17093_17097)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_17096.substring(1))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_17096.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_17095 >= 0) {
        var G__17098 = str_17094.substring(next_idx_17095);
        str_17094 = G__17098;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__17104 = data;
      if(G__17104) {
        var bit__3746__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3128__auto__ = bit__3746__auto__;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return G__17104.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__17104.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17104)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17104)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__17105_17109 = cljs.core.seq.call(null, data);
        var chunk__17106_17110 = null;
        var count__17107_17111 = 0;
        var i__17108_17112 = 0;
        while(true) {
          if(i__17108_17112 < count__17107_17111) {
            var child_17113 = cljs.core._nth.call(null, chunk__17106_17110, i__17108_17112);
            __GT_document_fragment.call(null, result_frag, child_17113);
            var G__17114 = seq__17105_17109;
            var G__17115 = chunk__17106_17110;
            var G__17116 = count__17107_17111;
            var G__17117 = i__17108_17112 + 1;
            seq__17105_17109 = G__17114;
            chunk__17106_17110 = G__17115;
            count__17107_17111 = G__17116;
            i__17108_17112 = G__17117;
            continue
          }else {
            var temp__4092__auto___17118 = cljs.core.seq.call(null, seq__17105_17109);
            if(temp__4092__auto___17118) {
              var seq__17105_17119__$1 = temp__4092__auto___17118;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17105_17119__$1)) {
                var c__3844__auto___17120 = cljs.core.chunk_first.call(null, seq__17105_17119__$1);
                var G__17121 = cljs.core.chunk_rest.call(null, seq__17105_17119__$1);
                var G__17122 = c__3844__auto___17120;
                var G__17123 = cljs.core.count.call(null, c__3844__auto___17120);
                var G__17124 = 0;
                seq__17105_17109 = G__17121;
                chunk__17106_17110 = G__17122;
                count__17107_17111 = G__17123;
                i__17108_17112 = G__17124;
                continue
              }else {
                var child_17125 = cljs.core.first.call(null, seq__17105_17119__$1);
                __GT_document_fragment.call(null, result_frag, child_17125);
                var G__17126 = cljs.core.next.call(null, seq__17105_17119__$1);
                var G__17127 = null;
                var G__17128 = 0;
                var G__17129 = 0;
                seq__17105_17109 = G__17126;
                chunk__17106_17110 = G__17127;
                count__17107_17111 = G__17128;
                i__17108_17112 = G__17129;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__17131 = data;
    if(G__17131) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17131.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17131.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17131)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17131)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__17132) {
  var vec__17152 = p__17132;
  var tag_name = cljs.core.nth.call(null, vec__17152, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__17152, 1, null);
  var children = cljs.core.nthnext.call(null, vec__17152, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = cljs.core.map_QMARK_.call(null, maybe_attrs) && !function() {
    var G__17154 = maybe_attrs;
    if(G__17154) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17154.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17154.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17154)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17154)
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__17155_17171 = cljs.core.seq.call(null, attrs);
  var chunk__17156_17172 = null;
  var count__17157_17173 = 0;
  var i__17158_17174 = 0;
  while(true) {
    if(i__17158_17174 < count__17157_17173) {
      var vec__17159_17175 = cljs.core._nth.call(null, chunk__17156_17172, i__17158_17174);
      var k_17176 = cljs.core.nth.call(null, vec__17159_17175, 0, null);
      var v_17177 = cljs.core.nth.call(null, vec__17159_17175, 1, null);
      var G__17160_17178 = k_17176;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__17160_17178)) {
        var seq__17161_17179 = cljs.core.seq.call(null, v_17177);
        var chunk__17162_17180 = null;
        var count__17163_17181 = 0;
        var i__17164_17182 = 0;
        while(true) {
          if(i__17164_17182 < count__17163_17181) {
            var c_17183 = cljs.core._nth.call(null, chunk__17162_17180, i__17164_17182);
            dommy.attrs.add_class_BANG_.call(null, n, c_17183);
            var G__17184 = seq__17161_17179;
            var G__17185 = chunk__17162_17180;
            var G__17186 = count__17163_17181;
            var G__17187 = i__17164_17182 + 1;
            seq__17161_17179 = G__17184;
            chunk__17162_17180 = G__17185;
            count__17163_17181 = G__17186;
            i__17164_17182 = G__17187;
            continue
          }else {
            var temp__4092__auto___17188 = cljs.core.seq.call(null, seq__17161_17179);
            if(temp__4092__auto___17188) {
              var seq__17161_17189__$1 = temp__4092__auto___17188;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17161_17189__$1)) {
                var c__3844__auto___17190 = cljs.core.chunk_first.call(null, seq__17161_17189__$1);
                var G__17191 = cljs.core.chunk_rest.call(null, seq__17161_17189__$1);
                var G__17192 = c__3844__auto___17190;
                var G__17193 = cljs.core.count.call(null, c__3844__auto___17190);
                var G__17194 = 0;
                seq__17161_17179 = G__17191;
                chunk__17162_17180 = G__17192;
                count__17163_17181 = G__17193;
                i__17164_17182 = G__17194;
                continue
              }else {
                var c_17195 = cljs.core.first.call(null, seq__17161_17189__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_17195);
                var G__17196 = cljs.core.next.call(null, seq__17161_17189__$1);
                var G__17197 = null;
                var G__17198 = 0;
                var G__17199 = 0;
                seq__17161_17179 = G__17196;
                chunk__17162_17180 = G__17197;
                count__17163_17181 = G__17198;
                i__17164_17182 = G__17199;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__17160_17178)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_17177)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_17176, v_17177)
          }else {
          }
        }
      }
      var G__17200 = seq__17155_17171;
      var G__17201 = chunk__17156_17172;
      var G__17202 = count__17157_17173;
      var G__17203 = i__17158_17174 + 1;
      seq__17155_17171 = G__17200;
      chunk__17156_17172 = G__17201;
      count__17157_17173 = G__17202;
      i__17158_17174 = G__17203;
      continue
    }else {
      var temp__4092__auto___17204 = cljs.core.seq.call(null, seq__17155_17171);
      if(temp__4092__auto___17204) {
        var seq__17155_17205__$1 = temp__4092__auto___17204;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17155_17205__$1)) {
          var c__3844__auto___17206 = cljs.core.chunk_first.call(null, seq__17155_17205__$1);
          var G__17207 = cljs.core.chunk_rest.call(null, seq__17155_17205__$1);
          var G__17208 = c__3844__auto___17206;
          var G__17209 = cljs.core.count.call(null, c__3844__auto___17206);
          var G__17210 = 0;
          seq__17155_17171 = G__17207;
          chunk__17156_17172 = G__17208;
          count__17157_17173 = G__17209;
          i__17158_17174 = G__17210;
          continue
        }else {
          var vec__17165_17211 = cljs.core.first.call(null, seq__17155_17205__$1);
          var k_17212 = cljs.core.nth.call(null, vec__17165_17211, 0, null);
          var v_17213 = cljs.core.nth.call(null, vec__17165_17211, 1, null);
          var G__17166_17214 = k_17212;
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__17166_17214)) {
            var seq__17167_17215 = cljs.core.seq.call(null, v_17213);
            var chunk__17168_17216 = null;
            var count__17169_17217 = 0;
            var i__17170_17218 = 0;
            while(true) {
              if(i__17170_17218 < count__17169_17217) {
                var c_17219 = cljs.core._nth.call(null, chunk__17168_17216, i__17170_17218);
                dommy.attrs.add_class_BANG_.call(null, n, c_17219);
                var G__17220 = seq__17167_17215;
                var G__17221 = chunk__17168_17216;
                var G__17222 = count__17169_17217;
                var G__17223 = i__17170_17218 + 1;
                seq__17167_17215 = G__17220;
                chunk__17168_17216 = G__17221;
                count__17169_17217 = G__17222;
                i__17170_17218 = G__17223;
                continue
              }else {
                var temp__4092__auto___17224__$1 = cljs.core.seq.call(null, seq__17167_17215);
                if(temp__4092__auto___17224__$1) {
                  var seq__17167_17225__$1 = temp__4092__auto___17224__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__17167_17225__$1)) {
                    var c__3844__auto___17226 = cljs.core.chunk_first.call(null, seq__17167_17225__$1);
                    var G__17227 = cljs.core.chunk_rest.call(null, seq__17167_17225__$1);
                    var G__17228 = c__3844__auto___17226;
                    var G__17229 = cljs.core.count.call(null, c__3844__auto___17226);
                    var G__17230 = 0;
                    seq__17167_17215 = G__17227;
                    chunk__17168_17216 = G__17228;
                    count__17169_17217 = G__17229;
                    i__17170_17218 = G__17230;
                    continue
                  }else {
                    var c_17231 = cljs.core.first.call(null, seq__17167_17225__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_17231);
                    var G__17232 = cljs.core.next.call(null, seq__17167_17225__$1);
                    var G__17233 = null;
                    var G__17234 = 0;
                    var G__17235 = 0;
                    seq__17167_17215 = G__17232;
                    chunk__17168_17216 = G__17233;
                    count__17169_17217 = G__17234;
                    i__17170_17218 = G__17235;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__17166_17214)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_17213)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_17212, v_17213)
              }else {
              }
            }
          }
          var G__17236 = cljs.core.next.call(null, seq__17155_17205__$1);
          var G__17237 = null;
          var G__17238 = 0;
          var G__17239 = 0;
          seq__17155_17171 = G__17236;
          chunk__17156_17172 = G__17237;
          count__17157_17173 = G__17238;
          i__17158_17174 = G__17239;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return dommy.template.compound_element.call(null, this$__$1)
};
SVGElement.prototype.dommy$template$PElement$ = true;
SVGElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    var this$__$1 = this;
    return this$__$1
  }
}catch(e17240) {
  if(e17240 instanceof ReferenceError) {
    var __17241 = e17240;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e17240;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__17243 = data;
    if(G__17243) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17243.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17243.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17243)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17243)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.toggle_attr_BANG_ = dommy.attrs.toggle_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.scroll_into_view = dommy.attrs.scroll_into_view;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var or__3128__auto__ = elem.textContent;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return elem.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__16688 = dommy.template.__GT_node_like.call(null, parent);
    G__16688.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__16688
  };
  var append_BANG___3 = function() {
    var G__16693__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__16689_16694 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__16690_16695 = null;
      var count__16691_16696 = 0;
      var i__16692_16697 = 0;
      while(true) {
        if(i__16692_16697 < count__16691_16696) {
          var c_16698 = cljs.core._nth.call(null, chunk__16690_16695, i__16692_16697);
          append_BANG_.call(null, parent__$1, c_16698);
          var G__16699 = seq__16689_16694;
          var G__16700 = chunk__16690_16695;
          var G__16701 = count__16691_16696;
          var G__16702 = i__16692_16697 + 1;
          seq__16689_16694 = G__16699;
          chunk__16690_16695 = G__16700;
          count__16691_16696 = G__16701;
          i__16692_16697 = G__16702;
          continue
        }else {
          var temp__4092__auto___16703 = cljs.core.seq.call(null, seq__16689_16694);
          if(temp__4092__auto___16703) {
            var seq__16689_16704__$1 = temp__4092__auto___16703;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__16689_16704__$1)) {
              var c__3844__auto___16705 = cljs.core.chunk_first.call(null, seq__16689_16704__$1);
              var G__16706 = cljs.core.chunk_rest.call(null, seq__16689_16704__$1);
              var G__16707 = c__3844__auto___16705;
              var G__16708 = cljs.core.count.call(null, c__3844__auto___16705);
              var G__16709 = 0;
              seq__16689_16694 = G__16706;
              chunk__16690_16695 = G__16707;
              count__16691_16696 = G__16708;
              i__16692_16697 = G__16709;
              continue
            }else {
              var c_16710 = cljs.core.first.call(null, seq__16689_16704__$1);
              append_BANG_.call(null, parent__$1, c_16710);
              var G__16711 = cljs.core.next.call(null, seq__16689_16704__$1);
              var G__16712 = null;
              var G__16713 = 0;
              var G__16714 = 0;
              seq__16689_16694 = G__16711;
              chunk__16690_16695 = G__16712;
              count__16691_16696 = G__16713;
              i__16692_16697 = G__16714;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__16693 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16693__delegate.call(this, parent, child, more_children)
    };
    G__16693.cljs$lang$maxFixedArity = 2;
    G__16693.cljs$lang$applyTo = function(arglist__16715) {
      var parent = cljs.core.first(arglist__16715);
      arglist__16715 = cljs.core.next(arglist__16715);
      var child = cljs.core.first(arglist__16715);
      var more_children = cljs.core.rest(arglist__16715);
      return G__16693__delegate(parent, child, more_children)
    };
    G__16693.cljs$core$IFn$_invoke$arity$variadic = G__16693__delegate;
    return G__16693
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
    return parent__$1.insertBefore(dommy.template.__GT_node_like.call(null, child), parent__$1.firstChild)
  };
  var prepend_BANG___3 = function() {
    var G__16724__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__16720_16725 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__16721_16726 = null;
      var count__16722_16727 = 0;
      var i__16723_16728 = 0;
      while(true) {
        if(i__16723_16728 < count__16722_16727) {
          var c_16729 = cljs.core._nth.call(null, chunk__16721_16726, i__16723_16728);
          prepend_BANG_.call(null, parent__$1, c_16729);
          var G__16730 = seq__16720_16725;
          var G__16731 = chunk__16721_16726;
          var G__16732 = count__16722_16727;
          var G__16733 = i__16723_16728 + 1;
          seq__16720_16725 = G__16730;
          chunk__16721_16726 = G__16731;
          count__16722_16727 = G__16732;
          i__16723_16728 = G__16733;
          continue
        }else {
          var temp__4092__auto___16734 = cljs.core.seq.call(null, seq__16720_16725);
          if(temp__4092__auto___16734) {
            var seq__16720_16735__$1 = temp__4092__auto___16734;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__16720_16735__$1)) {
              var c__3844__auto___16736 = cljs.core.chunk_first.call(null, seq__16720_16735__$1);
              var G__16737 = cljs.core.chunk_rest.call(null, seq__16720_16735__$1);
              var G__16738 = c__3844__auto___16736;
              var G__16739 = cljs.core.count.call(null, c__3844__auto___16736);
              var G__16740 = 0;
              seq__16720_16725 = G__16737;
              chunk__16721_16726 = G__16738;
              count__16722_16727 = G__16739;
              i__16723_16728 = G__16740;
              continue
            }else {
              var c_16741 = cljs.core.first.call(null, seq__16720_16735__$1);
              prepend_BANG_.call(null, parent__$1, c_16741);
              var G__16742 = cljs.core.next.call(null, seq__16720_16735__$1);
              var G__16743 = null;
              var G__16744 = 0;
              var G__16745 = 0;
              seq__16720_16725 = G__16742;
              chunk__16721_16726 = G__16743;
              count__16722_16727 = G__16744;
              i__16723_16728 = G__16745;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__16724 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16724__delegate.call(this, parent, child, more_children)
    };
    G__16724.cljs$lang$maxFixedArity = 2;
    G__16724.cljs$lang$applyTo = function(arglist__16746) {
      var parent = cljs.core.first(arglist__16746);
      arglist__16746 = cljs.core.next(arglist__16746);
      var child = cljs.core.first(arglist__16746);
      var more_children = cljs.core.rest(arglist__16746);
      return G__16724__delegate(parent, child, more_children)
    };
    G__16724.cljs$core$IFn$_invoke$arity$variadic = G__16724__delegate;
    return G__16724
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___16747 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___16747)) {
    var next_16748 = temp__4090__auto___16747;
    parent.insertBefore(actual_node, next_16748)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__16750 = dommy.template.__GT_node_like.call(null, parent);
  G__16750.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__16750, node_like);
  return G__16750
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__16752 = elem__$1.parentNode;
  G__16752.removeChild(elem__$1);
  return G__16752
};
dommy.core.clear_BANG_ = function clear_BANG_(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML = ""
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(typeof data === "string" || data instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.selector_map = function selector_map(template, key_selectors_map) {
  var container = dommy.template.__GT_node_like.call(null, template);
  if(!cljs.core.contains_QMARK_.call(null, key_selectors_map, new cljs.core.Keyword(null, "container", "container", 602947571))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "contains?", "contains?", -2051487815, null), new cljs.core.Symbol(null, "key-selectors-map", "key-selectors-map", 19054414, null), new cljs.core.Keyword(null, "container", "container", 602947571)))))].join(""));
  }
  return cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "container", "container", 602947571), container], true), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__16758) {
    var vec__16759 = p__16758;
    var k = cljs.core.nth.call(null, vec__16759, 0, null);
    var v = cljs.core.nth.call(null, vec__16759, 1, null);
    return cljs.core.PersistentVector.fromArray([k, cljs.core.truth_((new cljs.core.Keyword(null, "live", "live", 1017226334)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v))) ? function() {
      if(typeof dommy.core.t16760 !== "undefined") {
      }else {
        dommy.core.t16760 = function(v, k, vec__16759, p__16758, container, key_selectors_map, template, selector_map, meta16761) {
          this.v = v;
          this.k = k;
          this.vec__16759 = vec__16759;
          this.p__16758 = p__16758;
          this.container = container;
          this.key_selectors_map = key_selectors_map;
          this.template = template;
          this.selector_map = selector_map;
          this.meta16761 = meta16761;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 425984
        };
        dommy.core.t16760.cljs$lang$type = true;
        dommy.core.t16760.cljs$lang$ctorStr = "dommy.core/t16760";
        dommy.core.t16760.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "dommy.core/t16760")
        };
        dommy.core.t16760.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, self__.container).querySelectorAll(dommy.core.selector.call(null, self__.v)))
        };
        dommy.core.t16760.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16762) {
          var self__ = this;
          var _16762__$1 = this;
          return self__.meta16761
        };
        dommy.core.t16760.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16762, meta16761__$1) {
          var self__ = this;
          var _16762__$1 = this;
          return new dommy.core.t16760(self__.v, self__.k, self__.vec__16759, self__.p__16758, self__.container, self__.key_selectors_map, self__.template, self__.selector_map, meta16761__$1)
        };
        dommy.core.__GT_t16760 = function __GT_t16760(v__$1, k__$1, vec__16759__$1, p__16758__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta16761) {
          return new dommy.core.t16760(v__$1, k__$1, vec__16759__$1, p__16758__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta16761)
        }
      }
      return new dommy.core.t16760(v, k, vec__16759, p__16758, container, key_selectors_map, template, selector_map, null)
    }() : dommy.template.__GT_node_like.call(null, container).querySelector(dommy.core.selector.call(null, v))], true)
  }, key_selectors_map)))
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__16763_SHARP_) {
    return p1__16763_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__16764_SHARP_) {
      return!(p1__16764_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__16765) {
  var vec__16766 = p__16765;
  var special_mouse_event = cljs.core.nth.call(null, vec__16766, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__16766, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3128__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = related_target;
        if(cljs.core.truth_(and__3119__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3119__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var selected_target = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(function() {
      var and__3119__auto__ = selected_target;
      if(cljs.core.truth_(and__3119__auto__)) {
        return cljs.core.not.call(null, dommy.core.attr.call(null, selected_target, new cljs.core.Keyword(null, "disabled", "disabled", 1284845038)))
      }else {
        return and__3119__auto__
      }
    }())) {
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3128__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__16767) {
    var elem = cljs.core.first(arglist__16767);
    arglist__16767 = cljs.core.next(arglist__16767);
    var f = cljs.core.first(arglist__16767);
    var args = cljs.core.rest(arglist__16767);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__16768_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__16768_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__16792_16815 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_16816 = cljs.core.nth.call(null, vec__16792_16815, 0, null);
    var selector_16817 = cljs.core.nth.call(null, vec__16792_16815, 1, null);
    var seq__16793_16818 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__16800_16819 = null;
    var count__16801_16820 = 0;
    var i__16802_16821 = 0;
    while(true) {
      if(i__16802_16821 < count__16801_16820) {
        var vec__16809_16822 = cljs.core._nth.call(null, chunk__16800_16819, i__16802_16821);
        var orig_type_16823 = cljs.core.nth.call(null, vec__16809_16822, 0, null);
        var f_16824 = cljs.core.nth.call(null, vec__16809_16822, 1, null);
        var seq__16803_16825 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16823, cljs.core.PersistentArrayMap.fromArray([orig_type_16823, cljs.core.identity], true)));
        var chunk__16805_16826 = null;
        var count__16806_16827 = 0;
        var i__16807_16828 = 0;
        while(true) {
          if(i__16807_16828 < count__16806_16827) {
            var vec__16810_16829 = cljs.core._nth.call(null, chunk__16805_16826, i__16807_16828);
            var actual_type_16830 = cljs.core.nth.call(null, vec__16810_16829, 0, null);
            var factory_16831 = cljs.core.nth.call(null, vec__16810_16829, 1, null);
            var canonical_f_16832 = (cljs.core.truth_(selector_16817) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16816, selector_16817) : cljs.core.identity).call(null, factory_16831.call(null, f_16824));
            dommy.core.update_event_listeners_BANG_.call(null, elem_16816, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16817, actual_type_16830, f_16824], true), canonical_f_16832);
            if(cljs.core.truth_(elem_16816.addEventListener)) {
              elem_16816.addEventListener(cljs.core.name.call(null, actual_type_16830), canonical_f_16832)
            }else {
              elem_16816.attachEvent(cljs.core.name.call(null, actual_type_16830), canonical_f_16832)
            }
            var G__16833 = seq__16803_16825;
            var G__16834 = chunk__16805_16826;
            var G__16835 = count__16806_16827;
            var G__16836 = i__16807_16828 + 1;
            seq__16803_16825 = G__16833;
            chunk__16805_16826 = G__16834;
            count__16806_16827 = G__16835;
            i__16807_16828 = G__16836;
            continue
          }else {
            var temp__4092__auto___16837 = cljs.core.seq.call(null, seq__16803_16825);
            if(temp__4092__auto___16837) {
              var seq__16803_16838__$1 = temp__4092__auto___16837;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__16803_16838__$1)) {
                var c__3844__auto___16839 = cljs.core.chunk_first.call(null, seq__16803_16838__$1);
                var G__16840 = cljs.core.chunk_rest.call(null, seq__16803_16838__$1);
                var G__16841 = c__3844__auto___16839;
                var G__16842 = cljs.core.count.call(null, c__3844__auto___16839);
                var G__16843 = 0;
                seq__16803_16825 = G__16840;
                chunk__16805_16826 = G__16841;
                count__16806_16827 = G__16842;
                i__16807_16828 = G__16843;
                continue
              }else {
                var vec__16811_16844 = cljs.core.first.call(null, seq__16803_16838__$1);
                var actual_type_16845 = cljs.core.nth.call(null, vec__16811_16844, 0, null);
                var factory_16846 = cljs.core.nth.call(null, vec__16811_16844, 1, null);
                var canonical_f_16847 = (cljs.core.truth_(selector_16817) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16816, selector_16817) : cljs.core.identity).call(null, factory_16846.call(null, f_16824));
                dommy.core.update_event_listeners_BANG_.call(null, elem_16816, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16817, actual_type_16845, f_16824], true), canonical_f_16847);
                if(cljs.core.truth_(elem_16816.addEventListener)) {
                  elem_16816.addEventListener(cljs.core.name.call(null, actual_type_16845), canonical_f_16847)
                }else {
                  elem_16816.attachEvent(cljs.core.name.call(null, actual_type_16845), canonical_f_16847)
                }
                var G__16848 = cljs.core.next.call(null, seq__16803_16838__$1);
                var G__16849 = null;
                var G__16850 = 0;
                var G__16851 = 0;
                seq__16803_16825 = G__16848;
                chunk__16805_16826 = G__16849;
                count__16806_16827 = G__16850;
                i__16807_16828 = G__16851;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__16852 = seq__16793_16818;
        var G__16853 = chunk__16800_16819;
        var G__16854 = count__16801_16820;
        var G__16855 = i__16802_16821 + 1;
        seq__16793_16818 = G__16852;
        chunk__16800_16819 = G__16853;
        count__16801_16820 = G__16854;
        i__16802_16821 = G__16855;
        continue
      }else {
        var temp__4092__auto___16856 = cljs.core.seq.call(null, seq__16793_16818);
        if(temp__4092__auto___16856) {
          var seq__16793_16857__$1 = temp__4092__auto___16856;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__16793_16857__$1)) {
            var c__3844__auto___16858 = cljs.core.chunk_first.call(null, seq__16793_16857__$1);
            var G__16859 = cljs.core.chunk_rest.call(null, seq__16793_16857__$1);
            var G__16860 = c__3844__auto___16858;
            var G__16861 = cljs.core.count.call(null, c__3844__auto___16858);
            var G__16862 = 0;
            seq__16793_16818 = G__16859;
            chunk__16800_16819 = G__16860;
            count__16801_16820 = G__16861;
            i__16802_16821 = G__16862;
            continue
          }else {
            var vec__16812_16863 = cljs.core.first.call(null, seq__16793_16857__$1);
            var orig_type_16864 = cljs.core.nth.call(null, vec__16812_16863, 0, null);
            var f_16865 = cljs.core.nth.call(null, vec__16812_16863, 1, null);
            var seq__16794_16866 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16864, cljs.core.PersistentArrayMap.fromArray([orig_type_16864, cljs.core.identity], true)));
            var chunk__16796_16867 = null;
            var count__16797_16868 = 0;
            var i__16798_16869 = 0;
            while(true) {
              if(i__16798_16869 < count__16797_16868) {
                var vec__16813_16870 = cljs.core._nth.call(null, chunk__16796_16867, i__16798_16869);
                var actual_type_16871 = cljs.core.nth.call(null, vec__16813_16870, 0, null);
                var factory_16872 = cljs.core.nth.call(null, vec__16813_16870, 1, null);
                var canonical_f_16873 = (cljs.core.truth_(selector_16817) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16816, selector_16817) : cljs.core.identity).call(null, factory_16872.call(null, f_16865));
                dommy.core.update_event_listeners_BANG_.call(null, elem_16816, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16817, actual_type_16871, f_16865], true), canonical_f_16873);
                if(cljs.core.truth_(elem_16816.addEventListener)) {
                  elem_16816.addEventListener(cljs.core.name.call(null, actual_type_16871), canonical_f_16873)
                }else {
                  elem_16816.attachEvent(cljs.core.name.call(null, actual_type_16871), canonical_f_16873)
                }
                var G__16874 = seq__16794_16866;
                var G__16875 = chunk__16796_16867;
                var G__16876 = count__16797_16868;
                var G__16877 = i__16798_16869 + 1;
                seq__16794_16866 = G__16874;
                chunk__16796_16867 = G__16875;
                count__16797_16868 = G__16876;
                i__16798_16869 = G__16877;
                continue
              }else {
                var temp__4092__auto___16878__$1 = cljs.core.seq.call(null, seq__16794_16866);
                if(temp__4092__auto___16878__$1) {
                  var seq__16794_16879__$1 = temp__4092__auto___16878__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__16794_16879__$1)) {
                    var c__3844__auto___16880 = cljs.core.chunk_first.call(null, seq__16794_16879__$1);
                    var G__16881 = cljs.core.chunk_rest.call(null, seq__16794_16879__$1);
                    var G__16882 = c__3844__auto___16880;
                    var G__16883 = cljs.core.count.call(null, c__3844__auto___16880);
                    var G__16884 = 0;
                    seq__16794_16866 = G__16881;
                    chunk__16796_16867 = G__16882;
                    count__16797_16868 = G__16883;
                    i__16798_16869 = G__16884;
                    continue
                  }else {
                    var vec__16814_16885 = cljs.core.first.call(null, seq__16794_16879__$1);
                    var actual_type_16886 = cljs.core.nth.call(null, vec__16814_16885, 0, null);
                    var factory_16887 = cljs.core.nth.call(null, vec__16814_16885, 1, null);
                    var canonical_f_16888 = (cljs.core.truth_(selector_16817) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16816, selector_16817) : cljs.core.identity).call(null, factory_16887.call(null, f_16865));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_16816, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16817, actual_type_16886, f_16865], true), canonical_f_16888);
                    if(cljs.core.truth_(elem_16816.addEventListener)) {
                      elem_16816.addEventListener(cljs.core.name.call(null, actual_type_16886), canonical_f_16888)
                    }else {
                      elem_16816.attachEvent(cljs.core.name.call(null, actual_type_16886), canonical_f_16888)
                    }
                    var G__16889 = cljs.core.next.call(null, seq__16794_16879__$1);
                    var G__16890 = null;
                    var G__16891 = 0;
                    var G__16892 = 0;
                    seq__16794_16866 = G__16889;
                    chunk__16796_16867 = G__16890;
                    count__16797_16868 = G__16891;
                    i__16798_16869 = G__16892;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__16893 = cljs.core.next.call(null, seq__16793_16857__$1);
            var G__16894 = null;
            var G__16895 = 0;
            var G__16896 = 0;
            seq__16793_16818 = G__16893;
            chunk__16800_16819 = G__16894;
            count__16801_16820 = G__16895;
            i__16802_16821 = G__16896;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__16897) {
    var elem_sel = cljs.core.first(arglist__16897);
    var type_fs = cljs.core.rest(arglist__16897);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__16921_16944 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_16945 = cljs.core.nth.call(null, vec__16921_16944, 0, null);
    var selector_16946 = cljs.core.nth.call(null, vec__16921_16944, 1, null);
    var seq__16922_16947 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__16929_16948 = null;
    var count__16930_16949 = 0;
    var i__16931_16950 = 0;
    while(true) {
      if(i__16931_16950 < count__16930_16949) {
        var vec__16938_16951 = cljs.core._nth.call(null, chunk__16929_16948, i__16931_16950);
        var orig_type_16952 = cljs.core.nth.call(null, vec__16938_16951, 0, null);
        var f_16953 = cljs.core.nth.call(null, vec__16938_16951, 1, null);
        var seq__16932_16954 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16952, cljs.core.PersistentArrayMap.fromArray([orig_type_16952, cljs.core.identity], true)));
        var chunk__16934_16955 = null;
        var count__16935_16956 = 0;
        var i__16936_16957 = 0;
        while(true) {
          if(i__16936_16957 < count__16935_16956) {
            var vec__16939_16958 = cljs.core._nth.call(null, chunk__16934_16955, i__16936_16957);
            var actual_type_16959 = cljs.core.nth.call(null, vec__16939_16958, 0, null);
            var __16960 = cljs.core.nth.call(null, vec__16939_16958, 1, null);
            var keys_16961 = cljs.core.PersistentVector.fromArray([selector_16946, actual_type_16959, f_16953], true);
            var canonical_f_16962 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_16945), keys_16961);
            dommy.core.update_event_listeners_BANG_.call(null, elem_16945, dommy.utils.dissoc_in, keys_16961);
            if(cljs.core.truth_(elem_16945.removeEventListener)) {
              elem_16945.removeEventListener(cljs.core.name.call(null, actual_type_16959), canonical_f_16962)
            }else {
              elem_16945.detachEvent(cljs.core.name.call(null, actual_type_16959), canonical_f_16962)
            }
            var G__16963 = seq__16932_16954;
            var G__16964 = chunk__16934_16955;
            var G__16965 = count__16935_16956;
            var G__16966 = i__16936_16957 + 1;
            seq__16932_16954 = G__16963;
            chunk__16934_16955 = G__16964;
            count__16935_16956 = G__16965;
            i__16936_16957 = G__16966;
            continue
          }else {
            var temp__4092__auto___16967 = cljs.core.seq.call(null, seq__16932_16954);
            if(temp__4092__auto___16967) {
              var seq__16932_16968__$1 = temp__4092__auto___16967;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__16932_16968__$1)) {
                var c__3844__auto___16969 = cljs.core.chunk_first.call(null, seq__16932_16968__$1);
                var G__16970 = cljs.core.chunk_rest.call(null, seq__16932_16968__$1);
                var G__16971 = c__3844__auto___16969;
                var G__16972 = cljs.core.count.call(null, c__3844__auto___16969);
                var G__16973 = 0;
                seq__16932_16954 = G__16970;
                chunk__16934_16955 = G__16971;
                count__16935_16956 = G__16972;
                i__16936_16957 = G__16973;
                continue
              }else {
                var vec__16940_16974 = cljs.core.first.call(null, seq__16932_16968__$1);
                var actual_type_16975 = cljs.core.nth.call(null, vec__16940_16974, 0, null);
                var __16976 = cljs.core.nth.call(null, vec__16940_16974, 1, null);
                var keys_16977 = cljs.core.PersistentVector.fromArray([selector_16946, actual_type_16975, f_16953], true);
                var canonical_f_16978 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_16945), keys_16977);
                dommy.core.update_event_listeners_BANG_.call(null, elem_16945, dommy.utils.dissoc_in, keys_16977);
                if(cljs.core.truth_(elem_16945.removeEventListener)) {
                  elem_16945.removeEventListener(cljs.core.name.call(null, actual_type_16975), canonical_f_16978)
                }else {
                  elem_16945.detachEvent(cljs.core.name.call(null, actual_type_16975), canonical_f_16978)
                }
                var G__16979 = cljs.core.next.call(null, seq__16932_16968__$1);
                var G__16980 = null;
                var G__16981 = 0;
                var G__16982 = 0;
                seq__16932_16954 = G__16979;
                chunk__16934_16955 = G__16980;
                count__16935_16956 = G__16981;
                i__16936_16957 = G__16982;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__16983 = seq__16922_16947;
        var G__16984 = chunk__16929_16948;
        var G__16985 = count__16930_16949;
        var G__16986 = i__16931_16950 + 1;
        seq__16922_16947 = G__16983;
        chunk__16929_16948 = G__16984;
        count__16930_16949 = G__16985;
        i__16931_16950 = G__16986;
        continue
      }else {
        var temp__4092__auto___16987 = cljs.core.seq.call(null, seq__16922_16947);
        if(temp__4092__auto___16987) {
          var seq__16922_16988__$1 = temp__4092__auto___16987;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__16922_16988__$1)) {
            var c__3844__auto___16989 = cljs.core.chunk_first.call(null, seq__16922_16988__$1);
            var G__16990 = cljs.core.chunk_rest.call(null, seq__16922_16988__$1);
            var G__16991 = c__3844__auto___16989;
            var G__16992 = cljs.core.count.call(null, c__3844__auto___16989);
            var G__16993 = 0;
            seq__16922_16947 = G__16990;
            chunk__16929_16948 = G__16991;
            count__16930_16949 = G__16992;
            i__16931_16950 = G__16993;
            continue
          }else {
            var vec__16941_16994 = cljs.core.first.call(null, seq__16922_16988__$1);
            var orig_type_16995 = cljs.core.nth.call(null, vec__16941_16994, 0, null);
            var f_16996 = cljs.core.nth.call(null, vec__16941_16994, 1, null);
            var seq__16923_16997 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16995, cljs.core.PersistentArrayMap.fromArray([orig_type_16995, cljs.core.identity], true)));
            var chunk__16925_16998 = null;
            var count__16926_16999 = 0;
            var i__16927_17000 = 0;
            while(true) {
              if(i__16927_17000 < count__16926_16999) {
                var vec__16942_17001 = cljs.core._nth.call(null, chunk__16925_16998, i__16927_17000);
                var actual_type_17002 = cljs.core.nth.call(null, vec__16942_17001, 0, null);
                var __17003 = cljs.core.nth.call(null, vec__16942_17001, 1, null);
                var keys_17004 = cljs.core.PersistentVector.fromArray([selector_16946, actual_type_17002, f_16996], true);
                var canonical_f_17005 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_16945), keys_17004);
                dommy.core.update_event_listeners_BANG_.call(null, elem_16945, dommy.utils.dissoc_in, keys_17004);
                if(cljs.core.truth_(elem_16945.removeEventListener)) {
                  elem_16945.removeEventListener(cljs.core.name.call(null, actual_type_17002), canonical_f_17005)
                }else {
                  elem_16945.detachEvent(cljs.core.name.call(null, actual_type_17002), canonical_f_17005)
                }
                var G__17006 = seq__16923_16997;
                var G__17007 = chunk__16925_16998;
                var G__17008 = count__16926_16999;
                var G__17009 = i__16927_17000 + 1;
                seq__16923_16997 = G__17006;
                chunk__16925_16998 = G__17007;
                count__16926_16999 = G__17008;
                i__16927_17000 = G__17009;
                continue
              }else {
                var temp__4092__auto___17010__$1 = cljs.core.seq.call(null, seq__16923_16997);
                if(temp__4092__auto___17010__$1) {
                  var seq__16923_17011__$1 = temp__4092__auto___17010__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__16923_17011__$1)) {
                    var c__3844__auto___17012 = cljs.core.chunk_first.call(null, seq__16923_17011__$1);
                    var G__17013 = cljs.core.chunk_rest.call(null, seq__16923_17011__$1);
                    var G__17014 = c__3844__auto___17012;
                    var G__17015 = cljs.core.count.call(null, c__3844__auto___17012);
                    var G__17016 = 0;
                    seq__16923_16997 = G__17013;
                    chunk__16925_16998 = G__17014;
                    count__16926_16999 = G__17015;
                    i__16927_17000 = G__17016;
                    continue
                  }else {
                    var vec__16943_17017 = cljs.core.first.call(null, seq__16923_17011__$1);
                    var actual_type_17018 = cljs.core.nth.call(null, vec__16943_17017, 0, null);
                    var __17019 = cljs.core.nth.call(null, vec__16943_17017, 1, null);
                    var keys_17020 = cljs.core.PersistentVector.fromArray([selector_16946, actual_type_17018, f_16996], true);
                    var canonical_f_17021 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_16945), keys_17020);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_16945, dommy.utils.dissoc_in, keys_17020);
                    if(cljs.core.truth_(elem_16945.removeEventListener)) {
                      elem_16945.removeEventListener(cljs.core.name.call(null, actual_type_17018), canonical_f_17021)
                    }else {
                      elem_16945.detachEvent(cljs.core.name.call(null, actual_type_17018), canonical_f_17021)
                    }
                    var G__17022 = cljs.core.next.call(null, seq__16923_17011__$1);
                    var G__17023 = null;
                    var G__17024 = 0;
                    var G__17025 = 0;
                    seq__16923_16997 = G__17022;
                    chunk__16925_16998 = G__17023;
                    count__16926_16999 = G__17024;
                    i__16927_17000 = G__17025;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__17026 = cljs.core.next.call(null, seq__16922_16988__$1);
            var G__17027 = null;
            var G__17028 = 0;
            var G__17029 = 0;
            seq__16922_16947 = G__17026;
            chunk__16929_16948 = G__17027;
            count__16930_16949 = G__17028;
            i__16931_16950 = G__17029;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__17030) {
    var elem_sel = cljs.core.first(arglist__17030);
    var type_fs = cljs.core.rest(arglist__17030);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__17038_17045 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_17046 = cljs.core.nth.call(null, vec__17038_17045, 0, null);
    var selector_17047 = cljs.core.nth.call(null, vec__17038_17045, 1, null);
    var seq__17039_17048 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__17040_17049 = null;
    var count__17041_17050 = 0;
    var i__17042_17051 = 0;
    while(true) {
      if(i__17042_17051 < count__17041_17050) {
        var vec__17043_17052 = cljs.core._nth.call(null, chunk__17040_17049, i__17042_17051);
        var type_17053 = cljs.core.nth.call(null, vec__17043_17052, 0, null);
        var f_17054 = cljs.core.nth.call(null, vec__17043_17052, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_17053, function(seq__17039_17048, chunk__17040_17049, count__17041_17050, i__17042_17051, vec__17043_17052, type_17053, f_17054) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_17053, this_fn);
            return f_17054.call(null, e)
          }
        }(seq__17039_17048, chunk__17040_17049, count__17041_17050, i__17042_17051, vec__17043_17052, type_17053, f_17054));
        var G__17055 = seq__17039_17048;
        var G__17056 = chunk__17040_17049;
        var G__17057 = count__17041_17050;
        var G__17058 = i__17042_17051 + 1;
        seq__17039_17048 = G__17055;
        chunk__17040_17049 = G__17056;
        count__17041_17050 = G__17057;
        i__17042_17051 = G__17058;
        continue
      }else {
        var temp__4092__auto___17059 = cljs.core.seq.call(null, seq__17039_17048);
        if(temp__4092__auto___17059) {
          var seq__17039_17060__$1 = temp__4092__auto___17059;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17039_17060__$1)) {
            var c__3844__auto___17061 = cljs.core.chunk_first.call(null, seq__17039_17060__$1);
            var G__17062 = cljs.core.chunk_rest.call(null, seq__17039_17060__$1);
            var G__17063 = c__3844__auto___17061;
            var G__17064 = cljs.core.count.call(null, c__3844__auto___17061);
            var G__17065 = 0;
            seq__17039_17048 = G__17062;
            chunk__17040_17049 = G__17063;
            count__17041_17050 = G__17064;
            i__17042_17051 = G__17065;
            continue
          }else {
            var vec__17044_17066 = cljs.core.first.call(null, seq__17039_17060__$1);
            var type_17067 = cljs.core.nth.call(null, vec__17044_17066, 0, null);
            var f_17068 = cljs.core.nth.call(null, vec__17044_17066, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_17067, function(seq__17039_17048, chunk__17040_17049, count__17041_17050, i__17042_17051, vec__17044_17066, type_17067, f_17068, seq__17039_17060__$1, temp__4092__auto___17059) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_17067, this_fn);
                return f_17068.call(null, e)
              }
            }(seq__17039_17048, chunk__17040_17049, count__17041_17050, i__17042_17051, vec__17044_17066, type_17067, f_17068, seq__17039_17060__$1, temp__4092__auto___17059));
            var G__17069 = cljs.core.next.call(null, seq__17039_17060__$1);
            var G__17070 = null;
            var G__17071 = 0;
            var G__17072 = 0;
            seq__17039_17048 = G__17069;
            chunk__17040_17049 = G__17070;
            count__17041_17050 = G__17071;
            i__17042_17051 = G__17072;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__17073) {
    var elem_sel = cljs.core.first(arglist__17073);
    var type_fs = cljs.core.rest(arglist__17073);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__17074) {
    var vec__17076 = p__17074;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__17076, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3128__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__17074 = null;
    if(arguments.length > 2) {
      p__17074 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__17074)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__17077) {
    var node = cljs.core.first(arglist__17077);
    arglist__17077 = cljs.core.next(arglist__17077);
    var event_type = cljs.core.first(arglist__17077);
    var p__17074 = cljs.core.rest(arglist__17077);
    return fire_BANG___delegate(node, event_type, p__17074)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("koans.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("koans.repl");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("koans.meditations");
goog.require("koans.meditations");
goog.require("koans.repl");
goog.require("dommy.core");
koans.core.current_koan_index = cljs.core.atom.call(null, 0);
koans.core.fadeout_time = 600;
koans.core.char_width = 14;
koans.core.enter_key = 13;
koans.core.fade_in_BANG_ = function fade_in_BANG_(elem) {
  return setTimeout(function() {
    return dommy.core.add_class_BANG_.call(null, elem, "unfaded")
  }, 0)
};
koans.core.input_with_code = function input_with_code(koan) {
  var dom22693 = document.createElement("div");
  if(cljs.core.truth_([cljs.core.str("koan koan-"), cljs.core.str(cljs.core.deref.call(null, koans.core.current_koan_index))].join(""))) {
    dom22693.className = [cljs.core.str(dom22693.className), cljs.core.str(" "), cljs.core.str([cljs.core.str("koan koan-"), cljs.core.str(cljs.core.deref.call(null, koans.core.current_koan_index))].join(""))].join("").trim()
  }else {
  }
  dom22693.appendChild(function() {
    var dom22694 = document.createElement("div");
    if("description") {
      dom22694.className = [cljs.core.str(dom22694.className), cljs.core.str(" "), cljs.core.str("description")].join("").trim()
    }else {
    }
    dom22694.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "description", "description", 3584325486)).cljs$core$IFn$_invoke$arity$1(koan)));
    return dom22694
  }());
  dom22693.appendChild(function() {
    var dom22695 = document.createElement("div");
    if("code") {
      dom22695.className = [cljs.core.str(dom22695.className), cljs.core.str(" "), cljs.core.str("code")].join("").trim()
    }else {
    }
    dom22695.appendChild(function() {
      var dom22696 = document.createElement("span");
      if("shadow") {
        dom22696.className = [cljs.core.str(dom22696.className), cljs.core.str(" "), cljs.core.str("shadow")].join("").trim()
      }else {
      }
      return dom22696
    }());
    dom22695.appendChild(function() {
      var dom22697 = document.createElement("span");
      if("before") {
        dom22697.className = [cljs.core.str(dom22697.className), cljs.core.str(" "), cljs.core.str("before")].join("").trim()
      }else {
      }
      dom22697.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "before", "before", 3915985649)).cljs$core$IFn$_invoke$arity$1(koan)));
      return dom22697
    }());
    dom22695.appendChild(function() {
      var dom22698 = document.createElement("input");
      if("user-input") {
        dom22698.className = [cljs.core.str(dom22698.className), cljs.core.str(" "), cljs.core.str("user-input")].join("").trim()
      }else {
      }
      if("code") {
        dom22698.setAttribute("name", "code")
      }else {
      }
      return dom22698
    }());
    dom22695.appendChild(function() {
      var dom22699 = document.createElement("span");
      if("after") {
        dom22699.className = [cljs.core.str(dom22699.className), cljs.core.str(" "), cljs.core.str("after")].join("").trim()
      }else {
      }
      dom22699.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "after", "after", 1106639182)).cljs$core$IFn$_invoke$arity$1(koan)));
      return dom22699
    }());
    return dom22695
  }());
  return dom22693
};
koans.core.error_message = function error_message() {
  var dom22701 = document.createElement("div");
  if("error") {
    dom22701.className = [cljs.core.str(dom22701.className), cljs.core.str(" "), cljs.core.str("error")].join("").trim()
  }else {
  }
  dom22701.appendChild(document.createTextNode("You have not yet attained enlightenment."));
  return dom22701
};
koans.core.input_string = function input_string() {
  return clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray([dommy.core.text.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("before"))[0]), dommy.core.value.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByTagName("input"))[0]), dommy.core.text.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("after"))[0])], true))
};
koans.core.evaluate_koan = function evaluate_koan() {
  return koans.repl.eval.call(null, koans.core.input_string.call(null))
};
koans.core.resize_chan = cljs.core.async.chan.call(null);
koans.core.render_koan = function render_koan(koan) {
  var elem = koans.core.input_with_code.call(null, koan);
  return setTimeout(function() {
    return dommy.core.append_BANG_.call(null, document.body, elem).call(null, koans.core.fade_in_BANG_.call(null, elem), function() {
      var input = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("user-input"))[0];
      input.focus();
      dommy.core.listen_BANG_.call(null, input, new cljs.core.Keyword(null, "keypress", "keypress", 1530666166), function(e) {
        if(cljs.core._EQ_.call(null, e.charCode, koans.core.enter_key)) {
          return koans.core.evaluate_koan.call(null)
        }else {
          return null
        }
      });
      return dommy.core.listen_BANG_.call(null, input, new cljs.core.Keyword(null, "input", "input", 1114262332), function(e) {
        var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function() {
          var f__5381__auto__ = function() {
            var switch__5330__auto__ = function(state_22713) {
              var state_val_22714 = state_22713[1];
              if(state_val_22714 === 2) {
                var inst_22711 = state_22713[2];
                var state_22713__$1 = state_22713;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22713__$1, inst_22711)
              }else {
                if(state_val_22714 === 1) {
                  var state_22713__$1 = state_22713;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_22713__$1, 2, koans.core.resize_chan, e)
                }else {
                  return null
                }
              }
            };
            return function(switch__5330__auto__) {
              return function() {
                var state_machine__5331__auto__ = null;
                var state_machine__5331__auto____0 = function() {
                  var statearr_22716 = new Array(5);
                  statearr_22716[0] = state_machine__5331__auto__;
                  statearr_22716[1] = 1;
                  return statearr_22716
                };
                var state_machine__5331__auto____1 = function(state_22713) {
                  while(true) {
                    var result__5332__auto__ = switch__5330__auto__.call(null, state_22713);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__5332__auto__
                    }
                    break
                  }
                };
                state_machine__5331__auto__ = function(state_22713) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5331__auto____0.call(this);
                    case 1:
                      return state_machine__5331__auto____1.call(this, state_22713)
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
                state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
                return state_machine__5331__auto__
              }()
            }(switch__5330__auto__)
          }();
          var state__5382__auto__ = function() {
            var statearr_22717 = f__5381__auto__.call(null);
            statearr_22717[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
            return statearr_22717
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
        });
        return c__5380__auto__
      })
    }())
  }, koans.core.fadeout_time)
};
koans.core.resize_input = function resize_input() {
  koans.core.remove_spaces = function remove_spaces(text) {
    return clojure.string.replace.call(null, text, " ", "_")
  };
  var input = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("user-input"))[0];
  var shadow = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("shadow"))[0];
  dommy.core.set_text_BANG_.call(null, shadow, koans.core.remove_spaces.call(null, dommy.core.value.call(null, input)));
  var shadow_width = shadow.getBoundingClientRect().width;
  var input_width = input.getBoundingClientRect().width;
  if(shadow_width >= input_width) {
    return dommy.core.set_px_BANG_.call(null, input, new cljs.core.Keyword(null, "width", "width", 1127031096), shadow_width + 4 * koans.core.char_width)
  }else {
    if(input_width - 4 * koans.core.char_width >= shadow_width) {
      return dommy.core.set_px_BANG_.call(null, input, new cljs.core.Keyword(null, "width", "width", 1127031096), shadow_width + 4 * koans.core.char_width)
    }else {
      return null
    }
  }
};
var c__5380__auto___22742 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function() {
  var f__5381__auto__ = function() {
    var switch__5330__auto__ = function(state_22730) {
      var state_val_22731 = state_22730[1];
      if(state_val_22731 === 7) {
        var inst_22721 = state_22730[2];
        var inst_22722 = koans.core.resize_input.call(null);
        var state_22730__$1 = function() {
          var statearr_22732 = state_22730;
          statearr_22732[5] = inst_22721;
          statearr_22732[6] = inst_22722;
          return statearr_22732
        }();
        var statearr_22733_22743 = state_22730__$1;
        statearr_22733_22743[2] = null;
        statearr_22733_22743[1] = 2;
        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
      }else {
        if(state_val_22731 === 6) {
          var inst_22726 = state_22730[2];
          var state_22730__$1 = state_22730;
          var statearr_22734_22744 = state_22730__$1;
          statearr_22734_22744[2] = inst_22726;
          statearr_22734_22744[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_22731 === 5) {
            var state_22730__$1 = state_22730;
            var statearr_22735_22745 = state_22730__$1;
            statearr_22735_22745[2] = null;
            statearr_22735_22745[1] = 6;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_22731 === 4) {
              var state_22730__$1 = state_22730;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_22730__$1, 7, koans.core.resize_chan)
            }else {
              if(state_val_22731 === 3) {
                var inst_22728 = state_22730[2];
                var state_22730__$1 = state_22730;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_22730__$1, inst_22728)
              }else {
                if(state_val_22731 === 2) {
                  var state_22730__$1 = state_22730;
                  if(true) {
                    var statearr_22736_22746 = state_22730__$1;
                    statearr_22736_22746[1] = 4
                  }else {
                    var statearr_22737_22747 = state_22730__$1;
                    statearr_22737_22747[1] = 5
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_22731 === 1) {
                    var state_22730__$1 = state_22730;
                    var statearr_22738_22748 = state_22730__$1;
                    statearr_22738_22748[2] = null;
                    statearr_22738_22748[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    return null
                  }
                }
              }
            }
          }
        }
      }
    };
    return function(switch__5330__auto__) {
      return function() {
        var state_machine__5331__auto__ = null;
        var state_machine__5331__auto____0 = function() {
          var statearr_22740 = new Array(7);
          statearr_22740[0] = state_machine__5331__auto__;
          statearr_22740[1] = 1;
          return statearr_22740
        };
        var state_machine__5331__auto____1 = function(state_22730) {
          while(true) {
            var result__5332__auto__ = switch__5330__auto__.call(null, state_22730);
            if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
              continue
            }else {
              return result__5332__auto__
            }
            break
          }
        };
        state_machine__5331__auto__ = function(state_22730) {
          switch(arguments.length) {
            case 0:
              return state_machine__5331__auto____0.call(this);
            case 1:
              return state_machine__5331__auto____1.call(this, state_22730)
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
        state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
        return state_machine__5331__auto__
      }()
    }(switch__5330__auto__)
  }();
  var state__5382__auto__ = function() {
    var statearr_22741 = f__5381__auto__.call(null);
    statearr_22741[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___22742;
    return statearr_22741
  }();
  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
});
koans.core.remove_active_koan = function remove_active_koan() {
  var koan = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("koan"))[0];
  dommy.core.remove_class_BANG_.call(null, koan, "unfaded");
  return setTimeout(function() {
    return dommy.core.remove_BANG_.call(null, koan)
  }, koans.core.fadeout_time)
};
koans.core.load_koan = function load_koan(n) {
  var koan = koans.meditations.nth_koan.call(null, n);
  return koans.core.render_koan.call(null, koan)
};
koans.core.load_next_koan = function load_next_koan() {
  koans.core.remove_active_koan.call(null);
  cljs.core.reset_BANG_.call(null, koans.core.current_koan_index, cljs.core.deref.call(null, koans.core.current_koan_index) + 1);
  return koans.core.load_koan.call(null, cljs.core.deref.call(null, koans.core.current_koan_index))
};
document.onready = function() {
  return koans.core.load_koan.call(null, cljs.core.deref.call(null, koans.core.current_koan_index))
};
koans.core.show_error_message = function show_error_message() {
  if(cljs.core.truth_(dommy.core.has_class_QMARK_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0], "incorrect"))) {
    var code_box = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0];
    var error = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("error"))[0];
    dommy.core.remove_class_BANG_.call(null, code_box, "incorrect");
    dommy.core.remove_class_BANG_.call(null, error, "unfaded");
    return setTimeout(function() {
      return dommy.core.add_class_BANG_.call(null, code_box, "incorrect").call(null, dommy.core.add_class_BANG_.call(null, error, "unfaded"))
    }, 300)
  }else {
    var error = koans.core.error_message.call(null);
    dommy.core.append_BANG_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("koan"))[0], error);
    koans.core.fade_in_BANG_.call(null, error);
    return dommy.core.add_class_BANG_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0], "incorrect")
  }
};
koans.core.evaluate_response = function evaluate_response(text) {
  if(cljs.core._EQ_.call(null, text, "true")) {
    return koans.core.load_next_koan.call(null)
  }else {
    return koans.core.show_error_message.call(null)
  }
};
koans.repl.listen_for_output.call(null, koans.core.evaluate_response);
goog.provide("koans.core_spec");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("dommy.core");
goog.require("dommy.core");
goog.require("koans.core");
goog.require("koans.core");
goog.require("specljs.core");
