// Compiled by ClojureScript 1.7.228 {}
goog.provide('koans.meditations.lazy_sequences');
goog.require('cljs.core');
koans.meditations.lazy_sequences.koans = cljs.core.list("There are many ways to generate a sequence",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"range","range",-1014743483,null),(1),(5))),"The range starts at the beginning by default",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"range","range",-1014743483,null),(5))),"Only take what you need when the sequence is large",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)], null),cljs.core.list(new cljs.core.Symbol(null,"take","take",871646627,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"range","range",-1014743483,null),(100)))),"Or limit results by dropping what you don't need",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(95),(96),(97),(98),(99)], null),cljs.core.list(new cljs.core.Symbol(null,"drop","drop",2005013138,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"range","range",-1014743483,null),(100)))),"Iteration provides an infinite lazy sequence",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"take","take",871646627,null),(20),cljs.core.list(new cljs.core.Symbol(null,"iterate","iterate",694501410,null),new cljs.core.Symbol(null,"inc","inc",324505433,null),(0)))),"Repetition is key",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586),new cljs.core.Keyword(null,"a","a",-2123407586)], null),cljs.core.list(new cljs.core.Symbol(null,"repeat","repeat",-1821743682,null),(10),new cljs.core.Keyword(null,"__","__",-223697812))),"Iteration can be used for repetition",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),cljs.core.list(new cljs.core.Symbol(null,"repeat","repeat",-1821743682,null),(100),new cljs.core.Keyword(null,"foo","foo",1268894036)),cljs.core.list(new cljs.core.Symbol(null,"take","take",871646627,null),(100),cljs.core.list(new cljs.core.Symbol(null,"iterate","iterate",694501410,null),new cljs.core.Keyword(null,"__","__",-223697812),new cljs.core.Keyword(null,"foo","foo",1268894036)))));

//# sourceMappingURL=lazy_sequences.js.map