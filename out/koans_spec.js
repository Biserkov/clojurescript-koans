var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.TRUSTED_SITE = true;
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if(ctor.instance_) {
      return ctor.instance_
    }
    if(goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor
    }
    return ctor.instance_ = new ctor
  }
};
goog.instantiatedSingletons_ = [];
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if(doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if(isDeps) {
          return false
        }else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call((value));
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments))
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.getMsgWithFallback = function(a, b) {
  return a
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str))
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "\x26amp;").replace(goog.string.ltRe_, "\x26lt;").replace(goog.string.gtRe_, "\x26gt;").replace(goog.string.quotRe_, "\x26quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.amperRe_, "\x26amp;")
    }
    if(str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.ltRe_, "\x26lt;")
    }
    if(str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.gtRe_, "\x26gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "\x26quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "\x26")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"\x26";
      case "lt":
        return"\x3c";
      case "gt":
        return"\x3e";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  })
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase()
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase()
  })
};
goog.string.parseInt = function(value) {
  if(isFinite(value)) {
    value = String(value)
  }
  if(goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10)
  }
  return NaN
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if(Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error)
  }else {
    this.stack = (new Error).stack || ""
  }
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return(value)
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
  return(value)
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if(f.call(opt_obj, element, index, arr)) {
      ++count
    }
  }, opt_obj);
  return count
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.toArray = function(object) {
  var length = object.length;
  if(length > 0) {
    var rv = new Array(length);
    for(var i = 0;i < length;i++) {
      rv[i] = object[i]
    }
    return rv
  }
  return[]
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element
  });
  return ret
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if(opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end
  }
  if(step * (end - start) < 0) {
    return[]
  }
  if(step > 0) {
    for(var i = start;i < end;i += step) {
      array.push(i)
    }
  }else {
    for(var i = start;i > end;i += step) {
      array.push(i)
    }
  }
  return array
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if(Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result)
  }
  return result
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj)
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if(opt_a2 != null) {
    for(var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i]
    }
  }
  return this
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = ""
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.object");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2014";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 4441712502), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1017252215), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 1014004081), cljs.core._STAR_print_dup_STAR_], true)
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number"
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  return goog.isString(x)
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if(p[goog.typeOf(x__$1)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type.call(null, obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3119__auto__ = ty;
    if(cljs.core.truth_(and__3119__auto__)) {
      return ty.cljs$lang$type
    }else {
      return and__3119__auto__
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""))
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4090__auto__ = ty.cljs$lang$ctorStr;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var s = temp__4090__auto__;
    return s
  }else {
    return[cljs.core.str(ty)].join("")
  }
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__13970__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__13970 = function(array, i, var_args) {
      var idxs = null;
      if(arguments.length > 2) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13970__delegate.call(this, array, i, idxs)
    };
    G__13970.cljs$lang$maxFixedArity = 2;
    G__13970.cljs$lang$applyTo = function(arglist__13971) {
      var array = cljs.core.first(arglist__13971);
      arglist__13971 = cljs.core.next(arglist__13971);
      var i = cljs.core.first(arglist__13971);
      var idxs = cljs.core.rest(arglist__13971);
      return G__13970__delegate(array, i, idxs)
    };
    G__13970.cljs$core$IFn$_invoke$arity$variadic = G__13970__delegate;
    return G__13970
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val
  };
  var aset__4 = function() {
    var G__13972__delegate = function(array, idx, idx2, idxv) {
      return cljs.core.apply.call(null, aset, array[idx], idx2, idxv)
    };
    var G__13972 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if(arguments.length > 3) {
        idxv = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__13972__delegate.call(this, array, idx, idx2, idxv)
    };
    G__13972.cljs$lang$maxFixedArity = 3;
    G__13972.cljs$lang$applyTo = function(arglist__13973) {
      var array = cljs.core.first(arglist__13973);
      arglist__13973 = cljs.core.next(arglist__13973);
      var idx = cljs.core.first(arglist__13973);
      arglist__13973 = cljs.core.next(arglist__13973);
      var idx2 = cljs.core.first(arglist__13973);
      var idxv = cljs.core.rest(arglist__13973);
      return G__13972__delegate(array, idx, idx2, idxv)
    };
    G__13972.cljs$core$IFn$_invoke$arity$variadic = G__13972__delegate;
    return G__13972
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset
}();
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array
}();
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3119__auto__ = this$;
      if(and__3119__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3119__auto__
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__3723__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3128__auto__ = cljs.core._invoke[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._invoke["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._count[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._count["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._empty[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._empty["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._conj[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._conj["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._nth[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._nth["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._nth[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._nth["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._rest[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._rest["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._next[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._next["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3119__auto__ = o;
      if(and__3119__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__3723__auto__ = o == null ? null : o;
      return function() {
        var or__3128__auto__ = cljs.core._lookup[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._lookup["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3119__auto__ = o;
      if(and__3119__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__3723__auto__ = o == null ? null : o;
      return function() {
        var or__3128__auto__ = cljs.core._lookup[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._lookup["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._dissoc[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dissoc["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._key[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._key["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._val[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._val["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._disjoin[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._disjoin["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._peek[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._peek["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._pop[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pop["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_n[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_n["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._deref[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._deref["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._deref_with_timeout["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._meta[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._meta["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._with_meta[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._with_meta["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._reduce[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._reduce["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3119__auto__ = coll;
      if(and__3119__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3119__auto__
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__3723__auto__ = coll == null ? null : coll;
      return function() {
        var or__3128__auto__ = cljs.core._reduce[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core._reduce["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._kv_reduce[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._kv_reduce["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._equiv[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._equiv["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._hash[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._hash["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._seq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._seq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._rseq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._rseq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._sorted_seq[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._sorted_seq["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._sorted_seq_from["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._entry_key[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._entry_key["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._comparator[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._comparator["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IWriter = {};
cljs.core._write = function _write(writer, s) {
  if(function() {
    var and__3119__auto__ = writer;
    if(and__3119__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s)
  }else {
    var x__3723__auto__ = writer == null ? null : writer;
    return function() {
      var or__3128__auto__ = cljs.core._write[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._write["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-write", writer);
        }
      }
    }().call(null, writer, s)
  }
};
cljs.core._flush = function _flush(writer) {
  if(function() {
    var and__3119__auto__ = writer;
    if(and__3119__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer)
  }else {
    var x__3723__auto__ = writer == null ? null : writer;
    return function() {
      var or__3128__auto__ = cljs.core._flush[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._flush["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWriter.-flush", writer);
        }
      }
    }().call(null, writer)
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if(function() {
    var and__3119__auto__ = o;
    if(and__3119__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts)
  }else {
    var x__3723__auto__ = o == null ? null : o;
    return function() {
      var or__3128__auto__ = cljs.core._pr_writer[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pr_writer["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3119__auto__ = d;
    if(and__3119__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__3723__auto__ = d == null ? null : d;
    return function() {
      var or__3128__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._realized_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._notify_watches[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._notify_watches["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._add_watch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._add_watch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = cljs.core._remove_watch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._remove_watch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._as_transient[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._as_transient["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._conj_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._persistent_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._pop_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3119__auto__ = tcoll;
    if(and__3119__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__3723__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3128__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._compare[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._compare["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._drop_first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._drop_first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_first[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_first["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_rest[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_rest["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3119__auto__ = coll;
    if(and__3119__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__3723__auto__ = coll == null ? null : coll;
    return function() {
      var or__3128__auto__ = cljs.core._chunked_next[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._chunked_next["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INamed = {};
cljs.core._name = function _name(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$INamed$_name$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._name[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._name["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-name", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._namespace = function _namespace(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._namespace[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._namespace["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "INamed.-namespace", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/StringBufferWriter")
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s)
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb)
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core._pr_writer.call(null, obj, writer, cljs.core.pr_opts.call(null));
  cljs.core._flush.call(null, writer);
  return[cljs.core.str(sb)].join("")
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine.call(null, cljs.core.hash.call(null, sym.ns), cljs.core.hash.call(null, sym.name))
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Symbol")
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, self__.str)
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__3532__auto__ = self__._hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_symbol.call(null, sym__$1);
    self__._hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta)
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta
};
cljs.core.Symbol.prototype.call = function() {
  var G__13975 = null;
  var G__13975__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, null)
  };
  var G__13975__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.call(null, coll, sym, not_found)
  };
  G__13975 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13975__2.call(this, self__, coll);
      case 3:
        return G__13975__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__13975
}();
cljs.core.Symbol.prototype.apply = function(self__, args13974) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args13974.slice()))
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, null)
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.call(null, coll, sym, not_found)
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Symbol) {
    return self__.str === other.str
  }else {
    return false
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta)
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(name instanceof cljs.core.Symbol) {
      return name
    }else {
      return symbol.call(null, null, name)
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null)
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol
}();
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13977 = coll;
      if(G__13977) {
        var bit__3739__auto__ = G__13977.cljs$lang$protocol_mask$partition0$ & 8388608;
        if(bit__3739__auto__ || G__13977.cljs$core$ISeqable$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._seq.call(null, coll)
    }else {
      if(coll instanceof Array) {
        if(coll.length === 0) {
          return null
        }else {
          return new cljs.core.IndexedSeq(coll, 0)
        }
      }else {
        if(typeof coll === "string") {
          if(coll.length === 0) {
            return null
          }else {
            return new cljs.core.IndexedSeq(coll, 0)
          }
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, coll)) {
            return cljs.core._seq.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str(coll), cljs.core.str("is not ISeqable")].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13979 = coll;
      if(G__13979) {
        var bit__3739__auto__ = G__13979.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__13979.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s == null) {
        return null
      }else {
        return cljs.core._first.call(null, s)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__13981 = coll;
      if(G__13981) {
        var bit__3739__auto__ = G__13981.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__13981.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s = cljs.core.seq.call(null, coll);
      if(s) {
        return cljs.core._rest.call(null, s)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__13983 = coll;
      if(G__13983) {
        var bit__3739__auto__ = G__13983.cljs$lang$protocol_mask$partition0$ & 128;
        if(bit__3739__auto__ || G__13983.cljs$core$INext$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    return x === y || cljs.core._equiv.call(null, x, y)
  };
  var _EQ___3 = function() {
    var G__13984__delegate = function(x, y, more) {
      while(true) {
        if(_EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__13985 = y;
            var G__13986 = cljs.core.first.call(null, more);
            var G__13987 = cljs.core.next.call(null, more);
            x = G__13985;
            y = G__13986;
            more = G__13987;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__13984 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__13984__delegate.call(this, x, y, more)
    };
    G__13984.cljs$lang$maxFixedArity = 2;
    G__13984.cljs$lang$applyTo = function(arglist__13988) {
      var x = cljs.core.first(arglist__13988);
      arglist__13988 = cljs.core.next(arglist__13988);
      var y = cljs.core.first(arglist__13988);
      var more = cljs.core.rest(arglist__13988);
      return G__13984__delegate(x, y, more)
    };
    G__13984.cljs$core$IFn$_invoke$arity$variadic = G__13984__delegate;
    return G__13984
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_
}();
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.IKVReduce["null"] = true;
cljs.core._kv_reduce["null"] = function(_, f, init) {
  return init
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString()
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count.call(null, cicoll);
    if(cnt === 0) {
      return f.call(null)
    }else {
      var val = cljs.core._nth.call(null, cicoll, 0);
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, cljs.core._nth.call(null, cicoll, n));
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__13989 = nval;
            var G__13990 = n + 1;
            val = G__13989;
            n = G__13990;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13991 = nval;
          var G__13992 = n + 1;
          val__$1 = G__13991;
          n = G__13992;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count.call(null, cicoll);
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, cljs.core._nth.call(null, cicoll, n));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13993 = nval;
          var G__13994 = n + 1;
          val__$1 = G__13993;
          n = G__13994;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val = arr[0];
      var n = 1;
      while(true) {
        if(n < cnt) {
          var nval = f.call(null, val, arr[n]);
          if(cljs.core.reduced_QMARK_.call(null, nval)) {
            return cljs.core.deref.call(null, nval)
          }else {
            var G__13995 = nval;
            var G__13996 = n + 1;
            val = G__13995;
            n = G__13996;
            continue
          }
        }else {
          return val
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13997 = nval;
          var G__13998 = n + 1;
          val__$1 = G__13997;
          n = G__13998;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while(true) {
      if(n < cnt) {
        var nval = f.call(null, val__$1, arr[n]);
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__13999 = nval;
          var G__14000 = n + 1;
          val__$1 = G__13999;
          n = G__14000;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__14002 = x;
  if(G__14002) {
    var bit__3746__auto__ = G__14002.cljs$lang$protocol_mask$partition0$ & 2;
    if(bit__3746__auto__ || G__14002.cljs$core$ICounted$) {
      return true
    }else {
      if(!G__14002.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14002)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, G__14002)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__14004 = x;
  if(G__14004) {
    var bit__3746__auto__ = G__14004.cljs$lang$protocol_mask$partition0$ & 16;
    if(bit__3746__auto__ || G__14004.cljs$core$IIndexed$) {
      return true
    }else {
      if(!G__14004.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14004)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, G__14004)
  }
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199550
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count.call(null, coll__$1);
  if(c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.i], self__.i + 1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.i)
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if(i__$1 < self__.arr.length) {
    return self__.arr[i__$1]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i)
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i)
    }else {
      return null
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, col__$1)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.ci, self__.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null)
  }else {
    return null
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta)
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn = cljs.core.next.call(null, s);
    if(!(sn == null)) {
      var G__14005 = sn;
      s = G__14005;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    if(!(coll == null)) {
      return cljs.core._conj.call(null, coll, x)
    }else {
      return cljs.core.list.call(null, x)
    }
  };
  var conj__3 = function() {
    var G__14006__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__14007 = conj.call(null, coll, x);
          var G__14008 = cljs.core.first.call(null, xs);
          var G__14009 = cljs.core.next.call(null, xs);
          coll = G__14007;
          x = G__14008;
          xs = G__14009;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__14006 = function(coll, x, var_args) {
      var xs = null;
      if(arguments.length > 2) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14006__delegate.call(this, coll, x, xs)
    };
    G__14006.cljs$lang$maxFixedArity = 2;
    G__14006.cljs$lang$applyTo = function(arglist__14010) {
      var coll = cljs.core.first(arglist__14010);
      arglist__14010 = cljs.core.next(arglist__14010);
      var x = cljs.core.first(arglist__14010);
      var xs = cljs.core.rest(arglist__14010);
      return G__14006__delegate(coll, x, xs)
    };
    G__14006.cljs$core$IFn$_invoke$arity$variadic = G__14006__delegate;
    return G__14006
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq.call(null, coll);
  var acc = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s)) {
      return acc + cljs.core._count.call(null, s)
    }else {
      var G__14011 = cljs.core.next.call(null, s);
      var G__14012 = acc + 1;
      s = G__14011;
      acc = G__14012;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__14014 = coll;
      if(G__14014) {
        var bit__3739__auto__ = G__14014.cljs$lang$protocol_mask$partition0$ & 2;
        if(bit__3739__auto__ || G__14014.cljs$core$ICounted$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._count.call(null, coll)
    }else {
      if(coll instanceof Array) {
        return coll.length
      }else {
        if(typeof coll === "string") {
          return coll.length
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICounted, coll)) {
            return cljs.core._count.call(null, coll)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.accumulating_seq_count.call(null, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  }else {
    return 0
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while(true) {
      if(coll == null) {
        throw new Error("Index out of bounds");
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            throw new Error("Index out of bounds");
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__14015 = cljs.core.next.call(null, coll);
              var G__14016 = n - 1;
              coll = G__14015;
              n = G__14016;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw new Error("Index out of bounds");
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while(true) {
      if(coll == null) {
        return not_found
      }else {
        if(n === 0) {
          if(cljs.core.seq.call(null, coll)) {
            return cljs.core.first.call(null, coll)
          }else {
            return not_found
          }
        }else {
          if(cljs.core.indexed_QMARK_.call(null, coll)) {
            return cljs.core._nth.call(null, coll, n, not_found)
          }else {
            if(cljs.core.seq.call(null, coll)) {
              var G__14017 = cljs.core.next.call(null, coll);
              var G__14018 = n - 1;
              var G__14019 = not_found;
              coll = G__14017;
              n = G__14018;
              not_found = G__14019;
              continue
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
      break
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__14024 = coll;
        if(G__14024) {
          var bit__3739__auto__ = G__14024.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3739__auto__ || G__14024.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return null
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__14025 = coll;
                  if(G__14025) {
                    var bit__3746__auto__ = G__14025.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3746__auto__ || G__14025.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__14025.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14025)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14025)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__14026 = coll;
        if(G__14026) {
          var bit__3739__auto__ = G__14026.cljs$lang$protocol_mask$partition0$ & 16;
          if(bit__3739__auto__ || G__14026.cljs$core$IIndexed$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._nth.call(null, coll, n, not_found)
      }else {
        if(coll instanceof Array) {
          if(n < coll.length) {
            return coll[n]
          }else {
            return not_found
          }
        }else {
          if(typeof coll === "string") {
            if(n < coll.length) {
              return coll[n]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IIndexed, coll)) {
              return cljs.core._nth.call(null, coll, n)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                if(function() {
                  var G__14027 = coll;
                  if(G__14027) {
                    var bit__3746__auto__ = G__14027.cljs$lang$protocol_mask$partition0$ & 64;
                    if(bit__3746__auto__ || G__14027.cljs$core$ISeq$) {
                      return true
                    }else {
                      if(!G__14027.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14027)
                      }else {
                        return false
                      }
                    }
                  }else {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14027)
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.call(null, coll, n, not_found)
                }else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str.call(null, cljs.core.type.call(null, coll)))].join(""));
                }
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if(o == null) {
      return null
    }else {
      if(function() {
        var G__14030 = o;
        if(G__14030) {
          var bit__3739__auto__ = G__14030.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3739__auto__ || G__14030.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return null
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return null
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return null
              }else {
                return null
              }
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if(!(o == null)) {
      if(function() {
        var G__14031 = o;
        if(G__14031) {
          var bit__3739__auto__ = G__14031.cljs$lang$protocol_mask$partition0$ & 256;
          if(bit__3739__auto__ || G__14031.cljs$core$ILookup$) {
            return true
          }else {
            return false
          }
        }else {
          return false
        }
      }()) {
        return cljs.core._lookup.call(null, o, k, not_found)
      }else {
        if(o instanceof Array) {
          if(k < o.length) {
            return o[k]
          }else {
            return not_found
          }
        }else {
          if(typeof o === "string") {
            if(k < o.length) {
              return o[k]
            }else {
              return not_found
            }
          }else {
            if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, o)) {
              return cljs.core._lookup.call(null, o, k, not_found)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return not_found
              }else {
                return null
              }
            }
          }
        }
      }
    }else {
      return not_found
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if(!(coll == null)) {
      return cljs.core._assoc.call(null, coll, k, v)
    }else {
      return cljs.core.hash_map.call(null, k, v)
    }
  };
  var assoc__4 = function() {
    var G__14032__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__14033 = ret;
          var G__14034 = cljs.core.first.call(null, kvs);
          var G__14035 = cljs.core.second.call(null, kvs);
          var G__14036 = cljs.core.nnext.call(null, kvs);
          coll = G__14033;
          k = G__14034;
          v = G__14035;
          kvs = G__14036;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14032 = function(coll, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14032__delegate.call(this, coll, k, v, kvs)
    };
    G__14032.cljs$lang$maxFixedArity = 3;
    G__14032.cljs$lang$applyTo = function(arglist__14037) {
      var coll = cljs.core.first(arglist__14037);
      arglist__14037 = cljs.core.next(arglist__14037);
      var k = cljs.core.first(arglist__14037);
      arglist__14037 = cljs.core.next(arglist__14037);
      var v = cljs.core.first(arglist__14037);
      var kvs = cljs.core.rest(arglist__14037);
      return G__14032__delegate(coll, k, v, kvs)
    };
    G__14032.cljs$core$IFn$_invoke$arity$variadic = G__14032__delegate;
    return G__14032
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__14038__delegate = function(coll, k, ks) {
      while(true) {
        var ret = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__14039 = ret;
          var G__14040 = cljs.core.first.call(null, ks);
          var G__14041 = cljs.core.next.call(null, ks);
          coll = G__14039;
          k = G__14040;
          ks = G__14041;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14038 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14038__delegate.call(this, coll, k, ks)
    };
    G__14038.cljs$lang$maxFixedArity = 2;
    G__14038.cljs$lang$applyTo = function(arglist__14042) {
      var coll = cljs.core.first(arglist__14042);
      arglist__14042 = cljs.core.next(arglist__14042);
      var k = cljs.core.first(arglist__14042);
      var ks = cljs.core.rest(arglist__14042);
      return G__14038__delegate(coll, k, ks)
    };
    G__14038.cljs$core$IFn$_invoke$arity$variadic = G__14038__delegate;
    return G__14038
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3128__auto__ = goog.isFunction(f);
  if(or__3128__auto__) {
    return or__3128__auto__
  }else {
    var G__14046 = f;
    if(G__14046) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto____$1 = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto____$1)) {
          return or__3128__auto____$1
        }else {
          return G__14046.cljs$core$Fn$
        }
      }())) {
        return true
      }else {
        if(!G__14046.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14046)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.Fn, G__14046)
    }
  }
};
cljs.core.with_meta = function with_meta(o, meta) {
  if(cljs.core.fn_QMARK_.call(null, o) && !function() {
    var G__14054 = o;
    if(G__14054) {
      var bit__3746__auto__ = G__14054.cljs$lang$protocol_mask$partition0$ & 262144;
      if(bit__3746__auto__ || G__14054.cljs$core$IWithMeta$) {
        return true
      }else {
        if(!G__14054.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14054)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, G__14054)
    }
  }()) {
    return with_meta.call(null, function() {
      if(typeof cljs.core.t14055 !== "undefined") {
      }else {
        cljs.core.t14055 = function(meta, o, with_meta, meta14056) {
          this.meta = meta;
          this.o = o;
          this.with_meta = with_meta;
          this.meta14056 = meta14056;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393217
        };
        cljs.core.t14055.cljs$lang$type = true;
        cljs.core.t14055.cljs$lang$ctorStr = "cljs.core/t14055";
        cljs.core.t14055.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/t14055")
        };
        cljs.core.t14055.prototype.call = function() {
          var G__14059__delegate = function(self__, args) {
            var self____$1 = this;
            var _ = self____$1;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__14059 = function(self__, var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 1) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__14059__delegate.call(this, self__, args)
          };
          G__14059.cljs$lang$maxFixedArity = 1;
          G__14059.cljs$lang$applyTo = function(arglist__14060) {
            var self__ = cljs.core.first(arglist__14060);
            var args = cljs.core.rest(arglist__14060);
            return G__14059__delegate(self__, args)
          };
          G__14059.cljs$core$IFn$_invoke$arity$variadic = G__14059__delegate;
          return G__14059
        }();
        cljs.core.t14055.prototype.apply = function(self__, args14058) {
          var self__ = this;
          var self____$1 = this;
          return self____$1.call.apply(self____$1, [self____$1].concat(args14058.slice()))
        };
        cljs.core.t14055.prototype.cljs$core$IFn$_invoke$arity$2 = function() {
          var G__14061__delegate = function(args) {
            var _ = this;
            return cljs.core.apply.call(null, self__.o, args)
          };
          var G__14061 = function(var_args) {
            var self__ = this;
            var args = null;
            if(arguments.length > 0) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
            }
            return G__14061__delegate.call(this, args)
          };
          G__14061.cljs$lang$maxFixedArity = 0;
          G__14061.cljs$lang$applyTo = function(arglist__14062) {
            var args = cljs.core.seq(arglist__14062);
            return G__14061__delegate(args)
          };
          G__14061.cljs$core$IFn$_invoke$arity$variadic = G__14061__delegate;
          return G__14061
        }();
        cljs.core.t14055.prototype.cljs$core$Fn$ = true;
        cljs.core.t14055.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14057) {
          var self__ = this;
          var _14057__$1 = this;
          return self__.meta14056
        };
        cljs.core.t14055.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14057, meta14056__$1) {
          var self__ = this;
          var _14057__$1 = this;
          return new cljs.core.t14055(self__.meta, self__.o, self__.with_meta, meta14056__$1)
        };
        cljs.core.__GT_t14055 = function __GT_t14055(meta__$1, o__$1, with_meta__$1, meta14056) {
          return new cljs.core.t14055(meta__$1, o__$1, with_meta__$1, meta14056)
        }
      }
      return new cljs.core.t14055(meta, o, with_meta, null)
    }(), meta)
  }else {
    return cljs.core._with_meta.call(null, o, meta)
  }
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__14064 = o;
    if(G__14064) {
      var bit__3746__auto__ = G__14064.cljs$lang$protocol_mask$partition0$ & 131072;
      if(bit__3746__auto__ || G__14064.cljs$core$IMeta$) {
        return true
      }else {
        if(!G__14064.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14064)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14064)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__14065__delegate = function(coll, k, ks) {
      while(true) {
        var ret = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__14066 = ret;
          var G__14067 = cljs.core.first.call(null, ks);
          var G__14068 = cljs.core.next.call(null, ks);
          coll = G__14066;
          k = G__14067;
          ks = G__14068;
          continue
        }else {
          return ret
        }
        break
      }
    };
    var G__14065 = function(coll, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14065__delegate.call(this, coll, k, ks)
    };
    G__14065.cljs$lang$maxFixedArity = 2;
    G__14065.cljs$lang$applyTo = function(arglist__14069) {
      var coll = cljs.core.first(arglist__14069);
      arglist__14069 = cljs.core.next(arglist__14069);
      var k = cljs.core.first(arglist__14069);
      var ks = cljs.core.rest(arglist__14069);
      return G__14065__delegate(coll, k, ks)
    };
    G__14065.cljs$core$IFn$_invoke$arity$variadic = G__14065__delegate;
    return G__14065
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h = cljs.core.string_hash_cache[k];
  if(typeof h === "number") {
    return h
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function hash(o) {
  if(function() {
    var G__14071 = o;
    if(G__14071) {
      var bit__3739__auto__ = G__14071.cljs$lang$protocol_mask$partition0$ & 4194304;
      if(bit__3739__auto__ || G__14071.cljs$core$IHash$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._hash.call(null, o)
  }else {
    if(typeof o === "number") {
      return Math.floor(o) % 2147483647
    }else {
      if(o === true) {
        return 1
      }else {
        if(o === false) {
          return 0
        }else {
          if(typeof o === "string") {
            return cljs.core.check_string_hash_cache.call(null, o)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core._hash.call(null, o)
            }else {
              return null
            }
          }
        }
      }
    }
  }
};
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14073 = x;
    if(G__14073) {
      var bit__3746__auto__ = G__14073.cljs$lang$protocol_mask$partition0$ & 8;
      if(bit__3746__auto__ || G__14073.cljs$core$ICollection$) {
        return true
      }else {
        if(!G__14073.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14073)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ICollection, G__14073)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14075 = x;
    if(G__14075) {
      var bit__3746__auto__ = G__14075.cljs$lang$protocol_mask$partition0$ & 4096;
      if(bit__3746__auto__ || G__14075.cljs$core$ISet$) {
        return true
      }else {
        if(!G__14075.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14075)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__14075)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__14077 = x;
  if(G__14077) {
    var bit__3746__auto__ = G__14077.cljs$lang$protocol_mask$partition0$ & 512;
    if(bit__3746__auto__ || G__14077.cljs$core$IAssociative$) {
      return true
    }else {
      if(!G__14077.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14077)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IAssociative, G__14077)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__14079 = x;
  if(G__14079) {
    var bit__3746__auto__ = G__14079.cljs$lang$protocol_mask$partition0$ & 16777216;
    if(bit__3746__auto__ || G__14079.cljs$core$ISequential$) {
      return true
    }else {
      if(!G__14079.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14079)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__14079)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__14081 = x;
  if(G__14081) {
    var bit__3746__auto__ = G__14081.cljs$lang$protocol_mask$partition0$ & 524288;
    if(bit__3746__auto__ || G__14081.cljs$core$IReduce$) {
      return true
    }else {
      if(!G__14081.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14081)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, G__14081)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__14083 = x;
    if(G__14083) {
      var bit__3746__auto__ = G__14083.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3746__auto__ || G__14083.cljs$core$IMap$) {
        return true
      }else {
        if(!G__14083.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14083)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__14083)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__14085 = x;
  if(G__14085) {
    var bit__3746__auto__ = G__14085.cljs$lang$protocol_mask$partition0$ & 16384;
    if(bit__3746__auto__ || G__14085.cljs$core$IVector$) {
      return true
    }else {
      if(!G__14085.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14085)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IVector, G__14085)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__14087 = x;
  if(G__14087) {
    var bit__3739__auto__ = G__14087.cljs$lang$protocol_mask$partition1$ & 512;
    if(bit__3739__auto__ || G__14087.cljs$core$IChunkedSeq$) {
      return true
    }else {
      return false
    }
  }else {
    return false
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__14088__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__14088 = function(var_args) {
      var keyvals = null;
      if(arguments.length > 0) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14088__delegate.call(this, keyvals)
    };
    G__14088.cljs$lang$maxFixedArity = 0;
    G__14088.cljs$lang$applyTo = function(arglist__14089) {
      var keyvals = cljs.core.seq(arglist__14089);
      return G__14088__delegate(keyvals)
    };
    G__14088.cljs$core$IFn$_invoke$arity$variadic = G__14088__delegate;
    return G__14088
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  goog.object.forEach(obj, function(val, key, obj__$1) {
    return keys.push(key)
  });
  return keys
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__14090 = i__$1 + 1;
      var G__14091 = j__$1 + 1;
      var G__14092 = len__$1 - 1;
      i__$1 = G__14090;
      j__$1 = G__14091;
      len__$1 = G__14092;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while(true) {
    if(len__$1 === 0) {
      return to
    }else {
      to[j__$1] = from[i__$1];
      var G__14093 = i__$1 - 1;
      var G__14094 = j__$1 - 1;
      var G__14095 = len__$1 - 1;
      i__$1 = G__14093;
      j__$1 = G__14094;
      len__$1 = G__14095;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__14097 = s;
    if(G__14097) {
      var bit__3746__auto__ = G__14097.cljs$lang$protocol_mask$partition0$ & 64;
      if(bit__3746__auto__ || G__14097.cljs$core$ISeq$) {
        return true
      }else {
        if(!G__14097.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14097)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeq, G__14097)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__14099 = s;
  if(G__14099) {
    var bit__3746__auto__ = G__14099.cljs$lang$protocol_mask$partition0$ & 8388608;
    if(bit__3746__auto__ || G__14099.cljs$core$ISeqable$) {
      return true
    }else {
      if(!G__14099.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14099)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISeqable, G__14099)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3128__auto__ = cljs.core.fn_QMARK_.call(null, f);
  if(or__3128__auto__) {
    return or__3128__auto__
  }else {
    var G__14103 = f;
    if(G__14103) {
      var bit__3746__auto__ = G__14103.cljs$lang$protocol_mask$partition0$ & 1;
      if(bit__3746__auto__ || G__14103.cljs$core$IFn$) {
        return true
      }else {
        if(!G__14103.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14103)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IFn, G__14103)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10)
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core.get.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(!(coll == null) && cljs.core.associative_QMARK_.call(null, coll) && cljs.core.contains_QMARK_.call(null, coll, k)) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core.get.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__14104__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([y, null, x, null], true);
        var xs = more;
        while(true) {
          var x__$1 = cljs.core.first.call(null, xs);
          var etc = cljs.core.next.call(null, xs);
          if(cljs.core.truth_(xs)) {
            if(cljs.core.contains_QMARK_.call(null, s, x__$1)) {
              return false
            }else {
              var G__14105 = cljs.core.conj.call(null, s, x__$1);
              var G__14106 = etc;
              s = G__14105;
              xs = G__14106;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__14104 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14104__delegate.call(this, x, y, more)
    };
    G__14104.cljs$lang$maxFixedArity = 2;
    G__14104.cljs$lang$applyTo = function(arglist__14107) {
      var x = cljs.core.first(arglist__14107);
      arglist__14107 = cljs.core.next(arglist__14107);
      var y = cljs.core.first(arglist__14107);
      var more = cljs.core.rest(arglist__14107);
      return G__14104__delegate(x, y, more)
    };
    G__14104.cljs$core$IFn$_invoke$arity$variadic = G__14104__delegate;
    return G__14104
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__14109 = x;
            if(G__14109) {
              var bit__3739__auto__ = G__14109.cljs$lang$protocol_mask$partition1$ & 2048;
              if(bit__3739__auto__ || G__14109.cljs$core$IComparable$) {
                return true
              }else {
                return false
              }
            }else {
              return false
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count.call(null, xs);
    var yl = cljs.core.count.call(null, ys);
    if(xl < yl) {
      return-1
    }else {
      if(xl > yl) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return compare_indexed.call(null, xs, ys, xl, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(d === 0 && n + 1 < len) {
        var G__14110 = xs;
        var G__14111 = ys;
        var G__14112 = len;
        var G__14113 = n + 1;
        xs = G__14110;
        ys = G__14111;
        len = G__14112;
        n = G__14113;
        continue
      }else {
        return d
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r = f.call(null, x, y);
      if(typeof r === "number") {
        return r
      }else {
        if(cljs.core.truth_(r)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4090__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4090__auto__) {
      var s = temp__4090__auto__;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s), cljs.core.next.call(null, s))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__$1) {
        var nval = f.call(null, val__$1, cljs.core.first.call(null, coll__$1));
        if(cljs.core.reduced_QMARK_.call(null, nval)) {
          return cljs.core.deref.call(null, nval)
        }else {
          var G__14114 = nval;
          var G__14115 = cljs.core.next.call(null, coll__$1);
          val__$1 = G__14114;
          coll__$1 = G__14115;
          continue
        }
      }else {
        return val__$1
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.call(null, a)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__14118 = coll;
      if(G__14118) {
        var bit__3739__auto__ = G__14118.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3739__auto__ || G__14118.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__14119 = coll;
      if(G__14119) {
        var bit__3739__auto__ = G__14119.cljs$lang$protocol_mask$partition0$ & 524288;
        if(bit__3739__auto__ || G__14119.cljs$core$IReduce$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      if(coll instanceof Array) {
        return cljs.core.array_reduce.call(null, coll, f, val)
      }else {
        if(typeof coll === "string") {
          return cljs.core.array_reduce.call(null, coll, f, val)
        }else {
          if(cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReduce, coll)) {
            return cljs.core._reduce.call(null, coll, f, val)
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return cljs.core.seq_reduce.call(null, f, val, coll)
            }else {
              return null
            }
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__14120__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__14120 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14120__delegate.call(this, x, y, more)
    };
    G__14120.cljs$lang$maxFixedArity = 2;
    G__14120.cljs$lang$applyTo = function(arglist__14121) {
      var x = cljs.core.first(arglist__14121);
      arglist__14121 = cljs.core.next(arglist__14121);
      var y = cljs.core.first(arglist__14121);
      var more = cljs.core.rest(arglist__14121);
      return G__14120__delegate(x, y, more)
    };
    G__14120.cljs$core$IFn$_invoke$arity$variadic = G__14120__delegate;
    return G__14120
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__14122__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__14122 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14122__delegate.call(this, x, y, more)
    };
    G__14122.cljs$lang$maxFixedArity = 2;
    G__14122.cljs$lang$applyTo = function(arglist__14123) {
      var x = cljs.core.first(arglist__14123);
      arglist__14123 = cljs.core.next(arglist__14123);
      var y = cljs.core.first(arglist__14123);
      var more = cljs.core.rest(arglist__14123);
      return G__14122__delegate(x, y, more)
    };
    G__14122.cljs$core$IFn$_invoke$arity$variadic = G__14122__delegate;
    return G__14122
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__14124__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__14124 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14124__delegate.call(this, x, y, more)
    };
    G__14124.cljs$lang$maxFixedArity = 2;
    G__14124.cljs$lang$applyTo = function(arglist__14125) {
      var x = cljs.core.first(arglist__14125);
      arglist__14125 = cljs.core.next(arglist__14125);
      var y = cljs.core.first(arglist__14125);
      var more = cljs.core.rest(arglist__14125);
      return G__14124__delegate(x, y, more)
    };
    G__14124.cljs$core$IFn$_invoke$arity$variadic = G__14124__delegate;
    return G__14124
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__14126__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__14126 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14126__delegate.call(this, x, y, more)
    };
    G__14126.cljs$lang$maxFixedArity = 2;
    G__14126.cljs$lang$applyTo = function(arglist__14127) {
      var x = cljs.core.first(arglist__14127);
      arglist__14127 = cljs.core.next(arglist__14127);
      var y = cljs.core.first(arglist__14127);
      var more = cljs.core.rest(arglist__14127);
      return G__14126__delegate(x, y, more)
    };
    G__14126.cljs$core$IFn$_invoke$arity$variadic = G__14126__delegate;
    return G__14126
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__14128__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__14129 = y;
            var G__14130 = cljs.core.first.call(null, more);
            var G__14131 = cljs.core.next.call(null, more);
            x = G__14129;
            y = G__14130;
            more = G__14131;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14128 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14128__delegate.call(this, x, y, more)
    };
    G__14128.cljs$lang$maxFixedArity = 2;
    G__14128.cljs$lang$applyTo = function(arglist__14132) {
      var x = cljs.core.first(arglist__14132);
      arglist__14132 = cljs.core.next(arglist__14132);
      var y = cljs.core.first(arglist__14132);
      var more = cljs.core.rest(arglist__14132);
      return G__14128__delegate(x, y, more)
    };
    G__14128.cljs$core$IFn$_invoke$arity$variadic = G__14128__delegate;
    return G__14128
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__14133__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14134 = y;
            var G__14135 = cljs.core.first.call(null, more);
            var G__14136 = cljs.core.next.call(null, more);
            x = G__14134;
            y = G__14135;
            more = G__14136;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14133 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14133__delegate.call(this, x, y, more)
    };
    G__14133.cljs$lang$maxFixedArity = 2;
    G__14133.cljs$lang$applyTo = function(arglist__14137) {
      var x = cljs.core.first(arglist__14137);
      arglist__14137 = cljs.core.next(arglist__14137);
      var y = cljs.core.first(arglist__14137);
      var more = cljs.core.rest(arglist__14137);
      return G__14133__delegate(x, y, more)
    };
    G__14133.cljs$core$IFn$_invoke$arity$variadic = G__14133__delegate;
    return G__14133
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__14138__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__14139 = y;
            var G__14140 = cljs.core.first.call(null, more);
            var G__14141 = cljs.core.next.call(null, more);
            x = G__14139;
            y = G__14140;
            more = G__14141;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14138 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14138__delegate.call(this, x, y, more)
    };
    G__14138.cljs$lang$maxFixedArity = 2;
    G__14138.cljs$lang$applyTo = function(arglist__14142) {
      var x = cljs.core.first(arglist__14142);
      arglist__14142 = cljs.core.next(arglist__14142);
      var y = cljs.core.first(arglist__14142);
      var more = cljs.core.rest(arglist__14142);
      return G__14138__delegate(x, y, more)
    };
    G__14138.cljs$core$IFn$_invoke$arity$variadic = G__14138__delegate;
    return G__14138
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__14143__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__14144 = y;
            var G__14145 = cljs.core.first.call(null, more);
            var G__14146 = cljs.core.next.call(null, more);
            x = G__14144;
            y = G__14145;
            more = G__14146;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14143 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14143__delegate.call(this, x, y, more)
    };
    G__14143.cljs$lang$maxFixedArity = 2;
    G__14143.cljs$lang$applyTo = function(arglist__14147) {
      var x = cljs.core.first(arglist__14147);
      arglist__14147 = cljs.core.next(arglist__14147);
      var y = cljs.core.first(arglist__14147);
      var more = cljs.core.rest(arglist__14147);
      return G__14143__delegate(x, y, more)
    };
    G__14143.cljs$core$IFn$_invoke$arity$variadic = G__14143__delegate;
    return G__14143
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    var x__3433__auto__ = x;
    var y__3434__auto__ = y;
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  };
  var max__3 = function() {
    var G__14148__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, function() {
        var x__3433__auto__ = x;
        var y__3434__auto__ = y;
        return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
      }(), more)
    };
    var G__14148 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14148__delegate.call(this, x, y, more)
    };
    G__14148.cljs$lang$maxFixedArity = 2;
    G__14148.cljs$lang$applyTo = function(arglist__14149) {
      var x = cljs.core.first(arglist__14149);
      arglist__14149 = cljs.core.next(arglist__14149);
      var y = cljs.core.first(arglist__14149);
      var more = cljs.core.rest(arglist__14149);
      return G__14148__delegate(x, y, more)
    };
    G__14148.cljs$core$IFn$_invoke$arity$variadic = G__14148__delegate;
    return G__14148
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    var x__3440__auto__ = x;
    var y__3441__auto__ = y;
    return x__3440__auto__ < y__3441__auto__ ? x__3440__auto__ : y__3441__auto__
  };
  var min__3 = function() {
    var G__14150__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, function() {
        var x__3440__auto__ = x;
        var y__3441__auto__ = y;
        return x__3440__auto__ < y__3441__auto__ ? x__3440__auto__ : y__3441__auto__
      }(), more)
    };
    var G__14150 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14150__delegate.call(this, x, y, more)
    };
    G__14150.cljs$lang$maxFixedArity = 2;
    G__14150.cljs$lang$applyTo = function(arglist__14151) {
      var x = cljs.core.first(arglist__14151);
      arglist__14151 = cljs.core.next(arglist__14151);
      var y = cljs.core.first(arglist__14151);
      var more = cljs.core.rest(arglist__14151);
      return G__14150__delegate(x, y, more)
    };
    G__14150.cljs$core$IFn$_invoke$arity$variadic = G__14150__delegate;
    return G__14150
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min
}();
cljs.core.byte$ = function byte$(x) {
  return x
};
cljs.core.char$ = function char$(x) {
  if(typeof x === "number") {
    return String.fromCharCode(x)
  }else {
    if(typeof x === "string" && x.length === 1) {
      return x
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error("Argument to char must be a character or number");
      }else {
        return null
      }
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x
};
cljs.core.float$ = function float$(x) {
  return x
};
cljs.core.double$ = function double$(x) {
  return x
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0
  };
  var unchecked_add__1 = function(x) {
    return x
  };
  var unchecked_add__2 = function(x, y) {
    return x + y
  };
  var unchecked_add__3 = function() {
    var G__14152__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add, x + y, more)
    };
    var G__14152 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14152__delegate.call(this, x, y, more)
    };
    G__14152.cljs$lang$maxFixedArity = 2;
    G__14152.cljs$lang$applyTo = function(arglist__14153) {
      var x = cljs.core.first(arglist__14153);
      arglist__14153 = cljs.core.next(arglist__14153);
      var y = cljs.core.first(arglist__14153);
      var more = cljs.core.rest(arglist__14153);
      return G__14152__delegate(x, y, more)
    };
    G__14152.cljs$core$IFn$_invoke$arity$variadic = G__14152__delegate;
    return G__14152
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0
  };
  var unchecked_add_int__1 = function(x) {
    return x
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y
  };
  var unchecked_add_int__3 = function() {
    var G__14154__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_add_int, x + y, more)
    };
    var G__14154 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14154__delegate.call(this, x, y, more)
    };
    G__14154.cljs$lang$maxFixedArity = 2;
    G__14154.cljs$lang$applyTo = function(arglist__14155) {
      var x = cljs.core.first(arglist__14155);
      arglist__14155 = cljs.core.next(arglist__14155);
      var y = cljs.core.first(arglist__14155);
      var more = cljs.core.rest(arglist__14155);
      return G__14154__delegate(x, y, more)
    };
    G__14154.cljs$core$IFn$_invoke$arity$variadic = G__14154__delegate;
    return G__14154
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.call(null, 1, x)
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y
  };
  var unchecked_divide_int__3 = function() {
    var G__14156__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_divide_int, unchecked_divide_int.call(null, x, y), more)
    };
    var G__14156 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14156__delegate.call(this, x, y, more)
    };
    G__14156.cljs$lang$maxFixedArity = 2;
    G__14156.cljs$lang$applyTo = function(arglist__14157) {
      var x = cljs.core.first(arglist__14157);
      arglist__14157 = cljs.core.next(arglist__14157);
      var y = cljs.core.first(arglist__14157);
      var more = cljs.core.rest(arglist__14157);
      return G__14156__delegate(x, y, more)
    };
    G__14156.cljs$core$IFn$_invoke$arity$variadic = G__14156__delegate;
    return G__14156
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1
  };
  var unchecked_multiply__1 = function(x) {
    return x
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply__3 = function() {
    var G__14158__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply, x * y, more)
    };
    var G__14158 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14158__delegate.call(this, x, y, more)
    };
    G__14158.cljs$lang$maxFixedArity = 2;
    G__14158.cljs$lang$applyTo = function(arglist__14159) {
      var x = cljs.core.first(arglist__14159);
      arglist__14159 = cljs.core.next(arglist__14159);
      var y = cljs.core.first(arglist__14159);
      var more = cljs.core.rest(arglist__14159);
      return G__14158__delegate(x, y, more)
    };
    G__14158.cljs$core$IFn$_invoke$arity$variadic = G__14158__delegate;
    return G__14158
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1
  };
  var unchecked_multiply_int__1 = function(x) {
    return x
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y
  };
  var unchecked_multiply_int__3 = function() {
    var G__14160__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_multiply_int, x * y, more)
    };
    var G__14160 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14160__delegate.call(this, x, y, more)
    };
    G__14160.cljs$lang$maxFixedArity = 2;
    G__14160.cljs$lang$applyTo = function(arglist__14161) {
      var x = cljs.core.first(arglist__14161);
      arglist__14161 = cljs.core.next(arglist__14161);
      var y = cljs.core.first(arglist__14161);
      var more = cljs.core.rest(arglist__14161);
      return G__14160__delegate(x, y, more)
    };
    G__14160.cljs$core$IFn$_invoke$arity$variadic = G__14160__delegate;
    return G__14160
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  return cljs.core.mod.call(null, x, n)
};
cljs.core.unchecked_substract = function() {
  var unchecked_substract = null;
  var unchecked_substract__1 = function(x) {
    return-x
  };
  var unchecked_substract__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract__3 = function() {
    var G__14162__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract, x - y, more)
    };
    var G__14162 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14162__delegate.call(this, x, y, more)
    };
    G__14162.cljs$lang$maxFixedArity = 2;
    G__14162.cljs$lang$applyTo = function(arglist__14163) {
      var x = cljs.core.first(arglist__14163);
      arglist__14163 = cljs.core.next(arglist__14163);
      var y = cljs.core.first(arglist__14163);
      var more = cljs.core.rest(arglist__14163);
      return G__14162__delegate(x, y, more)
    };
    G__14162.cljs$core$IFn$_invoke$arity$variadic = G__14162__delegate;
    return G__14162
  }();
  unchecked_substract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract__1.call(this, x);
      case 2:
        return unchecked_substract__2.call(this, x, y);
      default:
        return unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract.cljs$lang$maxFixedArity = 2;
  unchecked_substract.cljs$lang$applyTo = unchecked_substract__3.cljs$lang$applyTo;
  unchecked_substract.cljs$core$IFn$_invoke$arity$1 = unchecked_substract__1;
  unchecked_substract.cljs$core$IFn$_invoke$arity$2 = unchecked_substract__2;
  unchecked_substract.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract
}();
cljs.core.unchecked_substract_int = function() {
  var unchecked_substract_int = null;
  var unchecked_substract_int__1 = function(x) {
    return-x
  };
  var unchecked_substract_int__2 = function(x, y) {
    return x - y
  };
  var unchecked_substract_int__3 = function() {
    var G__14164__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, unchecked_substract_int, x - y, more)
    };
    var G__14164 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14164__delegate.call(this, x, y, more)
    };
    G__14164.cljs$lang$maxFixedArity = 2;
    G__14164.cljs$lang$applyTo = function(arglist__14165) {
      var x = cljs.core.first(arglist__14165);
      arglist__14165 = cljs.core.next(arglist__14165);
      var y = cljs.core.first(arglist__14165);
      var more = cljs.core.rest(arglist__14165);
      return G__14164__delegate(x, y, more)
    };
    G__14164.cljs$core$IFn$_invoke$arity$variadic = G__14164__delegate;
    return G__14164
  }();
  unchecked_substract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_substract_int__1.call(this, x);
      case 2:
        return unchecked_substract_int__2.call(this, x, y);
      default:
        return unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_substract_int.cljs$lang$maxFixedArity = 2;
  unchecked_substract_int.cljs$lang$applyTo = unchecked_substract_int__3.cljs$lang$applyTo;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_substract_int__1;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_substract_int__2;
  unchecked_substract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_substract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_substract_int
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.booleans = function booleans(x) {
  return x
};
cljs.core.bytes = function bytes(x) {
  return x
};
cljs.core.chars = function chars(x) {
  return x
};
cljs.core.shorts = function shorts(x) {
  return x
};
cljs.core.ints = function ints(x) {
  return x
};
cljs.core.floats = function floats(x) {
  return x
};
cljs.core.doubles = function doubles(x) {
  return x
};
cljs.core.longs = function longs(x) {
  return x
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix.call(null, (n - rem) / d)
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot.call(null, n, d);
  return n - d * q
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__14166__delegate = function(x, y, more) {
      while(true) {
        if(_EQ__EQ_.call(null, x, y)) {
          if(cljs.core.next.call(null, more)) {
            var G__14167 = y;
            var G__14168 = cljs.core.first.call(null, more);
            var G__14169 = cljs.core.next.call(null, more);
            x = G__14167;
            y = G__14168;
            more = G__14169;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__14166 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14166__delegate.call(this, x, y, more)
    };
    G__14166.cljs$lang$maxFixedArity = 2;
    G__14166.cljs$lang$applyTo = function(arglist__14170) {
      var x = cljs.core.first(arglist__14170);
      arglist__14170 = cljs.core.next(arglist__14170);
      var y = cljs.core.first(arglist__14170);
      var more = cljs.core.rest(arglist__14170);
      return G__14166__delegate(x, y, more)
    };
    G__14166.cljs$core$IFn$_invoke$arity$variadic = G__14166__delegate;
    return G__14166
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs && n__$1 > 0) {
      var G__14171 = n__$1 - 1;
      var G__14172 = cljs.core.next.call(null, xs);
      n__$1 = G__14171;
      xs = G__14172;
      continue
    }else {
      return xs
    }
    break
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(x == null) {
      return""
    }else {
      return x.toString()
    }
  };
  var str__2 = function() {
    var G__14173__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.call(null, x));
      var more = ys;
      while(true) {
        if(cljs.core.truth_(more)) {
          var G__14174 = sb.append(str.call(null, cljs.core.first.call(null, more)));
          var G__14175 = cljs.core.next.call(null, more);
          sb = G__14174;
          more = G__14175;
          continue
        }else {
          return sb.toString()
        }
        break
      }
    };
    var G__14173 = function(x, var_args) {
      var ys = null;
      if(arguments.length > 1) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14173__delegate.call(this, x, ys)
    };
    G__14173.cljs$lang$maxFixedArity = 1;
    G__14173.cljs$lang$applyTo = function(arglist__14176) {
      var x = cljs.core.first(arglist__14176);
      var ys = cljs.core.rest(arglist__14176);
      return G__14173__delegate(x, ys)
    };
    G__14173.cljs$core$IFn$_invoke$arity$variadic = G__14173__delegate;
    return G__14173
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs = cljs.core.seq.call(null, x);
    var ys = cljs.core.seq.call(null, y);
    while(true) {
      if(xs == null) {
        return ys == null
      }else {
        if(ys == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs), cljs.core.first.call(null, ys))) {
            var G__14177 = cljs.core.next.call(null, xs);
            var G__14178 = cljs.core.next.call(null, ys);
            xs = G__14177;
            ys = G__14178;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  if(cljs.core.seq.call(null, coll)) {
    var res = cljs.core.hash.call(null, cljs.core.first.call(null, coll));
    var s = cljs.core.next.call(null, coll);
    while(true) {
      if(s == null) {
        return res
      }else {
        var G__14179 = cljs.core.hash_combine.call(null, res, cljs.core.hash.call(null, cljs.core.first.call(null, s)));
        var G__14180 = cljs.core.next.call(null, s);
        res = G__14179;
        s = G__14180;
        continue
      }
      break
    }
  }else {
    return 0
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq.call(null, m);
  while(true) {
    if(s) {
      var e = cljs.core.first.call(null, s);
      var G__14181 = (h + (cljs.core.hash.call(null, cljs.core.key.call(null, e)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__14182 = cljs.core.next.call(null, s);
      h = G__14181;
      s = G__14182;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__$1) {
      var e = cljs.core.first.call(null, s__$1);
      var G__14183 = (h + cljs.core.hash.call(null, e)) % 4503599627370496;
      var G__14184 = cljs.core.next.call(null, s__$1);
      h = G__14183;
      s__$1 = G__14184;
      continue
    }else {
      return h
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__14191_14197 = cljs.core.seq.call(null, fn_map);
  var chunk__14192_14198 = null;
  var count__14193_14199 = 0;
  var i__14194_14200 = 0;
  while(true) {
    if(i__14194_14200 < count__14193_14199) {
      var vec__14195_14201 = cljs.core._nth.call(null, chunk__14192_14198, i__14194_14200);
      var key_name_14202 = cljs.core.nth.call(null, vec__14195_14201, 0, null);
      var f_14203 = cljs.core.nth.call(null, vec__14195_14201, 1, null);
      var str_name_14204 = cljs.core.name.call(null, key_name_14202);
      obj[str_name_14204] = f_14203;
      var G__14205 = seq__14191_14197;
      var G__14206 = chunk__14192_14198;
      var G__14207 = count__14193_14199;
      var G__14208 = i__14194_14200 + 1;
      seq__14191_14197 = G__14205;
      chunk__14192_14198 = G__14206;
      count__14193_14199 = G__14207;
      i__14194_14200 = G__14208;
      continue
    }else {
      var temp__4092__auto___14209 = cljs.core.seq.call(null, seq__14191_14197);
      if(temp__4092__auto___14209) {
        var seq__14191_14210__$1 = temp__4092__auto___14209;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14191_14210__$1)) {
          var c__3844__auto___14211 = cljs.core.chunk_first.call(null, seq__14191_14210__$1);
          var G__14212 = cljs.core.chunk_rest.call(null, seq__14191_14210__$1);
          var G__14213 = c__3844__auto___14211;
          var G__14214 = cljs.core.count.call(null, c__3844__auto___14211);
          var G__14215 = 0;
          seq__14191_14197 = G__14212;
          chunk__14192_14198 = G__14213;
          count__14193_14199 = G__14214;
          i__14194_14200 = G__14215;
          continue
        }else {
          var vec__14196_14216 = cljs.core.first.call(null, seq__14191_14210__$1);
          var key_name_14217 = cljs.core.nth.call(null, vec__14196_14216, 0, null);
          var f_14218 = cljs.core.nth.call(null, vec__14196_14216, 1, null);
          var str_name_14219 = cljs.core.name.call(null, key_name_14217);
          obj[str_name_14219] = f_14218;
          var G__14220 = cljs.core.next.call(null, seq__14191_14210__$1);
          var G__14221 = null;
          var G__14222 = 0;
          var G__14223 = 0;
          seq__14191_14197 = G__14220;
          chunk__14192_14198 = G__14221;
          count__14193_14199 = G__14222;
          i__14194_14200 = G__14223;
          continue
        }
      }else {
      }
    }
    break
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937646
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return null
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest.call(null, coll__$1)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash)
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65937614
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta)
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__14225 = coll;
  if(G__14225) {
    var bit__3746__auto__ = G__14225.cljs$lang$protocol_mask$partition0$ & 134217728;
    if(bit__3746__auto__ || G__14225.cljs$core$IReversible$) {
      return true
    }else {
      if(!G__14225.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14225)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IReversible, G__14225)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while(true) {
        if(!(xs__$1 == null)) {
          arr.push(cljs.core._first.call(null, xs__$1));
          var G__14226 = cljs.core._next.call(null, xs__$1);
          xs__$1 = G__14226;
          continue
        }else {
          return arr
        }
        break
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while(true) {
      if(i > 0) {
        var G__14227 = i - 1;
        var G__14228 = cljs.core._conj.call(null, r, arr[i - 1]);
        i = G__14227;
        r = G__14228;
        continue
      }else {
        return r
      }
      break
    }
  };
  var list = function(var_args) {
    var xs = null;
    if(arguments.length > 0) {
      xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return list__delegate.call(this, xs)
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__14229) {
    var xs = cljs.core.seq(arglist__14229);
    return list__delegate(xs)
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65929452
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return null
  }else {
    return cljs.core.seq.call(null, self__.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash)
};
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3128__auto__ = coll == null;
    if(or__3128__auto__) {
      return or__3128__auto__
    }else {
      var G__14233 = coll;
      if(G__14233) {
        var bit__3739__auto__ = G__14233.cljs$lang$protocol_mask$partition0$ & 64;
        if(bit__3739__auto__ || G__14233.cljs$core$ISeq$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__14235 = x;
  if(G__14235) {
    var bit__3746__auto__ = G__14235.cljs$lang$protocol_mask$partition0$ & 33554432;
    if(bit__3746__auto__ || G__14235.cljs$core$IList$) {
      return true
    }else {
      if(!G__14235.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14235)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IList, G__14235)
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""))
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if(self__._hash == null) {
    self__._hash = cljs.core.hash_combine.call(null, cljs.core.hash.call(null, self__.ns), cljs.core.hash.call(null, self__.name)) + 2654435769;
    return self__._hash
  }else {
    return self__._hash
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__14237 = null;
  var G__14237__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw)
  };
  var G__14237__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.call(null, coll, kw, not_found)
  };
  G__14237 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14237__2.call(this, self__, coll);
      case 3:
        return G__14237__3.call(this, self__, coll, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14237
}();
cljs.core.Keyword.prototype.apply = function(self__, args14236) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14236.slice()))
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw)
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.call(null, coll, kw, not_found)
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if(other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn
  }else {
    return false
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("")
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash)
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if(x === y) {
    return true
  }else {
    if(x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn
    }else {
      return false
    }
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(name instanceof cljs.core.Keyword) {
      return name
    }else {
      if(name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, cljs.core.name.call(null, name), cljs.core.name.call(null, name), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.Keyword(null, name, name, null)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null)
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.next.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if(self__.fn == null) {
    return self__.s
  }else {
    self__.s = self__.fn.call(null);
    self__.fn = null;
    return self__.s
  }
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if(self__.s == null) {
    return null
  }else {
    var ls = self__.s;
    while(true) {
      if(ls instanceof cljs.core.LazySeq) {
        var G__14238 = ls.sval();
        ls = G__14238;
        continue
      }else {
        self__.s = ls;
        return cljs.core.seq.call(null, self__.s)
      }
      break
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(self__.s == null) {
    return null
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq.call(null, coll__$1);
  if(!(self__.s == null)) {
    return cljs.core.rest.call(null, self__.s)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash)
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end)
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, self__.arr[self__.off], self__.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.call(null, self__.arr, f, start, self__.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end)
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    var more__$1 = cljs.core._seq.call(null, self__.more);
    if(more__$1 == null) {
      return null
    }else {
      return more__$1
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons.call(null, o, this$__$1)
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core._count.call(null, self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, self__.chunk), self__.more, self__.meta, null)
  }else {
    if(self__.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return self__.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return null
  }else {
    return self__.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return self__.more
  }
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash)
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__14240 = s;
    if(G__14240) {
      var bit__3739__auto__ = G__14240.cljs$lang$protocol_mask$partition1$ & 1024;
      if(bit__3739__auto__ || G__14240.cljs$core$IChunkedNext$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__$1)) {
      ary.push(cljs.core.first.call(null, s__$1));
      var G__14241 = cljs.core.next.call(null, s__$1);
      s__$1 = G__14241;
      continue
    }else {
      return ary
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count.call(null, coll));
  var i_14242 = 0;
  var xs_14243 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs_14243) {
      ret[i_14242] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs_14243));
      var G__14244 = i_14242 + 1;
      var G__14245 = cljs.core.next.call(null, xs_14243);
      i_14242 = G__14244;
      xs_14243 = G__14245;
      continue
    }else {
    }
    break
  }
  return ret
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return int_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14246 = i + 1;
          var G__14247 = cljs.core.next.call(null, s__$1);
          i = G__14246;
          s__$1 = G__14247;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14248 = size;
      var i_14249 = 0;
      while(true) {
        if(i_14249 < n__3891__auto___14248) {
          a[i_14249] = init_val_or_seq;
          var G__14250 = i_14249 + 1;
          i_14249 = G__14250;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return long_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14251 = i + 1;
          var G__14252 = cljs.core.next.call(null, s__$1);
          i = G__14251;
          s__$1 = G__14252;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14253 = size;
      var i_14254 = 0;
      while(true) {
        if(i_14254 < n__3891__auto___14253) {
          a[i_14254] = init_val_or_seq;
          var G__14255 = i_14254 + 1;
          i_14254 = G__14255;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return double_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14256 = i + 1;
          var G__14257 = cljs.core.next.call(null, s__$1);
          i = G__14256;
          s__$1 = G__14257;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14258 = size;
      var i_14259 = 0;
      while(true) {
        if(i_14259 < n__3891__auto___14258) {
          a[i_14259] = init_val_or_seq;
          var G__14260 = i_14259 + 1;
          i_14259 = G__14260;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(typeof size_or_seq === "number") {
      return object_array.call(null, size_or_seq, null)
    }else {
      return cljs.core.into_array.call(null, size_or_seq)
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s = cljs.core.seq.call(null, init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while(true) {
        if(s__$1 && i < size) {
          a[i] = cljs.core.first.call(null, s__$1);
          var G__14261 = i + 1;
          var G__14262 = cljs.core.next.call(null, s__$1);
          i = G__14261;
          s__$1 = G__14262;
          continue
        }else {
          return a
        }
        break
      }
    }else {
      var n__3891__auto___14263 = size;
      var i_14264 = 0;
      while(true) {
        if(i_14264 < n__3891__auto___14263) {
          a[i_14264] = init_val_or_seq;
          var G__14265 = i_14264 + 1;
          i_14264 = G__14265;
          continue
        }else {
        }
        break
      }
      return a
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while(true) {
      if(i > 0 && cljs.core.seq.call(null, s__$1)) {
        var G__14266 = cljs.core.next.call(null, s__$1);
        var G__14267 = i - 1;
        var G__14268 = sum + 1;
        s__$1 = G__14266;
        i = G__14267;
        sum = G__14268;
        continue
      }else {
        return sum
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null
    }, null, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x
    }, null, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq.call(null, x);
      if(s) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s), concat.call(null, cljs.core.chunk_rest.call(null, s), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s), concat.call(null, cljs.core.rest.call(null, s), y))
        }
      }else {
        return y
      }
    }, null, null)
  };
  var concat__3 = function() {
    var G__14269__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq.call(null, xys);
          if(xys__$1) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__$1)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__$1), cat.call(null, cljs.core.chunk_rest.call(null, xys__$1), zs__$1))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__$1), cat.call(null, cljs.core.rest.call(null, xys__$1), zs__$1))
            }
          }else {
            if(cljs.core.truth_(zs__$1)) {
              return cat.call(null, cljs.core.first.call(null, zs__$1), cljs.core.next.call(null, zs__$1))
            }else {
              return null
            }
          }
        }, null, null)
      };
      return cat.call(null, concat.call(null, x, y), zs)
    };
    var G__14269 = function(x, y, var_args) {
      var zs = null;
      if(arguments.length > 2) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14269__delegate.call(this, x, y, zs)
    };
    G__14269.cljs$lang$maxFixedArity = 2;
    G__14269.cljs$lang$applyTo = function(arglist__14270) {
      var x = cljs.core.first(arglist__14270);
      arglist__14270 = cljs.core.next(arglist__14270);
      var y = cljs.core.first(arglist__14270);
      var zs = cljs.core.rest(arglist__14270);
      return G__14269__delegate(x, y, zs)
    };
    G__14269.cljs$core$IFn$_invoke$arity$variadic = G__14269__delegate;
    return G__14269
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__14271__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__14271 = function(a, b, c, d, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14271__delegate.call(this, a, b, c, d, more)
    };
    G__14271.cljs$lang$maxFixedArity = 4;
    G__14271.cljs$lang$applyTo = function(arglist__14272) {
      var a = cljs.core.first(arglist__14272);
      arglist__14272 = cljs.core.next(arglist__14272);
      var b = cljs.core.first(arglist__14272);
      arglist__14272 = cljs.core.next(arglist__14272);
      var c = cljs.core.first(arglist__14272);
      arglist__14272 = cljs.core.next(arglist__14272);
      var d = cljs.core.first(arglist__14272);
      var more = cljs.core.rest(arglist__14272);
      return G__14271__delegate(a, b, c, d, more)
    };
    G__14271.cljs$core$IFn$_invoke$arity$variadic = G__14271__delegate;
    return G__14271
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a = cljs.core._first.call(null, args__$1);
    var args__$2 = cljs.core._rest.call(null, args__$1);
    if(argc === 1) {
      if(f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a)
      }else {
        return f.call(null, a)
      }
    }else {
      var b = cljs.core._first.call(null, args__$2);
      var args__$3 = cljs.core._rest.call(null, args__$2);
      if(argc === 2) {
        if(f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a, b)
        }else {
          return f.call(null, a, b)
        }
      }else {
        var c = cljs.core._first.call(null, args__$3);
        var args__$4 = cljs.core._rest.call(null, args__$3);
        if(argc === 3) {
          if(f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a, b, c)
          }else {
            return f.call(null, a, b, c)
          }
        }else {
          var d = cljs.core._first.call(null, args__$4);
          var args__$5 = cljs.core._rest.call(null, args__$4);
          if(argc === 4) {
            if(f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a, b, c, d)
            }else {
              return f.call(null, a, b, c, d)
            }
          }else {
            var e = cljs.core._first.call(null, args__$5);
            var args__$6 = cljs.core._rest.call(null, args__$5);
            if(argc === 5) {
              if(f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e)
              }else {
                return f.call(null, a, b, c, d, e)
              }
            }else {
              var f__$1 = cljs.core._first.call(null, args__$6);
              var args__$7 = cljs.core._rest.call(null, args__$6);
              if(argc === 6) {
                if(f__$1.cljs$core$IFn$_invoke$arity$6) {
                  return f__$1.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f__$1)
                }else {
                  return f__$1.call(null, a, b, c, d, e, f__$1)
                }
              }else {
                var g = cljs.core._first.call(null, args__$7);
                var args__$8 = cljs.core._rest.call(null, args__$7);
                if(argc === 7) {
                  if(f__$1.cljs$core$IFn$_invoke$arity$7) {
                    return f__$1.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f__$1, g)
                  }else {
                    return f__$1.call(null, a, b, c, d, e, f__$1, g)
                  }
                }else {
                  var h = cljs.core._first.call(null, args__$8);
                  var args__$9 = cljs.core._rest.call(null, args__$8);
                  if(argc === 8) {
                    if(f__$1.cljs$core$IFn$_invoke$arity$8) {
                      return f__$1.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f__$1, g, h)
                    }else {
                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h)
                    }
                  }else {
                    var i = cljs.core._first.call(null, args__$9);
                    var args__$10 = cljs.core._rest.call(null, args__$9);
                    if(argc === 9) {
                      if(f__$1.cljs$core$IFn$_invoke$arity$9) {
                        return f__$1.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f__$1, g, h, i)
                      }else {
                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i)
                      }
                    }else {
                      var j = cljs.core._first.call(null, args__$10);
                      var args__$11 = cljs.core._rest.call(null, args__$10);
                      if(argc === 10) {
                        if(f__$1.cljs$core$IFn$_invoke$arity$10) {
                          return f__$1.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f__$1, g, h, i, j)
                        }else {
                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j)
                        }
                      }else {
                        var k = cljs.core._first.call(null, args__$11);
                        var args__$12 = cljs.core._rest.call(null, args__$11);
                        if(argc === 11) {
                          if(f__$1.cljs$core$IFn$_invoke$arity$11) {
                            return f__$1.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f__$1, g, h, i, j, k)
                          }else {
                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k)
                          }
                        }else {
                          var l = cljs.core._first.call(null, args__$12);
                          var args__$13 = cljs.core._rest.call(null, args__$12);
                          if(argc === 12) {
                            if(f__$1.cljs$core$IFn$_invoke$arity$12) {
                              return f__$1.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }else {
                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l)
                            }
                          }else {
                            var m = cljs.core._first.call(null, args__$13);
                            var args__$14 = cljs.core._rest.call(null, args__$13);
                            if(argc === 13) {
                              if(f__$1.cljs$core$IFn$_invoke$arity$13) {
                                return f__$1.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }else {
                                return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m)
                              }
                            }else {
                              var n = cljs.core._first.call(null, args__$14);
                              var args__$15 = cljs.core._rest.call(null, args__$14);
                              if(argc === 14) {
                                if(f__$1.cljs$core$IFn$_invoke$arity$14) {
                                  return f__$1.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }else {
                                  return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n)
                                }
                              }else {
                                var o = cljs.core._first.call(null, args__$15);
                                var args__$16 = cljs.core._rest.call(null, args__$15);
                                if(argc === 15) {
                                  if(f__$1.cljs$core$IFn$_invoke$arity$15) {
                                    return f__$1.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }else {
                                    return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o)
                                  }
                                }else {
                                  var p = cljs.core._first.call(null, args__$16);
                                  var args__$17 = cljs.core._rest.call(null, args__$16);
                                  if(argc === 16) {
                                    if(f__$1.cljs$core$IFn$_invoke$arity$16) {
                                      return f__$1.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }else {
                                      return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p)
                                    }
                                  }else {
                                    var q = cljs.core._first.call(null, args__$17);
                                    var args__$18 = cljs.core._rest.call(null, args__$17);
                                    if(argc === 17) {
                                      if(f__$1.cljs$core$IFn$_invoke$arity$17) {
                                        return f__$1.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }else {
                                        return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q)
                                      }
                                    }else {
                                      var r = cljs.core._first.call(null, args__$18);
                                      var args__$19 = cljs.core._rest.call(null, args__$18);
                                      if(argc === 18) {
                                        if(f__$1.cljs$core$IFn$_invoke$arity$18) {
                                          return f__$1.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }else {
                                          return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r)
                                        }
                                      }else {
                                        var s = cljs.core._first.call(null, args__$19);
                                        var args__$20 = cljs.core._rest.call(null, args__$19);
                                        if(argc === 19) {
                                          if(f__$1.cljs$core$IFn$_invoke$arity$19) {
                                            return f__$1.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }else {
                                            return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s)
                                          }
                                        }else {
                                          var t = cljs.core._first.call(null, args__$20);
                                          var args__$21 = cljs.core._rest.call(null, args__$20);
                                          if(argc === 20) {
                                            if(f__$1.cljs$core$IFn$_invoke$arity$20) {
                                              return f__$1.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }else {
                                              return f__$1.call(null, a, b, c, d, e, f__$1, g, h, i, j, k, l, m, n, o, p, q, r, s, t)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, args, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if(f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
      if(bc <= fixed_arity) {
        return cljs.core.apply_to.call(null, f, bc, arglist)
      }else {
        return f.cljs$lang$applyTo(arglist)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist))
    }
  };
  var apply__6 = function() {
    var G__14273__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if(f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count.call(null, arglist, fixed_arity + 1);
        if(bc <= fixed_arity) {
          return cljs.core.apply_to.call(null, f, bc, arglist)
        }else {
          return f.cljs$lang$applyTo(arglist)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist))
      }
    };
    var G__14273 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(arguments.length > 5) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14273__delegate.call(this, f, a, b, c, d, args)
    };
    G__14273.cljs$lang$maxFixedArity = 5;
    G__14273.cljs$lang$applyTo = function(arglist__14274) {
      var f = cljs.core.first(arglist__14274);
      arglist__14274 = cljs.core.next(arglist__14274);
      var a = cljs.core.first(arglist__14274);
      arglist__14274 = cljs.core.next(arglist__14274);
      var b = cljs.core.first(arglist__14274);
      arglist__14274 = cljs.core.next(arglist__14274);
      var c = cljs.core.first(arglist__14274);
      arglist__14274 = cljs.core.next(arglist__14274);
      var d = cljs.core.first(arglist__14274);
      var args = cljs.core.rest(arglist__14274);
      return G__14273__delegate(f, a, b, c, d, args)
    };
    G__14273.cljs$core$IFn$_invoke$arity$variadic = G__14273__delegate;
    return G__14273
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__14275) {
    var obj = cljs.core.first(arglist__14275);
    arglist__14275 = cljs.core.next(arglist__14275);
    var f = cljs.core.first(arglist__14275);
    var args = cljs.core.rest(arglist__14275);
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__14276__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__14276 = function(x, y, var_args) {
      var more = null;
      if(arguments.length > 2) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14276__delegate.call(this, x, y, more)
    };
    G__14276.cljs$lang$maxFixedArity = 2;
    G__14276.cljs$lang$applyTo = function(arglist__14277) {
      var x = cljs.core.first(arglist__14277);
      arglist__14277 = cljs.core.next(arglist__14277);
      var y = cljs.core.first(arglist__14277);
      var more = cljs.core.rest(arglist__14277);
      return G__14276__delegate(x, y, more)
    };
    G__14276.cljs$core$IFn$_invoke$arity$variadic = G__14276__delegate;
    return G__14276
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__14278 = pred;
        var G__14279 = cljs.core.next.call(null, coll);
        pred = G__14278;
        coll = G__14279;
        continue
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3128__auto__ = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        var G__14280 = pred;
        var G__14281 = cljs.core.next.call(null, coll);
        pred = G__14280;
        coll = G__14281;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__14282 = null;
    var G__14282__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__14282__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__14282__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__14282__3 = function() {
      var G__14283__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__14283 = function(x, y, var_args) {
        var zs = null;
        if(arguments.length > 2) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__14283__delegate.call(this, x, y, zs)
      };
      G__14283.cljs$lang$maxFixedArity = 2;
      G__14283.cljs$lang$applyTo = function(arglist__14284) {
        var x = cljs.core.first(arglist__14284);
        arglist__14284 = cljs.core.next(arglist__14284);
        var y = cljs.core.first(arglist__14284);
        var zs = cljs.core.rest(arglist__14284);
        return G__14283__delegate(x, y, zs)
      };
      G__14283.cljs$core$IFn$_invoke$arity$variadic = G__14283__delegate;
      return G__14283
    }();
    G__14282 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__14282__0.call(this);
        case 1:
          return G__14282__1.call(this, x);
        case 2:
          return G__14282__2.call(this, x, y);
        default:
          return G__14282__3.cljs$core$IFn$_invoke$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14282.cljs$lang$maxFixedArity = 2;
    G__14282.cljs$lang$applyTo = G__14282__3.cljs$lang$applyTo;
    return G__14282
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__14285__delegate = function(args) {
      return x
    };
    var G__14285 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14285__delegate.call(this, args)
    };
    G__14285.cljs$lang$maxFixedArity = 0;
    G__14285.cljs$lang$applyTo = function(arglist__14286) {
      var args = cljs.core.seq(arglist__14286);
      return G__14285__delegate(args)
    };
    G__14285.cljs$core$IFn$_invoke$arity$variadic = G__14285__delegate;
    return G__14285
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__14287 = null;
      var G__14287__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__14287__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__14287__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__14287__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__14287__4 = function() {
        var G__14288__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14288 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14288__delegate.call(this, x, y, z, args)
        };
        G__14288.cljs$lang$maxFixedArity = 3;
        G__14288.cljs$lang$applyTo = function(arglist__14289) {
          var x = cljs.core.first(arglist__14289);
          arglist__14289 = cljs.core.next(arglist__14289);
          var y = cljs.core.first(arglist__14289);
          arglist__14289 = cljs.core.next(arglist__14289);
          var z = cljs.core.first(arglist__14289);
          var args = cljs.core.rest(arglist__14289);
          return G__14288__delegate(x, y, z, args)
        };
        G__14288.cljs$core$IFn$_invoke$arity$variadic = G__14288__delegate;
        return G__14288
      }();
      G__14287 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14287__0.call(this);
          case 1:
            return G__14287__1.call(this, x);
          case 2:
            return G__14287__2.call(this, x, y);
          case 3:
            return G__14287__3.call(this, x, y, z);
          default:
            return G__14287__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14287.cljs$lang$maxFixedArity = 3;
      G__14287.cljs$lang$applyTo = G__14287__4.cljs$lang$applyTo;
      return G__14287
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__14290 = null;
      var G__14290__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__14290__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__14290__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__14290__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__14290__4 = function() {
        var G__14291__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__14291 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14291__delegate.call(this, x, y, z, args)
        };
        G__14291.cljs$lang$maxFixedArity = 3;
        G__14291.cljs$lang$applyTo = function(arglist__14292) {
          var x = cljs.core.first(arglist__14292);
          arglist__14292 = cljs.core.next(arglist__14292);
          var y = cljs.core.first(arglist__14292);
          arglist__14292 = cljs.core.next(arglist__14292);
          var z = cljs.core.first(arglist__14292);
          var args = cljs.core.rest(arglist__14292);
          return G__14291__delegate(x, y, z, args)
        };
        G__14291.cljs$core$IFn$_invoke$arity$variadic = G__14291__delegate;
        return G__14291
      }();
      G__14290 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14290__0.call(this);
          case 1:
            return G__14290__1.call(this, x);
          case 2:
            return G__14290__2.call(this, x, y);
          case 3:
            return G__14290__3.call(this, x, y, z);
          default:
            return G__14290__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14290.cljs$lang$maxFixedArity = 3;
      G__14290.cljs$lang$applyTo = G__14290__4.cljs$lang$applyTo;
      return G__14290
    }()
  };
  var comp__4 = function() {
    var G__14293__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__14294__delegate = function(args) {
          var ret = cljs.core.apply.call(null, cljs.core.first.call(null, fs__$1), args);
          var fs__$2 = cljs.core.next.call(null, fs__$1);
          while(true) {
            if(fs__$2) {
              var G__14295 = cljs.core.first.call(null, fs__$2).call(null, ret);
              var G__14296 = cljs.core.next.call(null, fs__$2);
              ret = G__14295;
              fs__$2 = G__14296;
              continue
            }else {
              return ret
            }
            break
          }
        };
        var G__14294 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14294__delegate.call(this, args)
        };
        G__14294.cljs$lang$maxFixedArity = 0;
        G__14294.cljs$lang$applyTo = function(arglist__14297) {
          var args = cljs.core.seq(arglist__14297);
          return G__14294__delegate(args)
        };
        G__14294.cljs$core$IFn$_invoke$arity$variadic = G__14294__delegate;
        return G__14294
      }()
    };
    var G__14293 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14293__delegate.call(this, f1, f2, f3, fs)
    };
    G__14293.cljs$lang$maxFixedArity = 3;
    G__14293.cljs$lang$applyTo = function(arglist__14298) {
      var f1 = cljs.core.first(arglist__14298);
      arglist__14298 = cljs.core.next(arglist__14298);
      var f2 = cljs.core.first(arglist__14298);
      arglist__14298 = cljs.core.next(arglist__14298);
      var f3 = cljs.core.first(arglist__14298);
      var fs = cljs.core.rest(arglist__14298);
      return G__14293__delegate(f1, f2, f3, fs)
    };
    G__14293.cljs$core$IFn$_invoke$arity$variadic = G__14293__delegate;
    return G__14293
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__14299__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__14299 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14299__delegate.call(this, args)
      };
      G__14299.cljs$lang$maxFixedArity = 0;
      G__14299.cljs$lang$applyTo = function(arglist__14300) {
        var args = cljs.core.seq(arglist__14300);
        return G__14299__delegate(args)
      };
      G__14299.cljs$core$IFn$_invoke$arity$variadic = G__14299__delegate;
      return G__14299
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__14301__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__14301 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14301__delegate.call(this, args)
      };
      G__14301.cljs$lang$maxFixedArity = 0;
      G__14301.cljs$lang$applyTo = function(arglist__14302) {
        var args = cljs.core.seq(arglist__14302);
        return G__14301__delegate(args)
      };
      G__14301.cljs$core$IFn$_invoke$arity$variadic = G__14301__delegate;
      return G__14301
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__14303__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__14303 = function(var_args) {
        var args = null;
        if(arguments.length > 0) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__14303__delegate.call(this, args)
      };
      G__14303.cljs$lang$maxFixedArity = 0;
      G__14303.cljs$lang$applyTo = function(arglist__14304) {
        var args = cljs.core.seq(arglist__14304);
        return G__14303__delegate(args)
      };
      G__14303.cljs$core$IFn$_invoke$arity$variadic = G__14303__delegate;
      return G__14303
    }()
  };
  var partial__5 = function() {
    var G__14305__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__14306__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__14306 = function(var_args) {
          var args = null;
          if(arguments.length > 0) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__14306__delegate.call(this, args)
        };
        G__14306.cljs$lang$maxFixedArity = 0;
        G__14306.cljs$lang$applyTo = function(arglist__14307) {
          var args = cljs.core.seq(arglist__14307);
          return G__14306__delegate(args)
        };
        G__14306.cljs$core$IFn$_invoke$arity$variadic = G__14306__delegate;
        return G__14306
      }()
    };
    var G__14305 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(arguments.length > 4) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14305__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__14305.cljs$lang$maxFixedArity = 4;
    G__14305.cljs$lang$applyTo = function(arglist__14308) {
      var f = cljs.core.first(arglist__14308);
      arglist__14308 = cljs.core.next(arglist__14308);
      var arg1 = cljs.core.first(arglist__14308);
      arglist__14308 = cljs.core.next(arglist__14308);
      var arg2 = cljs.core.first(arglist__14308);
      arglist__14308 = cljs.core.next(arglist__14308);
      var arg3 = cljs.core.first(arglist__14308);
      var more = cljs.core.rest(arglist__14308);
      return G__14305__delegate(f, arg1, arg2, arg3, more)
    };
    G__14305.cljs$core$IFn$_invoke$arity$variadic = G__14305__delegate;
    return G__14305
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__14309 = null;
      var G__14309__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__14309__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__14309__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__14309__4 = function() {
        var G__14310__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__14310 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14310__delegate.call(this, a, b, c, ds)
        };
        G__14310.cljs$lang$maxFixedArity = 3;
        G__14310.cljs$lang$applyTo = function(arglist__14311) {
          var a = cljs.core.first(arglist__14311);
          arglist__14311 = cljs.core.next(arglist__14311);
          var b = cljs.core.first(arglist__14311);
          arglist__14311 = cljs.core.next(arglist__14311);
          var c = cljs.core.first(arglist__14311);
          var ds = cljs.core.rest(arglist__14311);
          return G__14310__delegate(a, b, c, ds)
        };
        G__14310.cljs$core$IFn$_invoke$arity$variadic = G__14310__delegate;
        return G__14310
      }();
      G__14309 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__14309__1.call(this, a);
          case 2:
            return G__14309__2.call(this, a, b);
          case 3:
            return G__14309__3.call(this, a, b, c);
          default:
            return G__14309__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14309.cljs$lang$maxFixedArity = 3;
      G__14309.cljs$lang$applyTo = G__14309__4.cljs$lang$applyTo;
      return G__14309
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__14312 = null;
      var G__14312__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14312__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__14312__4 = function() {
        var G__14313__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__14313 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14313__delegate.call(this, a, b, c, ds)
        };
        G__14313.cljs$lang$maxFixedArity = 3;
        G__14313.cljs$lang$applyTo = function(arglist__14314) {
          var a = cljs.core.first(arglist__14314);
          arglist__14314 = cljs.core.next(arglist__14314);
          var b = cljs.core.first(arglist__14314);
          arglist__14314 = cljs.core.next(arglist__14314);
          var c = cljs.core.first(arglist__14314);
          var ds = cljs.core.rest(arglist__14314);
          return G__14313__delegate(a, b, c, ds)
        };
        G__14313.cljs$core$IFn$_invoke$arity$variadic = G__14313__delegate;
        return G__14313
      }();
      G__14312 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14312__2.call(this, a, b);
          case 3:
            return G__14312__3.call(this, a, b, c);
          default:
            return G__14312__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14312.cljs$lang$maxFixedArity = 3;
      G__14312.cljs$lang$applyTo = G__14312__4.cljs$lang$applyTo;
      return G__14312
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__14315 = null;
      var G__14315__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__14315__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__14315__4 = function() {
        var G__14316__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__14316 = function(a, b, c, var_args) {
          var ds = null;
          if(arguments.length > 3) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14316__delegate.call(this, a, b, c, ds)
        };
        G__14316.cljs$lang$maxFixedArity = 3;
        G__14316.cljs$lang$applyTo = function(arglist__14317) {
          var a = cljs.core.first(arglist__14317);
          arglist__14317 = cljs.core.next(arglist__14317);
          var b = cljs.core.first(arglist__14317);
          arglist__14317 = cljs.core.next(arglist__14317);
          var c = cljs.core.first(arglist__14317);
          var ds = cljs.core.rest(arglist__14317);
          return G__14316__delegate(a, b, c, ds)
        };
        G__14316.cljs$core$IFn$_invoke$arity$variadic = G__14316__delegate;
        return G__14316
      }();
      G__14315 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__14315__2.call(this, a, b);
          case 3:
            return G__14315__3.call(this, a, b, c);
          default:
            return G__14315__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14315.cljs$lang$maxFixedArity = 3;
      G__14315.cljs$lang$applyTo = G__14315__4.cljs$lang$applyTo;
      return G__14315
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi = function mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14318 = size;
          var i_14319 = 0;
          while(true) {
            if(i_14319 < n__3891__auto___14318) {
              cljs.core.chunk_append.call(null, b, f.call(null, idx + i_14319, cljs.core._nth.call(null, c, i_14319)));
              var G__14320 = i_14319 + 1;
              i_14319 = G__14320;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), mapi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  return mapi.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3891__auto___14321 = size;
        var i_14322 = 0;
        while(true) {
          if(i_14322 < n__3891__auto___14321) {
            var x_14323 = f.call(null, cljs.core._nth.call(null, c, i_14322));
            if(x_14323 == null) {
            }else {
              cljs.core.chunk_append.call(null, b, x_14323)
            }
            var G__14324 = i_14322 + 1;
            i_14322 = G__14324;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keep.call(null, f, cljs.core.chunk_rest.call(null, s)))
      }else {
        var x = f.call(null, cljs.core.first.call(null, s));
        if(x == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s))
        }else {
          return cljs.core.cons.call(null, x, keep.call(null, f, cljs.core.rest.call(null, s)))
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi = function keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll__$1);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14325 = size;
          var i_14326 = 0;
          while(true) {
            if(i_14326 < n__3891__auto___14325) {
              var x_14327 = f.call(null, idx + i_14326, cljs.core._nth.call(null, c, i_14326));
              if(x_14327 == null) {
              }else {
                cljs.core.chunk_append.call(null, b, x_14327)
              }
              var G__14328 = i_14326 + 1;
              i_14326 = G__14328;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), keepi.call(null, idx + size, cljs.core.chunk_rest.call(null, s)))
        }else {
          var x = f.call(null, idx, cljs.core.first.call(null, s));
          if(x == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s))
          }else {
            return cljs.core.cons.call(null, x, keepi.call(null, idx + 1, cljs.core.rest.call(null, s)))
          }
        }
      }else {
        return null
      }
    }, null, null)
  };
  return keepi.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            return p.call(null, y)
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              return p.call(null, z)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep1__4 = function() {
        var G__14335__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14335 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14335__delegate.call(this, x, y, z, args)
        };
        G__14335.cljs$lang$maxFixedArity = 3;
        G__14335.cljs$lang$applyTo = function(arglist__14336) {
          var x = cljs.core.first(arglist__14336);
          arglist__14336 = cljs.core.next(arglist__14336);
          var y = cljs.core.first(arglist__14336);
          arglist__14336 = cljs.core.next(arglist__14336);
          var z = cljs.core.first(arglist__14336);
          var args = cljs.core.rest(arglist__14336);
          return G__14335__delegate(x, y, z, args)
        };
        G__14335.cljs$core$IFn$_invoke$arity$variadic = G__14335__delegate;
        return G__14335
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            return p2.call(null, x)
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p2.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                return p2.call(null, y)
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p1.call(null, y);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p1.call(null, z);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p2.call(null, x);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    return p2.call(null, z)
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep2__4 = function() {
        var G__14337__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__14329_SHARP_) {
                var and__3119__auto____$1 = p1.call(null, p1__14329_SHARP_);
                if(cljs.core.truth_(and__3119__auto____$1)) {
                  return p2.call(null, p1__14329_SHARP_)
                }else {
                  return and__3119__auto____$1
                }
              }, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14337 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14337__delegate.call(this, x, y, z, args)
        };
        G__14337.cljs$lang$maxFixedArity = 3;
        G__14337.cljs$lang$applyTo = function(arglist__14338) {
          var x = cljs.core.first(arglist__14338);
          arglist__14338 = cljs.core.next(arglist__14338);
          var y = cljs.core.first(arglist__14338);
          arglist__14338 = cljs.core.next(arglist__14338);
          var z = cljs.core.first(arglist__14338);
          var args = cljs.core.rest(arglist__14338);
          return G__14337__delegate(x, y, z, args)
        };
        G__14337.cljs$core$IFn$_invoke$arity$variadic = G__14337__delegate;
        return G__14337
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              return p3.call(null, x)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    return p3.call(null, y)
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3119__auto__ = p1.call(null, x);
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = p2.call(null, x);
            if(cljs.core.truth_(and__3119__auto____$1)) {
              var and__3119__auto____$2 = p3.call(null, x);
              if(cljs.core.truth_(and__3119__auto____$2)) {
                var and__3119__auto____$3 = p1.call(null, y);
                if(cljs.core.truth_(and__3119__auto____$3)) {
                  var and__3119__auto____$4 = p2.call(null, y);
                  if(cljs.core.truth_(and__3119__auto____$4)) {
                    var and__3119__auto____$5 = p3.call(null, y);
                    if(cljs.core.truth_(and__3119__auto____$5)) {
                      var and__3119__auto____$6 = p1.call(null, z);
                      if(cljs.core.truth_(and__3119__auto____$6)) {
                        var and__3119__auto____$7 = p2.call(null, z);
                        if(cljs.core.truth_(and__3119__auto____$7)) {
                          return p3.call(null, z)
                        }else {
                          return and__3119__auto____$7
                        }
                      }else {
                        return and__3119__auto____$6
                      }
                    }else {
                      return and__3119__auto____$5
                    }
                  }else {
                    return and__3119__auto____$4
                  }
                }else {
                  return and__3119__auto____$3
                }
              }else {
                return and__3119__auto____$2
              }
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())
      };
      var ep3__4 = function() {
        var G__14339__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3119__auto__ = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3119__auto__)) {
              return cljs.core.every_QMARK_.call(null, function(p1__14330_SHARP_) {
                var and__3119__auto____$1 = p1.call(null, p1__14330_SHARP_);
                if(cljs.core.truth_(and__3119__auto____$1)) {
                  var and__3119__auto____$2 = p2.call(null, p1__14330_SHARP_);
                  if(cljs.core.truth_(and__3119__auto____$2)) {
                    return p3.call(null, p1__14330_SHARP_)
                  }else {
                    return and__3119__auto____$2
                  }
                }else {
                  return and__3119__auto____$1
                }
              }, args)
            }else {
              return and__3119__auto__
            }
          }())
        };
        var G__14339 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14339__delegate.call(this, x, y, z, args)
        };
        G__14339.cljs$lang$maxFixedArity = 3;
        G__14339.cljs$lang$applyTo = function(arglist__14340) {
          var x = cljs.core.first(arglist__14340);
          arglist__14340 = cljs.core.next(arglist__14340);
          var y = cljs.core.first(arglist__14340);
          arglist__14340 = cljs.core.next(arglist__14340);
          var z = cljs.core.first(arglist__14340);
          var args = cljs.core.rest(arglist__14340);
          return G__14339__delegate(x, y, z, args)
        };
        G__14339.cljs$core$IFn$_invoke$arity$variadic = G__14339__delegate;
        return G__14339
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__14341__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__14331_SHARP_) {
            return p1__14331_SHARP_.call(null, x)
          }, ps__$1)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__14332_SHARP_) {
            var and__3119__auto__ = p1__14332_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3119__auto__)) {
              return p1__14332_SHARP_.call(null, y)
            }else {
              return and__3119__auto__
            }
          }, ps__$1)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__14333_SHARP_) {
            var and__3119__auto__ = p1__14333_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3119__auto__)) {
              var and__3119__auto____$1 = p1__14333_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3119__auto____$1)) {
                return p1__14333_SHARP_.call(null, z)
              }else {
                return and__3119__auto____$1
              }
            }else {
              return and__3119__auto__
            }
          }, ps__$1)
        };
        var epn__4 = function() {
          var G__14342__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3119__auto__ = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3119__auto__)) {
                return cljs.core.every_QMARK_.call(null, function(p1__14334_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__14334_SHARP_, args)
                }, ps__$1)
              }else {
                return and__3119__auto__
              }
            }())
          };
          var G__14342 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14342__delegate.call(this, x, y, z, args)
          };
          G__14342.cljs$lang$maxFixedArity = 3;
          G__14342.cljs$lang$applyTo = function(arglist__14343) {
            var x = cljs.core.first(arglist__14343);
            arglist__14343 = cljs.core.next(arglist__14343);
            var y = cljs.core.first(arglist__14343);
            arglist__14343 = cljs.core.next(arglist__14343);
            var z = cljs.core.first(arglist__14343);
            var args = cljs.core.rest(arglist__14343);
            return G__14342__delegate(x, y, z, args)
          };
          G__14342.cljs$core$IFn$_invoke$arity$variadic = G__14342__delegate;
          return G__14342
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
        epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
        epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
        epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
        epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
        return epn
      }()
    };
    var G__14341 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14341__delegate.call(this, p1, p2, p3, ps)
    };
    G__14341.cljs$lang$maxFixedArity = 3;
    G__14341.cljs$lang$applyTo = function(arglist__14344) {
      var p1 = cljs.core.first(arglist__14344);
      arglist__14344 = cljs.core.next(arglist__14344);
      var p2 = cljs.core.first(arglist__14344);
      arglist__14344 = cljs.core.next(arglist__14344);
      var p3 = cljs.core.first(arglist__14344);
      var ps = cljs.core.rest(arglist__14344);
      return G__14341__delegate(p1, p2, p3, ps)
    };
    G__14341.cljs$core$IFn$_invoke$arity$variadic = G__14341__delegate;
    return G__14341
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3128__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3128__auto__ = p.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__14351__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__14351 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14351__delegate.call(this, x, y, z, args)
        };
        G__14351.cljs$lang$maxFixedArity = 3;
        G__14351.cljs$lang$applyTo = function(arglist__14352) {
          var x = cljs.core.first(arglist__14352);
          arglist__14352 = cljs.core.next(arglist__14352);
          var y = cljs.core.first(arglist__14352);
          arglist__14352 = cljs.core.next(arglist__14352);
          var z = cljs.core.first(arglist__14352);
          var args = cljs.core.rest(arglist__14352);
          return G__14351__delegate(x, y, z, args)
        };
        G__14351.cljs$core$IFn$_invoke$arity$variadic = G__14351__delegate;
        return G__14351
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p2.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p1.call(null, y);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p1.call(null, z);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p2.call(null, x);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__14353__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14345_SHARP_) {
              var or__3128__auto____$1 = p1.call(null, p1__14345_SHARP_);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                return p2.call(null, p1__14345_SHARP_)
              }
            }, args)
          }
        };
        var G__14353 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14353__delegate.call(this, x, y, z, args)
        };
        G__14353.cljs$lang$maxFixedArity = 3;
        G__14353.cljs$lang$applyTo = function(arglist__14354) {
          var x = cljs.core.first(arglist__14354);
          arglist__14354 = cljs.core.next(arglist__14354);
          var y = cljs.core.first(arglist__14354);
          arglist__14354 = cljs.core.next(arglist__14354);
          var z = cljs.core.first(arglist__14354);
          var args = cljs.core.rest(arglist__14354);
          return G__14353__delegate(x, y, z, args)
        };
        G__14353.cljs$core$IFn$_invoke$arity$variadic = G__14353__delegate;
        return G__14353
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3128__auto__ = p1.call(null, x);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = p2.call(null, x);
          if(cljs.core.truth_(or__3128__auto____$1)) {
            return or__3128__auto____$1
          }else {
            var or__3128__auto____$2 = p3.call(null, x);
            if(cljs.core.truth_(or__3128__auto____$2)) {
              return or__3128__auto____$2
            }else {
              var or__3128__auto____$3 = p1.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$3)) {
                return or__3128__auto____$3
              }else {
                var or__3128__auto____$4 = p2.call(null, y);
                if(cljs.core.truth_(or__3128__auto____$4)) {
                  return or__3128__auto____$4
                }else {
                  var or__3128__auto____$5 = p3.call(null, y);
                  if(cljs.core.truth_(or__3128__auto____$5)) {
                    return or__3128__auto____$5
                  }else {
                    var or__3128__auto____$6 = p1.call(null, z);
                    if(cljs.core.truth_(or__3128__auto____$6)) {
                      return or__3128__auto____$6
                    }else {
                      var or__3128__auto____$7 = p2.call(null, z);
                      if(cljs.core.truth_(or__3128__auto____$7)) {
                        return or__3128__auto____$7
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__14355__delegate = function(x, y, z, args) {
          var or__3128__auto__ = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.some.call(null, function(p1__14346_SHARP_) {
              var or__3128__auto____$1 = p1.call(null, p1__14346_SHARP_);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                var or__3128__auto____$2 = p2.call(null, p1__14346_SHARP_);
                if(cljs.core.truth_(or__3128__auto____$2)) {
                  return or__3128__auto____$2
                }else {
                  return p3.call(null, p1__14346_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__14355 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14355__delegate.call(this, x, y, z, args)
        };
        G__14355.cljs$lang$maxFixedArity = 3;
        G__14355.cljs$lang$applyTo = function(arglist__14356) {
          var x = cljs.core.first(arglist__14356);
          arglist__14356 = cljs.core.next(arglist__14356);
          var y = cljs.core.first(arglist__14356);
          arglist__14356 = cljs.core.next(arglist__14356);
          var z = cljs.core.first(arglist__14356);
          var args = cljs.core.rest(arglist__14356);
          return G__14355__delegate(x, y, z, args)
        };
        G__14355.cljs$core$IFn$_invoke$arity$variadic = G__14355__delegate;
        return G__14355
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__14357__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__14347_SHARP_) {
            return p1__14347_SHARP_.call(null, x)
          }, ps__$1)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__14348_SHARP_) {
            var or__3128__auto__ = p1__14348_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return p1__14348_SHARP_.call(null, y)
            }
          }, ps__$1)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__14349_SHARP_) {
            var or__3128__auto__ = p1__14349_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              var or__3128__auto____$1 = p1__14349_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3128__auto____$1)) {
                return or__3128__auto____$1
              }else {
                return p1__14349_SHARP_.call(null, z)
              }
            }
          }, ps__$1)
        };
        var spn__4 = function() {
          var G__14358__delegate = function(x, y, z, args) {
            var or__3128__auto__ = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return cljs.core.some.call(null, function(p1__14350_SHARP_) {
                return cljs.core.some.call(null, p1__14350_SHARP_, args)
              }, ps__$1)
            }
          };
          var G__14358 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14358__delegate.call(this, x, y, z, args)
          };
          G__14358.cljs$lang$maxFixedArity = 3;
          G__14358.cljs$lang$applyTo = function(arglist__14359) {
            var x = cljs.core.first(arglist__14359);
            arglist__14359 = cljs.core.next(arglist__14359);
            var y = cljs.core.first(arglist__14359);
            arglist__14359 = cljs.core.next(arglist__14359);
            var z = cljs.core.first(arglist__14359);
            var args = cljs.core.rest(arglist__14359);
            return G__14358__delegate(x, y, z, args)
          };
          G__14358.cljs$core$IFn$_invoke$arity$variadic = G__14358__delegate;
          return G__14358
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
        spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
        spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
        spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
        spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
        return spn
      }()
    };
    var G__14357 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(arguments.length > 3) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14357__delegate.call(this, p1, p2, p3, ps)
    };
    G__14357.cljs$lang$maxFixedArity = 3;
    G__14357.cljs$lang$applyTo = function(arglist__14360) {
      var p1 = cljs.core.first(arglist__14360);
      arglist__14360 = cljs.core.next(arglist__14360);
      var p2 = cljs.core.first(arglist__14360);
      arglist__14360 = cljs.core.next(arglist__14360);
      var p3 = cljs.core.first(arglist__14360);
      var ps = cljs.core.rest(arglist__14360);
      return G__14357__delegate(p1, p2, p3, ps)
    };
    G__14357.cljs$core$IFn$_invoke$arity$variadic = G__14357__delegate;
    return G__14357
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
          var c = cljs.core.chunk_first.call(null, s);
          var size = cljs.core.count.call(null, c);
          var b = cljs.core.chunk_buffer.call(null, size);
          var n__3891__auto___14362 = size;
          var i_14363 = 0;
          while(true) {
            if(i_14363 < n__3891__auto___14362) {
              cljs.core.chunk_append.call(null, b, f.call(null, cljs.core._nth.call(null, c, i_14363)));
              var G__14364 = i_14363 + 1;
              i_14363 = G__14364;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), map.call(null, f, cljs.core.chunk_rest.call(null, s)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s)), map.call(null, f, cljs.core.rest.call(null, s)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      var s3 = cljs.core.seq.call(null, c3);
      if(s1 && s2 && s3) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1), cljs.core.first.call(null, s2), cljs.core.first.call(null, s3)), map.call(null, f, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2), cljs.core.rest.call(null, s3)))
      }else {
        return null
      }
    }, null, null)
  };
  var map__5 = function() {
    var G__14365__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss), step.call(null, map.call(null, cljs.core.rest, ss)))
          }else {
            return null
          }
        }, null, null)
      };
      return map.call(null, function(p1__14361_SHARP_) {
        return cljs.core.apply.call(null, f, p1__14361_SHARP_)
      }, step.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__14365 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14365__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14365.cljs$lang$maxFixedArity = 4;
    G__14365.cljs$lang$applyTo = function(arglist__14366) {
      var f = cljs.core.first(arglist__14366);
      arglist__14366 = cljs.core.next(arglist__14366);
      var c1 = cljs.core.first(arglist__14366);
      arglist__14366 = cljs.core.next(arglist__14366);
      var c2 = cljs.core.first(arglist__14366);
      arglist__14366 = cljs.core.next(arglist__14366);
      var c3 = cljs.core.first(arglist__14366);
      var colls = cljs.core.rest(arglist__14366);
      return G__14365__delegate(f, c1, c2, c3, colls)
    };
    G__14365.cljs$core$IFn$_invoke$arity$variadic = G__14365__delegate;
    return G__14365
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    if(n > 0) {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take.call(null, n - 1, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.drop = function drop(n, coll) {
  var step = function(n__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(n__$1 > 0 && s) {
        var G__14367 = n__$1 - 1;
        var G__14368 = cljs.core.rest.call(null, s);
        n__$1 = G__14367;
        coll__$1 = G__14368;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, n, coll)
  }, null, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq.call(null, coll);
  var lead = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead) {
      var G__14369 = cljs.core.next.call(null, s);
      var G__14370 = cljs.core.next.call(null, lead);
      s = G__14369;
      lead = G__14370;
      continue
    }else {
      return s
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while(true) {
      var s = cljs.core.seq.call(null, coll__$1);
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = s;
        if(and__3119__auto__) {
          return pred__$1.call(null, cljs.core.first.call(null, s))
        }else {
          return and__3119__auto__
        }
      }())) {
        var G__14371 = pred__$1;
        var G__14372 = cljs.core.rest.call(null, s);
        pred__$1 = G__14371;
        coll__$1 = G__14372;
        continue
      }else {
        return s
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step.call(null, pred, coll)
  }, null, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.concat.call(null, s, cycle.call(null, s))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq.call(null, c1);
      var s2 = cljs.core.seq.call(null, c2);
      if(s1 && s2) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1), cljs.core.cons.call(null, cljs.core.first.call(null, s2), interleave.call(null, cljs.core.rest.call(null, s1), cljs.core.rest.call(null, s2))))
      }else {
        return null
      }
    }, null, null)
  };
  var interleave__3 = function() {
    var G__14373__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss)))
        }else {
          return null
        }
      }, null, null)
    };
    var G__14373 = function(c1, c2, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14373__delegate.call(this, c1, c2, colls)
    };
    G__14373.cljs$lang$maxFixedArity = 2;
    G__14373.cljs$lang$applyTo = function(arglist__14374) {
      var c1 = cljs.core.first(arglist__14374);
      arglist__14374 = cljs.core.next(arglist__14374);
      var c2 = cljs.core.first(arglist__14374);
      var colls = cljs.core.rest(arglist__14374);
      return G__14373__delegate(c1, c2, colls)
    };
    G__14373.cljs$core$IFn$_invoke$arity$variadic = G__14373__delegate;
    return G__14373
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var coll__$1 = temp__4090__auto__;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__$1), cat.call(null, cljs.core.rest.call(null, coll__$1), colls__$1))
      }else {
        if(cljs.core.seq.call(null, colls__$1)) {
          return cat.call(null, cljs.core.first.call(null, colls__$1), cljs.core.rest.call(null, colls__$1))
        }else {
          return null
        }
      }
    }, null, null)
  };
  return cat.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__14375__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__14375 = function(f, coll, var_args) {
      var colls = null;
      if(arguments.length > 2) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__14375__delegate.call(this, f, coll, colls)
    };
    G__14375.cljs$lang$maxFixedArity = 2;
    G__14375.cljs$lang$applyTo = function(arglist__14376) {
      var f = cljs.core.first(arglist__14376);
      arglist__14376 = cljs.core.next(arglist__14376);
      var coll = cljs.core.first(arglist__14376);
      var colls = cljs.core.rest(arglist__14376);
      return G__14375__delegate(f, coll, colls)
    };
    G__14375.cljs$core$IFn$_invoke$arity$variadic = G__14375__delegate;
    return G__14375
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$core$IFn$_invoke$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$2 = mapcat__2;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__3.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.chunked_seq_QMARK_.call(null, s)) {
        var c = cljs.core.chunk_first.call(null, s);
        var size = cljs.core.count.call(null, c);
        var b = cljs.core.chunk_buffer.call(null, size);
        var n__3891__auto___14377 = size;
        var i_14378 = 0;
        while(true) {
          if(i_14378 < n__3891__auto___14377) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c, i_14378)))) {
              cljs.core.chunk_append.call(null, b, cljs.core._nth.call(null, c, i_14378))
            }else {
            }
            var G__14379 = i_14378 + 1;
            i_14378 = G__14379;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b), filter.call(null, pred, cljs.core.chunk_rest.call(null, s)))
      }else {
        var f = cljs.core.first.call(null, s);
        var r = cljs.core.rest.call(null, s);
        if(cljs.core.truth_(pred.call(null, f))) {
          return cljs.core.cons.call(null, f, filter.call(null, pred, r))
        }else {
          return filter.call(null, pred, r)
        }
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null, null)
  };
  return walk.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__14380_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__14380_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(!(to == null)) {
    if(function() {
      var G__14382 = to;
      if(G__14382) {
        var bit__3739__auto__ = G__14382.cljs$lang$protocol_mask$partition1$ & 4;
        if(bit__3739__auto__ || G__14382.cljs$core$IEditableCollection$) {
          return true
        }else {
          return false
        }
      }else {
        return false
      }
    }()) {
      return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
    }else {
      return cljs.core.reduce.call(null, cljs.core._conj, to, from)
    }
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__14383__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__14383 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(arguments.length > 4) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__14383__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__14383.cljs$lang$maxFixedArity = 4;
    G__14383.cljs$lang$applyTo = function(arglist__14384) {
      var f = cljs.core.first(arglist__14384);
      arglist__14384 = cljs.core.next(arglist__14384);
      var c1 = cljs.core.first(arglist__14384);
      arglist__14384 = cljs.core.next(arglist__14384);
      var c2 = cljs.core.first(arglist__14384);
      arglist__14384 = cljs.core.next(arglist__14384);
      var c3 = cljs.core.first(arglist__14384);
      var colls = cljs.core.rest(arglist__14384);
      return G__14383__delegate(f, c1, c2, c3, colls)
    };
    G__14383.cljs$core$IFn$_invoke$arity$variadic = G__14383__delegate;
    return G__14383
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, cljs.core.drop.call(null, step, s)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        var p = cljs.core.take.call(null, n, s);
        if(n === cljs.core.count.call(null, p)) {
          return cljs.core.cons.call(null, p, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p, pad)))
        }
      }else {
        return null
      }
    }, null, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.call(null, m, ks, null)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__$1) {
        if(!function() {
          var G__14386 = m__$1;
          if(G__14386) {
            var bit__3746__auto__ = G__14386.cljs$lang$protocol_mask$partition0$ & 256;
            if(bit__3746__auto__ || G__14386.cljs$core$ILookup$) {
              return true
            }else {
              if(!G__14386.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14386)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ILookup, G__14386)
          }
        }()) {
          return not_found
        }else {
          var m__$2 = cljs.core.get.call(null, m__$1, cljs.core.first.call(null, ks__$1), sentinel);
          if(sentinel === m__$2) {
            return not_found
          }else {
            var G__14387 = sentinel;
            var G__14388 = m__$2;
            var G__14389 = cljs.core.next.call(null, ks__$1);
            sentinel = G__14387;
            m__$1 = G__14388;
            ks__$1 = G__14389;
            continue
          }
        }
      }else {
        return m__$1
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__14390, v) {
  var vec__14392 = p__14390;
  var k = cljs.core.nth.call(null, vec__14392, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14392, 1);
  if(cljs.core.truth_(ks)) {
    return cljs.core.assoc.call(null, m, k, assoc_in.call(null, cljs.core.get.call(null, m, k), ks, v))
  }else {
    return cljs.core.assoc.call(null, m, k, v)
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__14393, f) {
    var vec__14403 = p__14393;
    var k = cljs.core.nth.call(null, vec__14403, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14403, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k)))
    }
  };
  var update_in__4 = function(m, p__14394, f, a) {
    var vec__14404 = p__14394;
    var k = cljs.core.nth.call(null, vec__14404, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14404, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a))
    }
  };
  var update_in__5 = function(m, p__14395, f, a, b) {
    var vec__14405 = p__14395;
    var k = cljs.core.nth.call(null, vec__14405, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14405, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b))
    }
  };
  var update_in__6 = function(m, p__14396, f, a, b, c) {
    var vec__14406 = p__14396;
    var k = cljs.core.nth.call(null, vec__14406, 0, null);
    var ks = cljs.core.nthnext.call(null, vec__14406, 1);
    if(cljs.core.truth_(ks)) {
      return cljs.core.assoc.call(null, m, k, update_in.call(null, cljs.core.get.call(null, m, k), ks, f, a, b, c))
    }else {
      return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), a, b, c))
    }
  };
  var update_in__7 = function() {
    var G__14408__delegate = function(m, p__14397, f, a, b, c, args) {
      var vec__14407 = p__14397;
      var k = cljs.core.nth.call(null, vec__14407, 0, null);
      var ks = cljs.core.nthnext.call(null, vec__14407, 1);
      if(cljs.core.truth_(ks)) {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, update_in, cljs.core.get.call(null, m, k), ks, f, a, b, c, args))
      }else {
        return cljs.core.assoc.call(null, m, k, cljs.core.apply.call(null, f, cljs.core.get.call(null, m, k), a, b, c, args))
      }
    };
    var G__14408 = function(m, p__14397, f, a, b, c, var_args) {
      var args = null;
      if(arguments.length > 6) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 6), 0)
      }
      return G__14408__delegate.call(this, m, p__14397, f, a, b, c, args)
    };
    G__14408.cljs$lang$maxFixedArity = 6;
    G__14408.cljs$lang$applyTo = function(arglist__14409) {
      var m = cljs.core.first(arglist__14409);
      arglist__14409 = cljs.core.next(arglist__14409);
      var p__14397 = cljs.core.first(arglist__14409);
      arglist__14409 = cljs.core.next(arglist__14409);
      var f = cljs.core.first(arglist__14409);
      arglist__14409 = cljs.core.next(arglist__14409);
      var a = cljs.core.first(arglist__14409);
      arglist__14409 = cljs.core.next(arglist__14409);
      var b = cljs.core.first(arglist__14409);
      arglist__14409 = cljs.core.next(arglist__14409);
      var c = cljs.core.first(arglist__14409);
      var args = cljs.core.rest(arglist__14409);
      return G__14408__delegate(m, p__14397, f, a, b, c, args)
    };
    G__14408.cljs$core$IFn$_invoke$arity$variadic = G__14408__delegate;
    return G__14408
  }();
  update_in = function(m, p__14397, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__14397, f);
      case 4:
        return update_in__4.call(this, m, p__14397, f, a);
      case 5:
        return update_in__5.call(this, m, p__14397, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__14397, f, a, b, c);
      default:
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__14397, f, a, b, c, cljs.core.array_seq(arguments, 6))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/VectorNode")
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr)
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, new Array(32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if(cnt < 32) {
    return 0
  }else {
    return cnt - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while(true) {
    if(ll === 0) {
      return ret
    }else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node.call(null, edit);
      var _ = cljs.core.pv_aset.call(null, r, 0, embed);
      var G__14410 = ll - 5;
      var G__14411 = r;
      ll = G__14410;
      ret = G__14411;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node.call(null, parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret, subidx, tailnode);
    return ret
  }else {
    var child = cljs.core.pv_aget.call(null, parent, subidx);
    if(!(child == null)) {
      var node_to_insert = push_tail.call(null, pv, level - 5, child, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }else {
      var node_to_insert = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret, subidx, node_to_insert);
      return ret
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.array_for = function array_for(pv, i) {
  if(0 <= i && i < pv.cnt) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node = pv.root;
      var level = pv.shift;
      while(true) {
        if(level > 0) {
          var G__14412 = cljs.core.pv_aget.call(null, node, i >>> level & 31);
          var G__14413 = level - 5;
          node = G__14412;
          level = G__14413;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, pv.cnt)
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret, i & 31, val);
    return ret
  }else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret, subidx, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx), i, val));
    return ret
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      var ret = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret, subidx, new_child);
      return ret
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var ret = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret, subidx, null);
        return ret
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.call(null, self__.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= k && k < self__.cnt) {
    if(cljs.core.tail_off.call(null, coll__$1) <= k) {
      var new_tail = self__.tail.slice();
      new_tail[k & 31] = v;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null)
    }else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc.call(null, coll__$1, self__.shift, self__.root, k, v), self__.tail, null)
    }
  }else {
    if(k === self__.cnt) {
      return cljs.core._conj.call(null, coll__$1, v)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14415 = null;
  var G__14415__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14415__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14415 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14415__2.call(this, self__, k);
      case 3:
        return G__14415__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14415
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14414) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14414.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var step_init = [0, init];
  var i = 0;
  while(true) {
    if(i < self__.cnt) {
      var arr = cljs.core.array_for.call(null, v__$1, i);
      var len = arr.length;
      var init__$1 = function() {
        var j = 0;
        var init__$1 = step_init[1];
        while(true) {
          if(j < len) {
            var init__$2 = f.call(null, init__$1, j + i, arr[j]);
            if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
              return init__$2
            }else {
              var G__14416 = j + 1;
              var G__14417 = init__$2;
              j = G__14416;
              init__$1 = G__14417;
              continue
            }
          }else {
            step_init[0] = len;
            step_init[1] = init__$1;
            return init__$1
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
        return cljs.core.deref.call(null, init__$1)
      }else {
        var G__14418 = i + step_init[0];
        i = G__14418;
        continue
      }
    }else {
      return step_init[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt - cljs.core.tail_off.call(null, coll__$1) < 32) {
    var new_tail = self__.tail.slice();
    new_tail.push(o);
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null)
  }else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r, 0, self__.root);
      cljs.core.pv_aset.call(null, n_r, 1, cljs.core.new_path.call(null, null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r
    }() : cljs.core.push_tail.call(null, coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.call(null, v__$1, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    return null
  }else {
    if(self__.cnt < 32) {
      return cljs.core.array_seq.call(null, self__.tail)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.chunked_seq.call(null, coll__$1, 0, 0)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core._nth.call(null, coll__$1, self__.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
    }else {
      if(1 < self__.cnt - cljs.core.tail_off.call(null, coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_tail = cljs.core.array_for.call(null, coll__$1, self__.cnt - 2);
          var nr = cljs.core.pop_tail.call(null, coll__$1, self__.shift, self__.root);
          var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
          var cnt_1 = self__.cnt - 1;
          if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget.call(null, new_root, 0), new_tail, null)
          }else {
            return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash)
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, new Array(32));
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : xs.slice();
  if(l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null)
  }else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = cljs.core._as_transient.call(null, v);
    while(true) {
      if(i < l) {
        var G__14419 = i + 1;
        var G__14420 = cljs.core.conj_BANG_.call(null, out, xs__$1[i]);
        i = G__14419;
        out = G__14420;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(arguments.length > 0) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__14421) {
    var args = cljs.core.seq(arglist__14421);
    return vector__delegate(args)
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32243948;
  this.cljs$lang$protocol_mask$partition1$ = 1536
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return null
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_next.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if(s == null) {
      return cljs.core.List.EMPTY
    }else {
      return s
    }
  }else {
    return cljs.core._chunked_rest.call(null, coll__$1)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return null
  }else {
    return s
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? cljs.core.chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if(s == null) {
    return cljs.core.List.EMPTY
  }else {
    return s
  }
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash)
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for.call(null, vec, i), i, off, null, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + key;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core.assoc.call(null, self__.v, v_pos, val), self__.start, function() {
    var x__3433__auto__ = self__.end;
    var y__3434__auto__ = v_pos + 1;
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  }(), null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__14423 = null;
  var G__14423__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
  };
  var G__14423__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
  };
  G__14423 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14423__2.call(this, self__, k);
      case 3:
        return G__14423__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14423
}();
cljs.core.Subvec.prototype.apply = function(self__, args14422) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14422.slice()))
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k)
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, self__.meta, cljs.core._assoc_n.call(null, self__.v, self__.end, o), self__.start, self__.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, coll__$1, f, start__$1)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function subvec_seq(i) {
    if(i === self__.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, self__.v, i), new cljs.core.LazySeq(null, function() {
        return subvec_seq.call(null, i + 1)
      }, null, null))
    }
  };
  return subvec_seq.call(null, self__.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, self__.v, self__.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return cljs.core.build_subvec.call(null, self__.meta, self__.v, self__.start, self__.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._assoc.call(null, coll__$1, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds.call(null, n, self__.end - self__.start)
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n)
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(n < 0 || self__.end <= self__.start + n) {
    return not_found
  }else {
    return cljs.core._nth.call(null, self__.v, self__.start + n, not_found)
  }
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta)
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash)
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while(true) {
    if(v instanceof cljs.core.Subvec) {
      var G__14424 = meta;
      var G__14425 = v.v;
      var G__14426 = v.start + start;
      var G__14427 = v.start + end;
      var G__14428 = __hash;
      meta = G__14424;
      v = G__14425;
      start = G__14426;
      end = G__14427;
      __hash = G__14428;
      continue
    }else {
      var c = cljs.core.count.call(null, v);
      if(start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      }else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash)
    }
    break
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec.call(null, null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = new Array(32);
  cljs.core.array_copy.call(null, tl, 0, ret, 0, tl.length);
  return ret
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget.call(null, ret, subidx);
    if(!(child == null)) {
      return tv_push_tail.call(null, tv, level - 5, child, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx));
    if(new_child == null && subidx === 0) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__$1, subidx, new_child);
      return node__$1
    }
  }else {
    if(subidx === 0) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        cljs.core.pv_aset.call(null, node__$1, subidx, null);
        return node__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(0 <= i && i < tv.cnt) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root = tv.root;
      var node = root;
      var level = tv.shift;
      while(true) {
        if(level > 0) {
          var G__14429 = cljs.core.tv_ensure_editable.call(null, root.edit, cljs.core.pv_aget.call(null, node, i >>> level & 31));
          var G__14430 = level - 5;
          node = G__14429;
          level = G__14430;
          continue
        }else {
          return node.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14432 = null;
  var G__14432__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14432__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14432 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14432__2.call(this, self__, k);
      case 3:
        return G__14432__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14432
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14431) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14431.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.call(null, coll__$1, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return cljs.core.array_for.call(null, coll__$1, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(0 <= n && n < self__.cnt) {
    return cljs.core._nth.call(null, coll__$1, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.root.edit) {
    return self__.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(0 <= n && n < self__.cnt) {
      if(cljs.core.tail_off.call(null, tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1
      }else {
        var new_root = function go(level, node) {
          var node__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__$1, n & 31, val);
            return node__$1
          }else {
            var subidx = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__$1, subidx, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__$1, subidx)));
            return node__$1
          }
        }.call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1
      }
    }else {
      if(n === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, tcoll__$1, val)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1
      }else {
        if((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var new_tail = cljs.core.editable_array_for.call(null, tcoll__$1, self__.cnt - 2);
            var new_root = function() {
              var nr = cljs.core.tv_pop_tail.call(null, tcoll__$1, self__.shift, self__.root);
              if(!(nr == null)) {
                return nr
              }else {
                return new cljs.core.VectorNode(self__.root.edit, new Array(32))
              }
            }();
            if(5 < self__.shift && cljs.core.pv_aget.call(null, new_root, 1) == null) {
              var new_root__$1 = cljs.core.tv_ensure_editable.call(null, self__.root.edit, cljs.core.pv_aget.call(null, new_root, 0));
              self__.root = new_root__$1;
              self__.shift = self__.shift - 5;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }else {
              self__.root = new_root;
              self__.cnt = self__.cnt - 1;
              self__.tail = new_tail;
              return tcoll__$1
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, tcoll__$1, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    if(self__.cnt - cljs.core.tail_off.call(null, tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1
    }else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = new Array(32);
      new_tail[0] = o;
      self__.tail = new_tail;
      if(self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = new Array(32);
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path.call(null, self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }else {
        var new_root = cljs.core.tv_push_tail.call(null, tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off.call(null, tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail)
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
  if(temp__4090__auto__) {
    var f1 = temp__4090__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null)
  }else {
    if(self__.rear == null) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash)
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.call(null, function() {
      var or__3128__auto__ = self__.rear;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.call(null, self__.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq.call(null, self__.rear);
  if(cljs.core.truth_(function() {
    var or__3128__auto__ = self__.front;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return rear__$1
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq.call(null, rear__$1), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(self__.front)) {
    var temp__4090__auto__ = cljs.core.next.call(null, self__.front);
    if(temp__4090__auto__) {
      var f1 = temp__4090__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null)
    }else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq.call(null, self__.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll__$1
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll__$1))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash)
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core.get.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while(true) {
    if(i < len) {
      if(k === array[i]) {
        return i
      }else {
        var G__14433 = i + incr;
        i = G__14433;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash.call(null, a);
  var b__$1 = cljs.core.hash.call(null, b);
  if(a__$1 < b__$1) {
    return-1
  }else {
    if(a__$1 > b__$1) {
      return 1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta.call(null, m);
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var k__$1 = ks[i];
      var G__14434 = i + 1;
      var G__14435 = cljs.core.assoc_BANG_.call(null, out, k__$1, so[k__$1]);
      i = G__14434;
      out = G__14435;
      continue
    }else {
      return cljs.core.with_meta.call(null, cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out, k, v)), mm)
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_14436 = 0;
  while(true) {
    if(i_14436 < l) {
      var k_14437 = ks[i_14436];
      new_obj[k_14437] = obj[k_14437];
      var G__14438 = i_14436 + 1;
      i_14436 = G__14438;
      continue
    }else {
    }
    break
  }
  return new_obj
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll__$1))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return self__.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k)) {
    if(self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null)
      }else {
        var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
        var new_keys = self__.keys.slice();
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll__$1, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14441 = null;
  var G__14441__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14441__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14441 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14441__2.call(this, self__, k);
      case 3:
        return G__14441__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14441
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14440) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14440.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while(true) {
    if(cljs.core.seq.call(null, keys__$1)) {
      var k = cljs.core.first.call(null, keys__$1);
      var init__$2 = f.call(null, init__$1, k, self__.strobj[k]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14442 = cljs.core.rest.call(null, keys__$1);
        var G__14443 = init__$2;
        keys__$1 = G__14442;
        init__$1 = G__14443;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__14439_SHARP_) {
      return cljs.core.vector.call(null, p1__14439_SHARP_, self__.strobj[p1__14439_SHARP_])
    }, self__.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, self__.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(goog.isString(k) && !(cljs.core.scan_array.call(null, 1, k, self__.keys) == null)) {
    var new_keys = self__.keys.slice();
    var new_strobj = cljs.core.obj_clone.call(null, self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array.call(null, 1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null)
  }else {
    return coll__$1
  }
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash)
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(arr[i] == null) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14444 = i + 2;
          i = G__14444;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14445 = i + 2;
          i = G__14445;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str
      }()) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14446 = i + 2;
          i = G__14446;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(k === arr[i]) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14447 = i + 2;
          i = G__14447;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while(true) {
    if(len <= i) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, k, arr[i])) {
        return i
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var G__14448 = i + 2;
          i = G__14448;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if(k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_.call(null, arr, m, k)
  }else {
    if(goog.isString(k) || typeof k === "number") {
      return cljs.core.array_map_index_of_identical_QMARK_.call(null, arr, m, k)
    }else {
      if(k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_.call(null, arr, m, k)
      }else {
        if(k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_.call(null, arr, m, k)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.array_map_index_of_equiv_QMARK_.call(null, arr, m, k)
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14449 = 0;
  while(true) {
    if(i_14449 < l) {
      narr[i_14449] = arr[i_14449];
      var G__14450 = i_14449 + 1;
      i_14449 = G__14450;
      continue
    }else {
    }
    break
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentArrayMapSeq")
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.arr[self__.i], self__.arr[self__.i + 1]], true)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if(i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, self__.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    return not_found
  }else {
    return self__.arr[idx + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx === -1) {
    if(self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv.call(null, coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null)
    }else {
      return cljs.core._with_meta.call(null, cljs.core._assoc.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta)
    }
  }else {
    if(v === self__.arr[idx + 1]) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var arr__$1 = function() {
          var G__14452 = self__.arr.slice();
          G__14452[idx + 1] = v;
          return G__14452
        }();
        return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of.call(null, coll__$1, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14453 = null;
  var G__14453__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14453__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14453 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14453__2.call(this, self__, k);
      case 3:
        return G__14453__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14453
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14451) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14451.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = f.call(null, init__$1, self__.arr[i], self__.arr[i + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14454 = i + 2;
        var G__14455 = init__$2;
        i = G__14454;
        init__$1 = G__14455;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq.call(null, self__.arr, 0, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, self__.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of.call(null, coll__$1, k);
  if(idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if(new_len === 0) {
      return cljs.core._empty.call(null, coll__$1)
    }else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while(true) {
        if(s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null)
        }else {
          if(cljs.core._EQ_.call(null, k, self__.arr[s])) {
            var G__14456 = s + 2;
            var G__14457 = d;
            s = G__14456;
            d = G__14457;
            continue
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              new_arr[d] = self__.arr[s];
              new_arr[d + 1] = self__.arr[s + 1];
              var G__14458 = s + 2;
              var G__14459 = d + 2;
              s = G__14458;
              d = G__14459;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll__$1
  }
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash)
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : arr.slice();
  var cnt = arr__$1.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null)
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14460_14462 = self__.arr;
      G__14460_14462.pop();
      G__14460_14462.pop();
      self__.len = self__.len - 2
    }else {
    }
    return tcoll__$1
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, key);
    if(idx === -1) {
      if(self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val)
      }
    }else {
      if(val === self__.arr[idx + 1]) {
        return tcoll__$1
      }else {
        self__.arr[idx + 1] = val;
        return tcoll__$1
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    if(function() {
      var G__14461 = o;
      if(G__14461) {
        var bit__3746__auto__ = G__14461.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3746__auto__ || G__14461.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__14461.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14461)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14461)
      }
    }()) {
      return cljs.core._assoc_BANG_.call(null, tcoll__$1, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$2 = tcoll__$1;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__14463 = cljs.core.next.call(null, es);
          var G__14464 = cljs.core._assoc_BANG_.call(null, tcoll__$2, cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__14463;
          tcoll__$2 = G__14464;
          continue
        }else {
          return tcoll__$2
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, self__.len, 2), self__.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of.call(null, tcoll__$1, k);
    if(idx === -1) {
      return not_found
    }else {
      return self__.arr[idx + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot.call(null, self__.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr)
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while(true) {
    if(i < len) {
      var G__14465 = cljs.core.assoc_BANG_.call(null, out, arr[i], arr[i + 1]);
      var G__14466 = i + 2;
      out = G__14465;
      i = G__14466;
      continue
    }else {
      return out
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/Box")
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val)
};
cljs.core.key_test = function key_test(key, other) {
  if(key === other) {
    return true
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, key, other)) {
      return true
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core._EQ_.call(null, key, other)
      }else {
        return null
      }
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__14469 = arr.slice();
    G__14469[i] = a;
    return G__14469
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__14470 = arr.slice();
    G__14470[i] = a;
    G__14470[j] = b;
    return G__14470
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if(!(k == null)) {
          return f.call(null, init__$1, k, arr[i + 1])
        }else {
          var node = arr[i + 1];
          if(!(node == null)) {
            return node.kv_reduce(f, init__$1)
          }else {
            return init__$1
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
        return cljs.core.deref.call(null, init__$2)
      }else {
        var G__14471 = i + 2;
        var G__14472 = init__$2;
        i = G__14471;
        init__$1 = G__14472;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if(self__.bitmap === bit) {
    return null
  }else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy.call(null, earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable
    }else {
      if(n >= 16) {
        var nodes = new Array(32);
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14473 = 0;
        var j_14474 = 0;
        while(true) {
          if(i_14473 < 32) {
            if((self__.bitmap >>> i_14473 & 1) === 0) {
              var G__14475 = i_14473 + 1;
              var G__14476 = j_14474;
              i_14473 = G__14475;
              j_14474 = G__14476;
              continue
            }else {
              nodes[i_14473] = !(self__.arr[j_14474] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash.call(null, self__.arr[j_14474]), self__.arr[j_14474], self__.arr[j_14474 + 1], added_leaf_QMARK_) : self__.arr[j_14474 + 1];
              var G__14477 = i_14473 + 1;
              var G__14478 = j_14474 + 2;
              i_14473 = G__14477;
              j_14474 = G__14478;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var new_arr = new Array(2 * (n + 4));
          cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
          new_arr[2 * idx] = key;
          new_arr[2 * idx + 1] = val;
          cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
          added_leaf_QMARK_.val = true;
          var editable = inode.ensure_editable(edit__$1);
          editable.arr = new_arr;
          editable.bitmap = editable.bitmap | bit;
          return editable
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, val)
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * idx + 1, n)
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return inode.edit_and_remove_pair(edit__$1, bit, idx)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil, val_or_node], true)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return inode
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if(n === val_or_node) {
        return inode
      }else {
        if(!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
        }else {
          if(self__.bitmap === bit) {
            return null
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair.call(null, self__.arr, idx))
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return inode
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
  if((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count.call(null, self__.bitmap);
    if(n >= 16) {
      var nodes = new Array(32);
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14479 = 0;
      var j_14480 = 0;
      while(true) {
        if(i_14479 < 32) {
          if((self__.bitmap >>> i_14479 & 1) === 0) {
            var G__14481 = i_14479 + 1;
            var G__14482 = j_14480;
            i_14479 = G__14481;
            j_14480 = G__14482;
            continue
          }else {
            nodes[i_14479] = !(self__.arr[j_14480] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, self__.arr[j_14480]), self__.arr[j_14480], self__.arr[j_14480 + 1], added_leaf_QMARK_) : self__.arr[j_14480 + 1];
            var G__14483 = i_14479 + 1;
            var G__14484 = j_14480 + 2;
            i_14479 = G__14483;
            j_14480 = G__14484;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes)
    }else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy.call(null, self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr)
    }
  }else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n === val_or_node) {
        return inode
      }else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, n))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        if(val === val_or_node) {
          return inode
        }else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx + 1, val))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.call(null, self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil, val_or_node, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if((self__.bitmap & bit) === 0) {
    return not_found
  }else {
    var idx = cljs.core.bitmap_indexed_node_index.call(null, self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if(key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil)) {
        return val_or_node
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr)
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, new Array(0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = 2 * (array_node.cnt - 1);
  var new_arr = new Array(len);
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while(true) {
    if(i < len) {
      if(!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__14485 = i + 1;
        var G__14486 = j + 2;
        var G__14487 = bitmap | 1 << i;
        i = G__14485;
        j = G__14486;
        bitmap = G__14487;
        continue
      }else {
        var G__14488 = i + 1;
        var G__14489 = j;
        var G__14490 = bitmap;
        i = G__14488;
        j = G__14489;
        bitmap = G__14490;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable
  }else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.call(null, self__.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return inode
  }else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, edit__$1, idx)
        }else {
          var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.edit_and_set.call(null, inode, edit__$1, idx, n)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    return new cljs.core.ArrayNode(e, self__.cnt, self__.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while(true) {
    if(i < len) {
      var node = self__.arr[i];
      if(!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
          return cljs.core.deref.call(null, init__$2)
        }else {
          var G__14491 = i + 1;
          var G__14492 = init__$2;
          i = G__14491;
          init__$1 = G__14492;
          continue
        }
      }else {
        var G__14493 = i + 1;
        var G__14494 = init__$1;
        i = G__14493;
        init__$1 = G__14494;
        continue
      }
    }else {
      return init__$1
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if(n === node) {
      return inode
    }else {
      if(n == null) {
        if(self__.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode, null, idx)
        }else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
        }else {
          return null
        }
      }
    }
  }else {
    return inode
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.call(null, self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n === node) {
      return inode
    }else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx, n))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if(!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr)
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while(true) {
    if(i < lim) {
      if(cljs.core.key_test.call(null, key, arr[i])) {
        return i
      }else {
        var G__14495 = i + 2;
        i = G__14495;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      if(self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.call(null, inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable
      }else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr)
      }
    }else {
      if(self__.arr[idx + 1] === val) {
        return inode
      }else {
        return cljs.core.edit_and_set.call(null, inode, edit__$1, idx + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.call(null, self__.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    removed_leaf_QMARK_[0] = true;
    if(self__.cnt === 1) {
      return null
    }else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    return inode
  }else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce.call(null, self__.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return cljs.core.PersistentVector.fromArray([self__.arr[idx], self__.arr[idx + 1]], true)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx === -1) {
    return inode
  }else {
    if(self__.cnt === 1) {
      return null
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair.call(null, self__.arr, cljs.core.quot.call(null, idx, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if(hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
    if(idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy.call(null, self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr)
    }else {
      if(cljs.core._EQ_.call(null, self__.arr[idx], val)) {
        return inode
      }else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.call(null, self__.arr, idx + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index.call(null, self__.arr, self__.cnt, key);
  if(idx < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, self__.arr[idx])) {
      return self__.arr[idx + 1]
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if(e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode
  }else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array)
  }
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr)
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash.call(null, key1);
    if(key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.PersistentVector.fromArray([self__.nodes[self__.i], self__.nodes[self__.i + 1]], true)
  }else {
    return cljs.core.first.call(null, self__.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.s == null) {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          if(!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null)
          }else {
            var temp__4090__auto__ = nodes[j + 1];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var node = temp__4090__auto__;
              var temp__4090__auto____$1 = node.inode_seq();
              if(cljs.core.truth_(temp__4090__auto____$1)) {
                var node_seq = temp__4090__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null)
              }else {
                var G__14496 = j + 2;
                j = G__14496;
                continue
              }
            }else {
              var G__14497 = j + 2;
              j = G__14497;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first.call(null, self__.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.call(null, null, self__.nodes, self__.i, cljs.core.next.call(null, self__.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash)
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len = nodes.length;
      var j = i;
      while(true) {
        if(j < len) {
          var temp__4090__auto__ = nodes[j];
          if(cljs.core.truth_(temp__4090__auto__)) {
            var nj = temp__4090__auto__;
            var temp__4090__auto____$1 = nj.inode_seq();
            if(cljs.core.truth_(temp__4090__auto____$1)) {
              var ns = temp__4090__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null)
            }else {
              var G__14498 = j + 1;
              j = G__14498;
              continue
            }
          }else {
            var G__14499 = j + 1;
            j = G__14499;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
    if(new_root === self__.root) {
      return coll__$1
    }else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    return self__.has_nil_QMARK_
  }else {
    if(self__.root == null) {
      return false
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return!(self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14501 = null;
  var G__14501__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14501__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14501 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14501__2.call(this, self__, k);
      case 3:
        return G__14501__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14501
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args14500) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14500.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.call(null, init, null, self__.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    if(!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return init__$1
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if(self__.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, self__.nil_val], true), s)
    }else {
      return s
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, self__.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null)
    }else {
      return coll__$1
    }
  }else {
    if(self__.root == null) {
      return coll__$1
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var new_root = self__.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root === self__.root) {
          return coll__$1
        }else {
          return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash)
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i < len) {
      var G__14502 = i + 1;
      var G__14503 = cljs.core.assoc_BANG_.call(null, out, ks[i], vs[i]);
      i = G__14502;
      out = G__14503;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return null
    }
  }else {
    if(self__.root == null) {
      return null
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(k == null) {
    if(self__.has_nil_QMARK_) {
      return self__.nil_val
    }else {
      return not_found
    }
  }else {
    if(self__.root == null) {
      return not_found
    }else {
      return self__.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.edit) {
    return self__.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(function() {
      var G__14504 = o;
      if(G__14504) {
        var bit__3746__auto__ = G__14504.cljs$lang$protocol_mask$partition0$ & 2048;
        if(bit__3746__auto__ || G__14504.cljs$core$IMapEntry$) {
          return true
        }else {
          if(!G__14504.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14504)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMapEntry, G__14504)
      }
    }()) {
      return tcoll.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es = cljs.core.seq.call(null, o);
      var tcoll__$1 = tcoll;
      while(true) {
        var temp__4090__auto__ = cljs.core.first.call(null, es);
        if(cljs.core.truth_(temp__4090__auto__)) {
          var e = temp__4090__auto__;
          var G__14505 = cljs.core.next.call(null, es);
          var G__14506 = tcoll__$1.assoc_BANG_(cljs.core.key.call(null, e), cljs.core.val.call(null, e));
          es = G__14505;
          tcoll__$1 = G__14506;
          continue
        }else {
          return tcoll__$1
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.nil_val === v) {
      }else {
        self__.nil_val = v
      }
      if(self__.has_nil_QMARK_) {
      }else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true
      }
      return tcoll
    }else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK_);
      if(node === self__.root) {
      }else {
        self__.root = node
      }
      if(added_leaf_QMARK_.val) {
        self__.count = self__.count + 1
      }else {
      }
      return tcoll
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    if(k == null) {
      if(self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll
      }else {
        return tcoll
      }
    }else {
      if(self__.root == null) {
        return tcoll
      }else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK_);
        if(node === self__.root) {
        }else {
          self__.root = node
        }
        if(cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1
        }else {
        }
        return tcoll
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if(self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val)
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while(true) {
    if(!(t == null)) {
      var G__14507 = ascending_QMARK_ ? t.left : t.right;
      var G__14508 = cljs.core.conj.call(null, stack__$1, t);
      t = G__14507;
      stack__$1 = G__14508;
      continue
    }else {
      return stack__$1
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll__$1)) + 1
  }else {
    return self__.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek.call(null, self__.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first.call(null, self__.stack);
  var next_stack = cljs.core.tree_map_seq_push.call(null, self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next.call(null, self__.stack), self__.ascending_QMARK_);
  if(!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash)
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(ins instanceof cljs.core.RedNode) {
    if(ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__$1)) {
    return cljs.core.deref.call(null, init__$1)
  }else {
    var init__$2 = f.call(null, init__$1, node.key, node.val);
    if(cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2)
    }else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__$2) : init__$2;
      if(cljs.core.reduced_QMARK_.call(null, init__$3)) {
        return cljs.core.deref.call(null, init__$3)
      }else {
        return init__$3
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14510 = null;
  var G__14510__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14510__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14510 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14510__2.call(this, self__, k);
      case 3:
        return G__14510__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14510
}();
cljs.core.BlackNode.prototype.apply = function(self__, args14509) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14509.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node)
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del.call(null, self__.key, self__.val, self__.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del.call(null, self__.key, self__.val, del, self__.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash)
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.call(null, node__$1, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__14512 = null;
  var G__14512__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14512__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14512 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14512__2.call(this, self__, k);
      case 3:
        return G__14512__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14512
}();
cljs.core.RedNode.prototype.apply = function(self__, args14511) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14511.slice()))
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key, self__.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce.call(null, node, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null)
  }else {
    if(self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if(self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null)
  }else {
    if(self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.call(null, node__$1, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.fromArray([self__.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([self__.key, self__.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if(n === 0) {
    return self__.key
  }else {
    if(n === 1) {
      return self__.val
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash)
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return null
    }else {
      if(c < 0) {
        var ins = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins == null)) {
          return tree.add_left(ins)
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var ins = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins == null)) {
            return tree.add_right(ins)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(left instanceof cljs.core.RedNode) {
        if(right instanceof cljs.core.RedNode) {
          var app = tree_map_append.call(null, left.right, right.left);
          if(app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var app = tree_map_append.call(null, left.right, right.left);
            if(app instanceof cljs.core.RedNode) {
              return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c = comp.call(null, k, tree.key);
    if(c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c < 0) {
        var del = tree_map_remove.call(null, comp, tree.left, k, found);
        if(!(del == null) || !(found[0] == null)) {
          if(tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          var del = tree_map_remove.call(null, comp, tree.right, k, found);
          if(!(del == null) || !(found[0] == null)) {
            if(tree.right instanceof cljs.core.BlackNode) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.call(null, k, tk);
  if(c === 0) {
    return tree.replace(tk, v, tree.left, tree.right)
  }else {
    if(c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return tree.replace(tk, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if(!(n == null)) {
    return n.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add.call(null, self__.comp, self__.tree, k, v, found);
  if(t == null) {
    var found_node = cljs.core.nth.call(null, found, 0);
    if(cljs.core._EQ_.call(null, v, found_node.val)) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace.call(null, self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14514 = null;
  var G__14514__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14514__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14514 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14514__2.call(this, self__, k);
      case 3:
        return G__14514__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14514
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args14513) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14513.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if(!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, self__.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return cljs.core._assoc.call(null, coll__$1, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll__$1, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, false, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while(true) {
    if(!(t == null)) {
      var c = self__.comp.call(null, k, t.key);
      if(c === 0) {
        return t
      }else {
        if(c < 0) {
          var G__14515 = t.left;
          t = G__14515;
          continue
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            var G__14516 = t.right;
            t = G__14516;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, ascending_QMARK_, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while(true) {
      if(!(t == null)) {
        var c = self__.comp.call(null, k, t.key);
        if(c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack, t), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c < 0) {
              var G__14517 = cljs.core.conj.call(null, stack, t);
              var G__14518 = t.left;
              stack = G__14517;
              t = G__14518;
              continue
            }else {
              var G__14519 = stack;
              var G__14520 = t.right;
              stack = G__14519;
              t = G__14520;
              continue
            }
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              if(c > 0) {
                var G__14521 = cljs.core.conj.call(null, stack, t);
                var G__14522 = t.right;
                stack = G__14521;
                t = G__14522;
                continue
              }else {
                var G__14523 = stack;
                var G__14524 = t.left;
                stack = G__14523;
                t = G__14524;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack == null) {
          return null
        }else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null)
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(self__.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, self__.tree, true, self__.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map.call(null, coll__$1, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, self__.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove.call(null, self__.comp, self__.tree, k, found);
  if(t == null) {
    if(cljs.core.nth.call(null, found, 0) == null) {
      return coll__$1
    }else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null)
  }
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash)
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in$) {
        var G__14525 = cljs.core.nnext.call(null, in$);
        var G__14526 = cljs.core.assoc_BANG_.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14525;
        out = G__14526;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14527) {
    var keyvals = cljs.core.seq(arglist__14527);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14528) {
    var keyvals = cljs.core.seq(arglist__14528);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = {};
    var kvs = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs) {
        ks.push(cljs.core.first.call(null, kvs));
        obj[cljs.core.first.call(null, kvs)] = cljs.core.second.call(null, kvs);
        var G__14529 = cljs.core.nnext.call(null, kvs);
        kvs = G__14529;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks, obj)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14530) {
    var keyvals = cljs.core.seq(arglist__14530);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in$) {
        var G__14531 = cljs.core.nnext.call(null, in$);
        var G__14532 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14531;
        out = G__14532;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(arguments.length > 0) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14533) {
    var keyvals = cljs.core.seq(arglist__14533);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq.call(null, keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator.call(null, comparator), null, 0, null, 0);
    while(true) {
      if(in$) {
        var G__14534 = cljs.core.nnext.call(null, in$);
        var G__14535 = cljs.core.assoc.call(null, out, cljs.core.first.call(null, in$), cljs.core.second.call(null, in$));
        in$ = G__14534;
        out = G__14535;
        continue
      }else {
        return out
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(arguments.length > 1) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14536) {
    var comparator = cljs.core.first(arglist__14536);
    var keyvals = cljs.core.rest(arglist__14536);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/KeySeq")
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14537 = self__.mseq;
    if(G__14537) {
      var bit__3746__auto__ = G__14537.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14537.cljs$core$INext$) {
        return true
      }else {
        if(!G__14537.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14537)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14537)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._key.call(null, me)
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14538 = self__.mseq;
    if(G__14538) {
      var bit__3746__auto__ = G__14538.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14538.cljs$core$INext$) {
        return true
      }else {
        if(!G__14538.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14538)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14538)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta)
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta)
};
cljs.core.keys = function keys(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.KeySeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/ValSeq")
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_coll.call(null, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14539 = self__.mseq;
    if(G__14539) {
      var bit__3746__auto__ = G__14539.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14539.cljs$core$INext$) {
        return true
      }else {
        if(!G__14539.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14539)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14539)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(nseq == null) {
    return null
  }else {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1)
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.call(null, f, start, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = cljs.core._first.call(null, self__.mseq);
  return cljs.core._val.call(null, me)
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14540 = self__.mseq;
    if(G__14540) {
      var bit__3746__auto__ = G__14540.cljs$lang$protocol_mask$partition0$ & 128;
      if(bit__3746__auto__ || G__14540.cljs$core$INext$) {
        return true
      }else {
        if(!G__14540.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14540)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.INext, G__14540)
    }
  }() ? cljs.core._next.call(null, self__.mseq) : cljs.core.next.call(null, self__.mseq);
  if(!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other)
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta)
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__._meta)
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta)
};
cljs.core.vals = function vals(hash_map) {
  var temp__4092__auto__ = cljs.core.seq.call(null, hash_map);
  if(temp__4092__auto__) {
    var mseq = temp__4092__auto__;
    return new cljs.core.ValSeq(mseq, null)
  }else {
    return null
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__14541_SHARP_, p2__14542_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3128__auto__ = p1__14541_SHARP_;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return cljs.core.PersistentArrayMap.EMPTY
          }
        }(), p2__14542_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(arguments.length > 0) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14543) {
    var maps = cljs.core.seq(arglist__14543);
    return merge__delegate(maps)
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first.call(null, e);
        var v = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k)) {
          return cljs.core.assoc.call(null, m, k, f.call(null, cljs.core.get.call(null, m, k), v))
        }else {
          return cljs.core.assoc.call(null, m, k, v)
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.call(null, merge_entry, function() {
            var or__3128__auto__ = m1;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return cljs.core.PersistentArrayMap.EMPTY
            }
          }(), cljs.core.seq.call(null, m2))
        }
      }(merge_entry);
      return cljs.core.reduce.call(null, merge2, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(arguments.length > 1) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14544) {
    var f = cljs.core.first(arglist__14544);
    var maps = cljs.core.rest(arglist__14544);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys) {
      var key = cljs.core.first.call(null, keys);
      var entry = cljs.core.get.call(null, map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789));
      var G__14545 = cljs.core.not_EQ_.call(null, entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", 4155500789)) ? cljs.core.assoc.call(null, ret, key, entry) : ret;
      var G__14546 = cljs.core.next.call(null, keys);
      ret = G__14545;
      keys = G__14546;
      continue
    }else {
      return ret
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 4;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient.call(null, self__.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, self__.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14549 = null;
  var G__14549__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14549__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14549 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14549__2.call(this, self__, k);
      case 3:
        return G__14549__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14549
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14548) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14548.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.call(null, self__.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc.call(null, self__.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count.call(null, self__.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__14547_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__14547_SHARP_)
  }, other)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash)
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, 0);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if(len / 2 <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : items.slice();
    return new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.fromArray.call(null, arr, true), null)
  }else {
    var i = 0;
    var out = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < len) {
        var G__14550 = i + 2;
        var G__14551 = cljs.core.conj_BANG_.call(null, out, items[i]);
        i = G__14550;
        out = G__14551;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out)
      }
      break
    }
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14553 = null;
  var G__14553__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__14553__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__14553 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14553__2.call(this, self__, k);
      case 3:
        return G__14553__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14553
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14552) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14552.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if(cljs.core._lookup.call(null, self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return k
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.call(null, tcoll__$1, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if(cljs.core._lookup.call(null, self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count.call(null, self__.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.call(null, self__.transient_map, v);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.call(null, self__.transient_map, o, null);
  return tcoll__$1
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, self__.transient_map), null)
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map)
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_iset.call(null, coll__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.call(null, coll__$1, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if(!(n == null)) {
    return n.key
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14556 = null;
  var G__14556__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
  };
  var G__14556__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
  };
  G__14556 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14556__2.call(this, self__, k);
      case 3:
        return G__14556__3.call(this, self__, k, not_found)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  return G__14556
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14555) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(args14555.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.call(null, self__.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if(cljs.core.count.call(null, self__.tree_map) > 0) {
    return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, self__.tree_map))
  }else {
    return null
  }
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, self__.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, self__.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.call(null, self__.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count.call(null, self__.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_.call(null, other) && cljs.core.count.call(null, coll__$1) === cljs.core.count.call(null, other) && cljs.core.every_QMARK_.call(null, function(p1__14554_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, coll__$1, p1__14554_SHARP_)
  }, other)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, self__.meta)
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash)
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, 0);
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__3885__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
    while(true) {
      if(i < a__3885__auto__.length) {
        var G__14557 = i + 1;
        var G__14558 = cljs.core._conj_BANG_.call(null, res, arr[i]);
        i = G__14557;
        res = G__14558;
        continue
      }else {
        return res
      }
      break
    }
  }();
  return cljs.core._persistent_BANG_.call(null, ret)
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq.call(null, coll);
  if(in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY
  }else {
    if(in$ instanceof cljs.core.IndexedSeq) {
      return cljs.core.set_from_indexed_seq.call(null, in$)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        var in$__$1 = in$;
        var out = cljs.core._as_transient.call(null, cljs.core.PersistentHashSet.EMPTY);
        while(true) {
          if(!(in$__$1 == null)) {
            var G__14559 = cljs.core._next.call(null, in$__$1);
            var G__14560 = cljs.core._conj_BANG_.call(null, out, cljs.core._first.call(null, in$__$1));
            in$__$1 = G__14559;
            out = G__14560;
            continue
          }else {
            return cljs.core._persistent_BANG_.call(null, out)
          }
          break
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__14561__delegate = function(keys) {
      return cljs.core.set.call(null, keys)
    };
    var G__14561 = function(var_args) {
      var keys = null;
      if(arguments.length > 0) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14561__delegate.call(this, keys)
    };
    G__14561.cljs$lang$maxFixedArity = 0;
    G__14561.cljs$lang$applyTo = function(arglist__14562) {
      var keys = cljs.core.seq(arglist__14562);
      return G__14561__delegate(keys)
    };
    G__14561.cljs$core$IFn$_invoke$arity$variadic = G__14561__delegate;
    return G__14561
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(arguments.length > 0) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14563) {
    var keys = cljs.core.seq(arglist__14563);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(arguments.length > 1) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14564) {
    var comparator = cljs.core.first(arglist__14564);
    var keys = cljs.core.rest(arglist__14564);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__14565_SHARP_) {
      var temp__4090__auto__ = cljs.core.find.call(null, smap, p1__14565_SHARP_);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var e = temp__4090__auto__;
        return cljs.core.second.call(null, e)
      }else {
        return p1__14565_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step = function step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__14572, seen__$1) {
        while(true) {
          var vec__14573 = p__14572;
          var f = cljs.core.nth.call(null, vec__14573, 0, null);
          var xs__$1 = vec__14573;
          var temp__4092__auto__ = cljs.core.seq.call(null, xs__$1);
          if(temp__4092__auto__) {
            var s = temp__4092__auto__;
            if(cljs.core.contains_QMARK_.call(null, seen__$1, f)) {
              var G__14574 = cljs.core.rest.call(null, s);
              var G__14575 = seen__$1;
              p__14572 = G__14574;
              seen__$1 = G__14575;
              continue
            }else {
              return cljs.core.cons.call(null, f, step.call(null, cljs.core.rest.call(null, s), cljs.core.conj.call(null, seen__$1, f)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null, null)
  };
  return step.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while(true) {
    if(cljs.core.next.call(null, s__$1)) {
      var G__14576 = cljs.core.conj.call(null, ret, cljs.core.first.call(null, s__$1));
      var G__14577 = cljs.core.next.call(null, s__$1);
      ret = G__14576;
      s__$1 = G__14577;
      continue
    }else {
      return cljs.core.seq.call(null, ret)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(function() {
    var G__14579 = x;
    if(G__14579) {
      var bit__3739__auto__ = G__14579.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3739__auto__ || G__14579.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._name.call(null, x)
  }else {
    if(typeof x === "string") {
      return x
    }else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var G__14581 = x;
    if(G__14581) {
      var bit__3739__auto__ = G__14581.cljs$lang$protocol_mask$partition1$ & 4096;
      if(bit__3739__auto__ || G__14581.cljs$core$INamed$) {
        return true
      }else {
        return false
      }
    }else {
      return false
    }
  }()) {
    return cljs.core._namespace.call(null, x)
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq.call(null, keys);
  var vs = cljs.core.seq.call(null, vals);
  while(true) {
    if(ks && vs) {
      var G__14582 = cljs.core.assoc_BANG_.call(null, map, cljs.core.first.call(null, ks), cljs.core.first.call(null, vs));
      var G__14583 = cljs.core.next.call(null, ks);
      var G__14584 = cljs.core.next.call(null, vs);
      map = G__14582;
      ks = G__14583;
      vs = G__14584;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, map)
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__14587__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14585_SHARP_, p2__14586_SHARP_) {
        return max_key.call(null, k, p1__14585_SHARP_, p2__14586_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__14587 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14587__delegate.call(this, k, x, y, more)
    };
    G__14587.cljs$lang$maxFixedArity = 3;
    G__14587.cljs$lang$applyTo = function(arglist__14588) {
      var k = cljs.core.first(arglist__14588);
      arglist__14588 = cljs.core.next(arglist__14588);
      var x = cljs.core.first(arglist__14588);
      arglist__14588 = cljs.core.next(arglist__14588);
      var y = cljs.core.first(arglist__14588);
      var more = cljs.core.rest(arglist__14588);
      return G__14587__delegate(k, x, y, more)
    };
    G__14587.cljs$core$IFn$_invoke$arity$variadic = G__14587__delegate;
    return G__14587
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__14591__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__14589_SHARP_, p2__14590_SHARP_) {
        return min_key.call(null, k, p1__14589_SHARP_, p2__14590_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__14591 = function(k, x, y, var_args) {
      var more = null;
      if(arguments.length > 3) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14591__delegate.call(this, k, x, y, more)
    };
    G__14591.cljs$lang$maxFixedArity = 3;
    G__14591.cljs$lang$applyTo = function(arglist__14592) {
      var k = cljs.core.first(arglist__14592);
      arglist__14592 = cljs.core.next(arglist__14592);
      var x = cljs.core.first(arglist__14592);
      arglist__14592 = cljs.core.next(arglist__14592);
      var y = cljs.core.first(arglist__14592);
      var more = cljs.core.rest(arglist__14592);
      return G__14591__delegate(k, x, y, more)
    };
    G__14591.cljs$core$IFn$_invoke$arity$variadic = G__14591__delegate;
    return G__14591
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s)))
      }else {
        return null
      }
    }, null, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_while.call(null, pred, cljs.core.rest.call(null, s)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator.call(null, sc);
    return test.call(null, comp.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, null, cljs.core._GT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__14595 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__14595, 0, null);
        var s = vec__14595;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__14596 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__14596, 0, null);
      var s = vec__14596;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, null, cljs.core._LT__EQ_, null], true).call(null, test))) {
      var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4092__auto__)) {
        var vec__14599 = temp__4092__auto__;
        var e = cljs.core.nth.call(null, vec__14599, 0, null);
        var s = vec__14599;
        if(cljs.core.truth_(include.call(null, e))) {
          return s
        }else {
          return cljs.core.next.call(null, s)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4092__auto__ = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var vec__14600 = temp__4092__auto__;
      var e = cljs.core.nth.call(null, vec__14600, 0, null);
      var s = vec__14600;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e)) ? s : cljs.core.next.call(null, s))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_coll.call(null, rng__$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }else {
    if(self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons.call(null, o, rng__$1)
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.call(null, rng__$1, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(self__.step > 0) {
    if(self__.start < self__.end) {
      return rng__$1
    }else {
      return null
    }
  }else {
    if(self__.start > self__.end) {
      return rng__$1
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(cljs.core.not.call(null, cljs.core._seq.call(null, rng__$1))) {
    return 0
  }else {
    return Math.ceil((self__.end - self__.start) / self__.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if(!(cljs.core._seq.call(null, rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential.call(null, rng__$1, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if(n < cljs.core._count.call(null, rng__$1)) {
    return self__.start + n * self__.step
  }else {
    if(self__.start > self__.end && self__.step === 0) {
      return self__.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta)
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash)
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s), take_nth.call(null, n, cljs.core.drop.call(null, n, s)))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4092__auto__ = cljs.core.seq.call(null, coll);
    if(temp__4092__auto__) {
      var s = temp__4092__auto__;
      var fst = cljs.core.first.call(null, s);
      var fv = f.call(null, fst);
      var run = cljs.core.cons.call(null, fst, cljs.core.take_while.call(null, function(fst, fv) {
        return function(p1__14601_SHARP_) {
          return cljs.core._EQ_.call(null, fv, f.call(null, p1__14601_SHARP_))
        }
      }(fst, fv), cljs.core.next.call(null, s)));
      return cljs.core.cons.call(null, run, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run), s))))
    }else {
      return null
    }
  }, null, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core.get.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4090__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4090__auto__) {
        var s = temp__4090__auto__;
        return reductions.call(null, f, cljs.core.first.call(null, s), cljs.core.rest.call(null, s))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, function() {
      var temp__4092__auto__ = cljs.core.seq.call(null, coll);
      if(temp__4092__auto__) {
        var s = temp__4092__auto__;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s)), cljs.core.rest.call(null, s))
      }else {
        return null
      }
    }, null, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14612 = null;
      var G__14612__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__14612__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__14612__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__14612__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__14612__4 = function() {
        var G__14613__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__14613 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14613__delegate.call(this, x, y, z, args)
        };
        G__14613.cljs$lang$maxFixedArity = 3;
        G__14613.cljs$lang$applyTo = function(arglist__14614) {
          var x = cljs.core.first(arglist__14614);
          arglist__14614 = cljs.core.next(arglist__14614);
          var y = cljs.core.first(arglist__14614);
          arglist__14614 = cljs.core.next(arglist__14614);
          var z = cljs.core.first(arglist__14614);
          var args = cljs.core.rest(arglist__14614);
          return G__14613__delegate(x, y, z, args)
        };
        G__14613.cljs$core$IFn$_invoke$arity$variadic = G__14613__delegate;
        return G__14613
      }();
      G__14612 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14612__0.call(this);
          case 1:
            return G__14612__1.call(this, x);
          case 2:
            return G__14612__2.call(this, x, y);
          case 3:
            return G__14612__3.call(this, x, y, z);
          default:
            return G__14612__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14612.cljs$lang$maxFixedArity = 3;
      G__14612.cljs$lang$applyTo = G__14612__4.cljs$lang$applyTo;
      return G__14612
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14615 = null;
      var G__14615__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__14615__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__14615__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__14615__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__14615__4 = function() {
        var G__14616__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__14616 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14616__delegate.call(this, x, y, z, args)
        };
        G__14616.cljs$lang$maxFixedArity = 3;
        G__14616.cljs$lang$applyTo = function(arglist__14617) {
          var x = cljs.core.first(arglist__14617);
          arglist__14617 = cljs.core.next(arglist__14617);
          var y = cljs.core.first(arglist__14617);
          arglist__14617 = cljs.core.next(arglist__14617);
          var z = cljs.core.first(arglist__14617);
          var args = cljs.core.rest(arglist__14617);
          return G__14616__delegate(x, y, z, args)
        };
        G__14616.cljs$core$IFn$_invoke$arity$variadic = G__14616__delegate;
        return G__14616
      }();
      G__14615 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14615__0.call(this);
          case 1:
            return G__14615__1.call(this, x);
          case 2:
            return G__14615__2.call(this, x, y);
          case 3:
            return G__14615__3.call(this, x, y, z);
          default:
            return G__14615__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14615.cljs$lang$maxFixedArity = 3;
      G__14615.cljs$lang$applyTo = G__14615__4.cljs$lang$applyTo;
      return G__14615
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14618 = null;
      var G__14618__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__14618__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__14618__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__14618__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__14618__4 = function() {
        var G__14619__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__14619 = function(x, y, z, var_args) {
          var args = null;
          if(arguments.length > 3) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__14619__delegate.call(this, x, y, z, args)
        };
        G__14619.cljs$lang$maxFixedArity = 3;
        G__14619.cljs$lang$applyTo = function(arglist__14620) {
          var x = cljs.core.first(arglist__14620);
          arglist__14620 = cljs.core.next(arglist__14620);
          var y = cljs.core.first(arglist__14620);
          arglist__14620 = cljs.core.next(arglist__14620);
          var z = cljs.core.first(arglist__14620);
          var args = cljs.core.rest(arglist__14620);
          return G__14619__delegate(x, y, z, args)
        };
        G__14619.cljs$core$IFn$_invoke$arity$variadic = G__14619__delegate;
        return G__14619
      }();
      G__14618 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14618__0.call(this);
          case 1:
            return G__14618__1.call(this, x);
          case 2:
            return G__14618__2.call(this, x, y);
          case 3:
            return G__14618__3.call(this, x, y, z);
          default:
            return G__14618__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14618.cljs$lang$maxFixedArity = 3;
      G__14618.cljs$lang$applyTo = G__14618__4.cljs$lang$applyTo;
      return G__14618
    }()
  };
  var juxt__4 = function() {
    var G__14621__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__14622 = null;
        var G__14622__0 = function() {
          return cljs.core.reduce.call(null, function(p1__14602_SHARP_, p2__14603_SHARP_) {
            return cljs.core.conj.call(null, p1__14602_SHARP_, p2__14603_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14622__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__14604_SHARP_, p2__14605_SHARP_) {
            return cljs.core.conj.call(null, p1__14604_SHARP_, p2__14605_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14622__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__14606_SHARP_, p2__14607_SHARP_) {
            return cljs.core.conj.call(null, p1__14606_SHARP_, p2__14607_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14622__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__14608_SHARP_, p2__14609_SHARP_) {
            return cljs.core.conj.call(null, p1__14608_SHARP_, p2__14609_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__$1)
        };
        var G__14622__4 = function() {
          var G__14623__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__14610_SHARP_, p2__14611_SHARP_) {
              return cljs.core.conj.call(null, p1__14610_SHARP_, cljs.core.apply.call(null, p2__14611_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__$1)
          };
          var G__14623 = function(x, y, z, var_args) {
            var args = null;
            if(arguments.length > 3) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__14623__delegate.call(this, x, y, z, args)
          };
          G__14623.cljs$lang$maxFixedArity = 3;
          G__14623.cljs$lang$applyTo = function(arglist__14624) {
            var x = cljs.core.first(arglist__14624);
            arglist__14624 = cljs.core.next(arglist__14624);
            var y = cljs.core.first(arglist__14624);
            arglist__14624 = cljs.core.next(arglist__14624);
            var z = cljs.core.first(arglist__14624);
            var args = cljs.core.rest(arglist__14624);
            return G__14623__delegate(x, y, z, args)
          };
          G__14623.cljs$core$IFn$_invoke$arity$variadic = G__14623__delegate;
          return G__14623
        }();
        G__14622 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__14622__0.call(this);
            case 1:
              return G__14622__1.call(this, x);
            case 2:
              return G__14622__2.call(this, x, y);
            case 3:
              return G__14622__3.call(this, x, y, z);
            default:
              return G__14622__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14622.cljs$lang$maxFixedArity = 3;
        G__14622.cljs$lang$applyTo = G__14622__4.cljs$lang$applyTo;
        return G__14622
      }()
    };
    var G__14621 = function(f, g, h, var_args) {
      var fs = null;
      if(arguments.length > 3) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__14621__delegate.call(this, f, g, h, fs)
    };
    G__14621.cljs$lang$maxFixedArity = 3;
    G__14621.cljs$lang$applyTo = function(arglist__14625) {
      var f = cljs.core.first(arglist__14625);
      arglist__14625 = cljs.core.next(arglist__14625);
      var g = cljs.core.first(arglist__14625);
      arglist__14625 = cljs.core.next(arglist__14625);
      var h = cljs.core.first(arglist__14625);
      var fs = cljs.core.rest(arglist__14625);
      return G__14621__delegate(f, g, h, fs)
    };
    G__14621.cljs$core$IFn$_invoke$arity$variadic = G__14621__delegate;
    return G__14621
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__14626 = cljs.core.next.call(null, coll);
        coll = G__14626;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll) && n > 0) {
        var G__14627 = n - 1;
        var G__14628 = cljs.core.next.call(null, coll);
        n = G__14627;
        coll = G__14628;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches), s)) {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches = re.exec(s);
  if(matches == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches) === 1) {
      return cljs.core.first.call(null, matches)
    }else {
      return cljs.core.vec.call(null, matches)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find.call(null, re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_.call(null, match_data) ? cljs.core.first.call(null, match_data) : match_data;
  var post_match = cljs.core.subs.call(null, s, match_idx + cljs.core.count.call(null, match_str));
  if(cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons.call(null, match_data, cljs.core.seq.call(null, post_match) ? re_seq.call(null, re, post_match) : null)
    }, null, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__14630 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var _ = cljs.core.nth.call(null, vec__14630, 0, null);
  var flags = cljs.core.nth.call(null, vec__14630, 1, null);
  var pattern = cljs.core.nth.call(null, vec__14630, 2, null);
  return new RegExp(pattern, flags)
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  cljs.core._write.call(null, writer, begin);
  if(cljs.core.seq.call(null, coll)) {
    print_one.call(null, cljs.core.first.call(null, coll), writer, opts)
  }else {
  }
  var seq__14635_14639 = cljs.core.seq.call(null, cljs.core.next.call(null, coll));
  var chunk__14636_14640 = null;
  var count__14637_14641 = 0;
  var i__14638_14642 = 0;
  while(true) {
    if(i__14638_14642 < count__14637_14641) {
      var o_14643 = cljs.core._nth.call(null, chunk__14636_14640, i__14638_14642);
      cljs.core._write.call(null, writer, sep);
      print_one.call(null, o_14643, writer, opts);
      var G__14644 = seq__14635_14639;
      var G__14645 = chunk__14636_14640;
      var G__14646 = count__14637_14641;
      var G__14647 = i__14638_14642 + 1;
      seq__14635_14639 = G__14644;
      chunk__14636_14640 = G__14645;
      count__14637_14641 = G__14646;
      i__14638_14642 = G__14647;
      continue
    }else {
      var temp__4092__auto___14648 = cljs.core.seq.call(null, seq__14635_14639);
      if(temp__4092__auto___14648) {
        var seq__14635_14649__$1 = temp__4092__auto___14648;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14635_14649__$1)) {
          var c__3844__auto___14650 = cljs.core.chunk_first.call(null, seq__14635_14649__$1);
          var G__14651 = cljs.core.chunk_rest.call(null, seq__14635_14649__$1);
          var G__14652 = c__3844__auto___14650;
          var G__14653 = cljs.core.count.call(null, c__3844__auto___14650);
          var G__14654 = 0;
          seq__14635_14639 = G__14651;
          chunk__14636_14640 = G__14652;
          count__14637_14641 = G__14653;
          i__14638_14642 = G__14654;
          continue
        }else {
          var o_14655 = cljs.core.first.call(null, seq__14635_14649__$1);
          cljs.core._write.call(null, writer, sep);
          print_one.call(null, o_14655, writer, opts);
          var G__14656 = cljs.core.next.call(null, seq__14635_14649__$1);
          var G__14657 = null;
          var G__14658 = 0;
          var G__14659 = 0;
          seq__14635_14639 = G__14656;
          chunk__14636_14640 = G__14657;
          count__14637_14641 = G__14658;
          i__14638_14642 = G__14659;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core._write.call(null, writer, end)
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__14664 = cljs.core.seq.call(null, ss);
    var chunk__14665 = null;
    var count__14666 = 0;
    var i__14667 = 0;
    while(true) {
      if(i__14667 < count__14666) {
        var s = cljs.core._nth.call(null, chunk__14665, i__14667);
        cljs.core._write.call(null, writer, s);
        var G__14668 = seq__14664;
        var G__14669 = chunk__14665;
        var G__14670 = count__14666;
        var G__14671 = i__14667 + 1;
        seq__14664 = G__14668;
        chunk__14665 = G__14669;
        count__14666 = G__14670;
        i__14667 = G__14671;
        continue
      }else {
        var temp__4092__auto__ = cljs.core.seq.call(null, seq__14664);
        if(temp__4092__auto__) {
          var seq__14664__$1 = temp__4092__auto__;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__14664__$1)) {
            var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14664__$1);
            var G__14672 = cljs.core.chunk_rest.call(null, seq__14664__$1);
            var G__14673 = c__3844__auto__;
            var G__14674 = cljs.core.count.call(null, c__3844__auto__);
            var G__14675 = 0;
            seq__14664 = G__14672;
            chunk__14665 = G__14673;
            count__14666 = G__14674;
            i__14667 = G__14675;
            continue
          }else {
            var s = cljs.core.first.call(null, seq__14664__$1);
            cljs.core._write.call(null, writer, s);
            var G__14676 = cljs.core.next.call(null, seq__14664__$1);
            var G__14677 = null;
            var G__14678 = 0;
            var G__14679 = 0;
            seq__14664 = G__14676;
            chunk__14665 = G__14677;
            count__14666 = G__14678;
            i__14667 = G__14679;
            continue
          }
        }else {
          return null
        }
      }
      break
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if(arguments.length > 1) {
      ss = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return write_all__delegate.call(this, writer, ss)
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__14680) {
    var writer = cljs.core.first(arglist__14680);
    var ss = cljs.core.rest(arglist__14680);
    return write_all__delegate(writer, ss)
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.char_escapes = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match]
  })), cljs.core.str('"')].join("")
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  if(obj == null) {
    return cljs.core._write.call(null, writer, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core._write.call(null, writer, "#\x3cundefined\x3e")
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        if(cljs.core.truth_(function() {
          var and__3119__auto__ = cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
          if(cljs.core.truth_(and__3119__auto__)) {
            var and__3119__auto____$1 = function() {
              var G__14686 = obj;
              if(G__14686) {
                var bit__3746__auto__ = G__14686.cljs$lang$protocol_mask$partition0$ & 131072;
                if(bit__3746__auto__ || G__14686.cljs$core$IMeta$) {
                  return true
                }else {
                  if(!G__14686.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14686)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMeta, G__14686)
              }
            }();
            if(and__3119__auto____$1) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3119__auto____$1
            }
          }else {
            return and__3119__auto__
          }
        }())) {
          cljs.core._write.call(null, writer, "^");
          pr_writer.call(null, cljs.core.meta.call(null, obj), writer, opts);
          cljs.core._write.call(null, writer, " ")
        }else {
        }
        if(obj == null) {
          return cljs.core._write.call(null, writer, "nil")
        }else {
          if(obj.cljs$lang$type) {
            return obj.cljs$lang$ctorPrWriter(obj, writer, opts)
          }else {
            if(function() {
              var G__14687 = obj;
              if(G__14687) {
                var bit__3739__auto__ = G__14687.cljs$lang$protocol_mask$partition0$ & 2147483648;
                if(bit__3739__auto__ || G__14687.cljs$core$IPrintWithWriter$) {
                  return true
                }else {
                  return false
                }
              }else {
                return false
              }
            }()) {
              return cljs.core._pr_writer.call(null, obj, writer, opts)
            }else {
              if(cljs.core.type.call(null, obj) === Boolean || typeof obj === "number") {
                return cljs.core._write.call(null, writer, [cljs.core.str(obj)].join(""))
              }else {
                if(obj instanceof Array) {
                  return cljs.core.pr_sequential_writer.call(null, writer, pr_writer, "#\x3cArray [", ", ", "]\x3e", opts, obj)
                }else {
                  if(goog.isString(obj)) {
                    if(cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 4441712502)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write.call(null, writer, cljs.core.quote_string.call(null, obj))
                    }else {
                      return cljs.core._write.call(null, writer, obj)
                    }
                  }else {
                    if(cljs.core.fn_QMARK_.call(null, obj)) {
                      return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                    }else {
                      if(obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while(true) {
                            if(cljs.core.count.call(null, ns) < len) {
                              var G__14689 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__14689;
                              continue
                            }else {
                              return ns
                            }
                            break
                          }
                        };
                        return cljs.core.write_all.call(null, writer, '#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize.call(null, obj.getUTCMonth() + 1, 2), "-", normalize.call(null, obj.getUTCDate(), 2), "T", normalize.call(null, obj.getUTCHours(), 2), ":", normalize.call(null, obj.getUTCMinutes(), 2), ":", normalize.call(null, obj.getUTCSeconds(), 2), ".", normalize.call(null, obj.getUTCMilliseconds(), 3), "-", '00:00"')
                      }else {
                        if(cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj))) {
                          return cljs.core.write_all.call(null, writer, '#"', obj.source, '"')
                        }else {
                          if(function() {
                            var G__14688 = obj;
                            if(G__14688) {
                              var bit__3746__auto__ = G__14688.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if(bit__3746__auto__ || G__14688.cljs$core$IPrintWithWriter$) {
                                return true
                              }else {
                                if(!G__14688.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14688)
                                }else {
                                  return false
                                }
                              }
                            }else {
                              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPrintWithWriter, G__14688)
                            }
                          }()) {
                            return cljs.core._pr_writer.call(null, obj, writer, opts)
                          }else {
                            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                              return cljs.core.write_all.call(null, writer, "#\x3c", [cljs.core.str(obj)].join(""), "\x3e")
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer.call(null, cljs.core.first.call(null, objs), writer, opts);
  var seq__14694 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  var chunk__14695 = null;
  var count__14696 = 0;
  var i__14697 = 0;
  while(true) {
    if(i__14697 < count__14696) {
      var obj = cljs.core._nth.call(null, chunk__14695, i__14697);
      cljs.core._write.call(null, writer, " ");
      cljs.core.pr_writer.call(null, obj, writer, opts);
      var G__14698 = seq__14694;
      var G__14699 = chunk__14695;
      var G__14700 = count__14696;
      var G__14701 = i__14697 + 1;
      seq__14694 = G__14698;
      chunk__14695 = G__14699;
      count__14696 = G__14700;
      i__14697 = G__14701;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__14694);
      if(temp__4092__auto__) {
        var seq__14694__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14694__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14694__$1);
          var G__14702 = cljs.core.chunk_rest.call(null, seq__14694__$1);
          var G__14703 = c__3844__auto__;
          var G__14704 = cljs.core.count.call(null, c__3844__auto__);
          var G__14705 = 0;
          seq__14694 = G__14702;
          chunk__14695 = G__14703;
          count__14696 = G__14704;
          i__14697 = G__14705;
          continue
        }else {
          var obj = cljs.core.first.call(null, seq__14694__$1);
          cljs.core._write.call(null, writer, " ");
          cljs.core.pr_writer.call(null, obj, writer, opts);
          var G__14706 = cljs.core.next.call(null, seq__14694__$1);
          var G__14707 = null;
          var G__14708 = 0;
          var G__14709 = 0;
          seq__14694 = G__14706;
          chunk__14695 = G__14707;
          count__14696 = G__14708;
          i__14697 = G__14709;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer.call(null, objs, writer, opts);
  cljs.core._flush.call(null, writer);
  return sb
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return""
  }else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts.call(null, objs, opts))].join("")
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if(cljs.core.empty_QMARK_.call(null, objs)) {
    return"\n"
  }else {
    var sb = cljs.core.pr_sb_with_opts.call(null, objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("")
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print.call(null, cljs.core.pr_str_with_opts.call(null, objs, opts))
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core.get.call(null, opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", 4338025857)))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14710) {
    var objs = cljs.core.seq(arglist__14710);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14711) {
    var objs = cljs.core.seq(arglist__14711);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14712) {
    var objs = cljs.core.seq(arglist__14712);
    return pr__delegate(objs)
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14713) {
    var objs = cljs.core.seq(arglist__14713);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14714) {
    var objs = cljs.core.seq(arglist__14714);
    return print_str__delegate(objs)
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14715) {
    var objs = cljs.core.seq(arglist__14715);
    return println__delegate(objs)
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), new cljs.core.Keyword(null, "readably", "readably", 4441712502), false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14716) {
    var objs = cljs.core.seq(arglist__14716);
    return println_str__delegate(objs)
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(arguments.length > 0) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14717) {
    var objs = cljs.core.seq(arglist__14717);
    return prn__delegate(objs)
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll__$1))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write.call(null, writer, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.call(null, x__$1, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 2153938944;
  this.cljs$lang$protocol_mask$partition1$ = 2
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__14718 = cljs.core.seq.call(null, self__.watches);
  var chunk__14719 = null;
  var count__14720 = 0;
  var i__14721 = 0;
  while(true) {
    if(i__14721 < count__14720) {
      var vec__14722 = cljs.core._nth.call(null, chunk__14719, i__14721);
      var key = cljs.core.nth.call(null, vec__14722, 0, null);
      var f = cljs.core.nth.call(null, vec__14722, 1, null);
      f.call(null, key, this$__$1, oldval, newval);
      var G__14724 = seq__14718;
      var G__14725 = chunk__14719;
      var G__14726 = count__14720;
      var G__14727 = i__14721 + 1;
      seq__14718 = G__14724;
      chunk__14719 = G__14725;
      count__14720 = G__14726;
      i__14721 = G__14727;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__14718);
      if(temp__4092__auto__) {
        var seq__14718__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__14718__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__14718__$1);
          var G__14728 = cljs.core.chunk_rest.call(null, seq__14718__$1);
          var G__14729 = c__3844__auto__;
          var G__14730 = cljs.core.count.call(null, c__3844__auto__);
          var G__14731 = 0;
          seq__14718 = G__14728;
          chunk__14719 = G__14729;
          count__14720 = G__14730;
          i__14721 = G__14731;
          continue
        }else {
          var vec__14723 = cljs.core.first.call(null, seq__14718__$1);
          var key = cljs.core.nth.call(null, vec__14723, 0, null);
          var f = cljs.core.nth.call(null, vec__14723, 1, null);
          f.call(null, key, this$__$1, oldval, newval);
          var G__14732 = cljs.core.next.call(null, seq__14718__$1);
          var G__14733 = null;
          var G__14734 = 0;
          var G__14735 = 0;
          seq__14718 = G__14732;
          chunk__14719 = G__14733;
          count__14720 = G__14734;
          i__14721 = G__14735;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.assoc.call(null, self__.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.call(null, self__.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var self__ = this;
  var a__$1 = this;
  cljs.core._write.call(null, writer, "#\x3cAtom: ");
  cljs.core.pr_writer.call(null, self__.state, writer, opts);
  return cljs.core._write.call(null, writer, "\x3e")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches)
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__14739__delegate = function(x, p__14736) {
      var map__14738 = p__14736;
      var map__14738__$1 = cljs.core.seq_QMARK_.call(null, map__14738) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14738) : map__14738;
      var validator = cljs.core.get.call(null, map__14738__$1, new cljs.core.Keyword(null, "validator", "validator", 4199087812));
      var meta = cljs.core.get.call(null, map__14738__$1, new cljs.core.Keyword(null, "meta", "meta", 1017252215));
      return new cljs.core.Atom(x, meta, validator, null)
    };
    var G__14739 = function(x, var_args) {
      var p__14736 = null;
      if(arguments.length > 1) {
        p__14736 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14739__delegate.call(this, x, p__14736)
    };
    G__14739.cljs$lang$maxFixedArity = 1;
    G__14739.cljs$lang$applyTo = function(arglist__14740) {
      var x = cljs.core.first(arglist__14740);
      var p__14736 = cljs.core.rest(arglist__14740);
      return G__14739__delegate(x, p__14736)
    };
    G__14739.cljs$core$IFn$_invoke$arity$variadic = G__14739__delegate;
    return G__14739
  }();
  atom = function(x, var_args) {
    var p__14736 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4092__auto___14741 = a.validator;
  if(cljs.core.truth_(temp__4092__auto___14741)) {
    var validate_14742 = temp__4092__auto___14741;
    if(cljs.core.truth_(validate_14742.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1233162959, null), new cljs.core.Symbol(null, "new-value", "new-value", 972165309, null))))].join(""));
    }
  }else {
  }
  var old_value_14743 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value_14743, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__14744__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__14744 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(arguments.length > 5) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__14744__delegate.call(this, a, f, x, y, z, more)
    };
    G__14744.cljs$lang$maxFixedArity = 5;
    G__14744.cljs$lang$applyTo = function(arglist__14745) {
      var a = cljs.core.first(arglist__14745);
      arglist__14745 = cljs.core.next(arglist__14745);
      var f = cljs.core.first(arglist__14745);
      arglist__14745 = cljs.core.next(arglist__14745);
      var x = cljs.core.first(arglist__14745);
      arglist__14745 = cljs.core.next(arglist__14745);
      var y = cljs.core.first(arglist__14745);
      arglist__14745 = cljs.core.next(arglist__14745);
      var z = cljs.core.first(arglist__14745);
      var more = cljs.core.rest(arglist__14745);
      return G__14744__delegate(a, f, x, y, z, more)
    };
    G__14744.cljs$core$IFn$_invoke$arity$variadic = G__14744__delegate;
    return G__14744
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___6.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14746) {
    var iref = cljs.core.first(arglist__14746);
    arglist__14746 = cljs.core.next(arglist__14746);
    var f = cljs.core.first(arglist__14746);
    var args = cljs.core.rest(arglist__14746);
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return(new cljs.core.Keyword(null, "done", "done", 1016993524)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, self__.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return(new cljs.core.Keyword(null, "value", "value", 1125876963)).cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.call(null, self__.state, function(p__14747) {
    var map__14748 = p__14747;
    var map__14748__$1 = cljs.core.seq_QMARK_.call(null, map__14748) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14748) : map__14748;
    var curr_state = map__14748__$1;
    var done = cljs.core.get.call(null, map__14748__$1, new cljs.core.Keyword(null, "done", "done", 1016993524));
    if(cljs.core.truth_(done)) {
      return curr_state
    }else {
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "done", "done", 1016993524), true, new cljs.core.Keyword(null, "value", "value", 1125876963), self__.f.call(null)], true)
    }
  }))
};
cljs.core.__GT_Delay = function __GT_Delay(state, f) {
  return new cljs.core.Delay(state, f)
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._clj__GT_js["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._key__GT_js[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._key__GT_js["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x)
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if(function() {
    var G__14750 = k;
    if(G__14750) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__14750.cljs$core$IEncodeJS$
        }
      }())) {
        return true
      }else {
        if(!G__14750.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14750)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14750)
    }
  }()) {
    return cljs.core._clj__GT_js.call(null, k)
  }else {
    if(typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.call(null, k)
    }else {
      return cljs.core.pr_str.call(null, k)
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if(x == null) {
    return null
  }else {
    if(function() {
      var G__14758 = x;
      if(G__14758) {
        var bit__3746__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3128__auto__ = bit__3746__auto__;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return G__14758.cljs$core$IEncodeJS$
          }
        }())) {
          return true
        }else {
          if(!G__14758.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14758)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeJS, G__14758)
      }
    }()) {
      return cljs.core._clj__GT_js.call(null, x)
    }else {
      if(x instanceof cljs.core.Keyword) {
        return cljs.core.name.call(null, x)
      }else {
        if(x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("")
        }else {
          if(cljs.core.map_QMARK_.call(null, x)) {
            var m = {};
            var seq__14759_14765 = cljs.core.seq.call(null, x);
            var chunk__14760_14766 = null;
            var count__14761_14767 = 0;
            var i__14762_14768 = 0;
            while(true) {
              if(i__14762_14768 < count__14761_14767) {
                var vec__14763_14769 = cljs.core._nth.call(null, chunk__14760_14766, i__14762_14768);
                var k_14770 = cljs.core.nth.call(null, vec__14763_14769, 0, null);
                var v_14771 = cljs.core.nth.call(null, vec__14763_14769, 1, null);
                m[cljs.core.key__GT_js.call(null, k_14770)] = clj__GT_js.call(null, v_14771);
                var G__14772 = seq__14759_14765;
                var G__14773 = chunk__14760_14766;
                var G__14774 = count__14761_14767;
                var G__14775 = i__14762_14768 + 1;
                seq__14759_14765 = G__14772;
                chunk__14760_14766 = G__14773;
                count__14761_14767 = G__14774;
                i__14762_14768 = G__14775;
                continue
              }else {
                var temp__4092__auto___14776 = cljs.core.seq.call(null, seq__14759_14765);
                if(temp__4092__auto___14776) {
                  var seq__14759_14777__$1 = temp__4092__auto___14776;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__14759_14777__$1)) {
                    var c__3844__auto___14778 = cljs.core.chunk_first.call(null, seq__14759_14777__$1);
                    var G__14779 = cljs.core.chunk_rest.call(null, seq__14759_14777__$1);
                    var G__14780 = c__3844__auto___14778;
                    var G__14781 = cljs.core.count.call(null, c__3844__auto___14778);
                    var G__14782 = 0;
                    seq__14759_14765 = G__14779;
                    chunk__14760_14766 = G__14780;
                    count__14761_14767 = G__14781;
                    i__14762_14768 = G__14782;
                    continue
                  }else {
                    var vec__14764_14783 = cljs.core.first.call(null, seq__14759_14777__$1);
                    var k_14784 = cljs.core.nth.call(null, vec__14764_14783, 0, null);
                    var v_14785 = cljs.core.nth.call(null, vec__14764_14783, 1, null);
                    m[cljs.core.key__GT_js.call(null, k_14784)] = clj__GT_js.call(null, v_14785);
                    var G__14786 = cljs.core.next.call(null, seq__14759_14777__$1);
                    var G__14787 = null;
                    var G__14788 = 0;
                    var G__14789 = 0;
                    seq__14759_14765 = G__14786;
                    chunk__14760_14766 = G__14787;
                    count__14761_14767 = G__14788;
                    i__14762_14768 = G__14789;
                    continue
                  }
                }else {
                }
              }
              break
            }
            return m
          }else {
            if(cljs.core.coll_QMARK_.call(null, x)) {
              return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._js__GT_clj["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options)
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.call(null, x, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), false], true))
  };
  var js__GT_clj__2 = function() {
    var G__14810__delegate = function(x, opts) {
      if(function() {
        var G__14800 = x;
        if(G__14800) {
          var bit__3746__auto__ = null;
          if(cljs.core.truth_(function() {
            var or__3128__auto__ = bit__3746__auto__;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return G__14800.cljs$core$IEncodeClojure$
            }
          }())) {
            return true
          }else {
            if(!G__14800.cljs$lang$protocol_mask$partition$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14800)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IEncodeClojure, G__14800)
        }
      }()) {
        return cljs.core._js__GT_clj.call(null, x, cljs.core.apply.call(null, cljs.core.array_map, opts))
      }else {
        if(cljs.core.seq.call(null, opts)) {
          var map__14801 = opts;
          var map__14801__$1 = cljs.core.seq_QMARK_.call(null, map__14801) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14801) : map__14801;
          var keywordize_keys = cljs.core.get.call(null, map__14801__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672));
          var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
          var f = function(map__14801, map__14801__$1, keywordize_keys, keyfn) {
            return function thisfn(x__$1) {
              if(cljs.core.seq_QMARK_.call(null, x__$1)) {
                return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x__$1))
              }else {
                if(cljs.core.coll_QMARK_.call(null, x__$1)) {
                  return cljs.core.into.call(null, cljs.core.empty.call(null, x__$1), cljs.core.map.call(null, thisfn, x__$1))
                }else {
                  if(x__$1 instanceof Array) {
                    return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x__$1))
                  }else {
                    if(cljs.core.type.call(null, x__$1) === Object) {
                      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
                        var iter__3813__auto__ = function(map__14801, map__14801__$1, keywordize_keys, keyfn) {
                          return function iter__14806(s__14807) {
                            return new cljs.core.LazySeq(null, function(map__14801, map__14801__$1, keywordize_keys, keyfn) {
                              return function() {
                                var s__14807__$1 = s__14807;
                                while(true) {
                                  var temp__4092__auto__ = cljs.core.seq.call(null, s__14807__$1);
                                  if(temp__4092__auto__) {
                                    var s__14807__$2 = temp__4092__auto__;
                                    if(cljs.core.chunked_seq_QMARK_.call(null, s__14807__$2)) {
                                      var c__3811__auto__ = cljs.core.chunk_first.call(null, s__14807__$2);
                                      var size__3812__auto__ = cljs.core.count.call(null, c__3811__auto__);
                                      var b__14809 = cljs.core.chunk_buffer.call(null, size__3812__auto__);
                                      if(function() {
                                        var i__14808 = 0;
                                        while(true) {
                                          if(i__14808 < size__3812__auto__) {
                                            var k = cljs.core._nth.call(null, c__3811__auto__, i__14808);
                                            cljs.core.chunk_append.call(null, b__14809, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true));
                                            var G__14811 = i__14808 + 1;
                                            i__14808 = G__14811;
                                            continue
                                          }else {
                                            return true
                                          }
                                          break
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14809), iter__14806.call(null, cljs.core.chunk_rest.call(null, s__14807__$2)))
                                      }else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__14809), null)
                                      }
                                    }else {
                                      var k = cljs.core.first.call(null, s__14807__$2);
                                      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn.call(null, k), thisfn.call(null, x__$1[k])], true), iter__14806.call(null, cljs.core.rest.call(null, s__14807__$2)))
                                    }
                                  }else {
                                    return null
                                  }
                                  break
                                }
                              }
                            }(map__14801, map__14801__$1, keywordize_keys, keyfn), null, null)
                          }
                        }(map__14801, map__14801__$1, keywordize_keys, keyfn);
                        return iter__3813__auto__.call(null, cljs.core.js_keys.call(null, x__$1))
                      }())
                    }else {
                      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                        return x__$1
                      }else {
                        return null
                      }
                    }
                  }
                }
              }
            }
          }(map__14801, map__14801__$1, keywordize_keys, keyfn);
          return f.call(null, x)
        }else {
          return null
        }
      }
    };
    var G__14810 = function(x, var_args) {
      var opts = null;
      if(arguments.length > 1) {
        opts = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14810__delegate.call(this, x, opts)
    };
    G__14810.cljs$lang$maxFixedArity = 1;
    G__14810.cljs$lang$applyTo = function(arglist__14812) {
      var x = cljs.core.first(arglist__14812);
      var opts = cljs.core.rest(arglist__14812);
      return G__14810__delegate(x, opts)
    };
    G__14810.cljs$core$IFn$_invoke$arity$variadic = G__14810__delegate;
    return G__14810
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__14813__delegate = function(args) {
      var temp__4090__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mem), args);
      if(cljs.core.truth_(temp__4090__auto__)) {
        var v = temp__4090__auto__;
        return v
      }else {
        var ret = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem, cljs.core.assoc, args, ret);
        return ret
      }
    };
    var G__14813 = function(var_args) {
      var args = null;
      if(arguments.length > 0) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__14813__delegate.call(this, args)
    };
    G__14813.cljs$lang$maxFixedArity = 0;
    G__14813.cljs$lang$applyTo = function(arglist__14814) {
      var args = cljs.core.seq(arglist__14814);
      return G__14813__delegate(args)
    };
    G__14813.cljs$core$IFn$_invoke$arity$variadic = G__14813__delegate;
    return G__14813
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret)) {
        var G__14815 = ret;
        f = G__14815;
        continue
      }else {
        return ret
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__14816__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__14816 = function(f, var_args) {
      var args = null;
      if(arguments.length > 1) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__14816__delegate.call(this, f, args)
    };
    G__14816.cljs$lang$maxFixedArity = 1;
    G__14816.cljs$lang$applyTo = function(arglist__14817) {
      var f = cljs.core.first(arglist__14817);
      var args = cljs.core.rest(arglist__14817);
      return G__14816__delegate(f, args)
    };
    G__14816.cljs$core$IFn$_invoke$arity$variadic = G__14816__delegate;
    return G__14816
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k, cljs.core.conj.call(null, cljs.core.get.call(null, ret, k, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 768214664), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), cljs.core.PersistentArrayMap.EMPTY], true)
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if(cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null))
  }else {
  }
  return cljs.core._global_hierarchy
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.call(null, cljs.core.swap_BANG_, cljs.core.get_global_hierarchy.call(null), f, args)
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args)
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__14818) {
    var f = cljs.core.first(arglist__14818);
    var args = cljs.core.rest(arglist__14818);
    return swap_global_hierarchy_BANG___delegate(f, args)
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3128__auto__ = cljs.core._EQ_.call(null, child, parent);
    if(or__3128__auto__) {
      return or__3128__auto__
    }else {
      var or__3128__auto____$1 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if(or__3128__auto____$1) {
        return or__3128__auto____$1
      }else {
        var and__3119__auto__ = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3119__auto__) {
          var and__3119__auto____$1 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3119__auto____$1) {
            var and__3119__auto____$2 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3119__auto____$2) {
              var ret = true;
              var i = 0;
              while(true) {
                if(!ret || i === cljs.core.count.call(null, parent)) {
                  return ret
                }else {
                  var G__14819 = isa_QMARK_.call(null, h, child.call(null, i), parent.call(null, i));
                  var G__14820 = i + 1;
                  ret = G__14819;
                  i = G__14820;
                  continue
                }
                break
              }
            }else {
              return and__3119__auto____$2
            }
          }else {
            return and__3119__auto____$1
          }
        }else {
          return and__3119__auto__
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.get_global_hierarchy.call(null)), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core.get.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), tag))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", -388313324, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.call(null, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Symbol(null, "tag", "tag", -1640416941, null), new cljs.core.Symbol(null, "parent", "parent", 1659011683, null))))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.call(null, function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.get.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
          }
        }(tp, td, ta), m, cljs.core.cons.call(null, source, sources.call(null, source)))
      }
    }(tp, td, ta);
    var or__3128__auto__ = cljs.core.contains_QMARK_.call(null, tp.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "parents", "parents", 4515496059), cljs.core.assoc.call(null, (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.call(null, cljs.core.get.call(null, tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442), tf.call(null, (new cljs.core.Keyword(null, "ancestors", "ancestors", 889955442)).cljs$core$IFn$_invoke$arity$1(h), 
      tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 768214664), tf.call(null, (new cljs.core.Keyword(null, "descendants", "descendants", 768214664)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], true)
    }();
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.call(null, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", 4515496059)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(parentMap.call(null, tag)) ? cljs.core.disj.call(null, parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents)) ? cljs.core.assoc.call(null, parentMap, tag, childsParents) : cljs.core.dissoc.call(null, parentMap, tag);
    var deriv_seq = cljs.core.flatten.call(null, cljs.core.map.call(null, function(parentMap, childsParents, newParents) {
      return function(p1__14821_SHARP_) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, p1__14821_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__14821_SHARP_), cljs.core.second.call(null, p1__14821_SHARP_)))
      }
    }(parentMap, childsParents, newParents), cljs.core.seq.call(null, newParents)));
    if(cljs.core.contains_QMARK_.call(null, parentMap.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__14822_SHARP_, p2__14823_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__14822_SHARP_, p2__14823_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3128__auto__ = cljs.core.truth_(function() {
    var and__3119__auto__ = xprefs;
    if(cljs.core.truth_(and__3119__auto__)) {
      return xprefs.call(null, y)
    }else {
      return and__3119__auto__
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    var or__3128__auto____$1 = function() {
      var ps = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps), prefer_table))) {
          }else {
          }
          var G__14824 = cljs.core.rest.call(null, ps);
          ps = G__14824;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3128__auto____$1)) {
      return or__3128__auto____$1
    }else {
      var or__3128__auto____$2 = function() {
        var ps = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps), y, prefer_table))) {
            }else {
            }
            var G__14825 = cljs.core.rest.call(null, ps);
            ps = G__14825;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3128__auto____$2)) {
        return or__3128__auto____$2
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3128__auto__ = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.call(null, function(be, p__14828) {
    var vec__14829 = p__14828;
    var k = cljs.core.nth.call(null, vec__14829, 0, null);
    var _ = cljs.core.nth.call(null, vec__14829, 1, null);
    var e = vec__14829;
    if(cljs.core.isa_QMARK_.call(null, cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3128__auto__ = be == null;
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          return cljs.core.dominates.call(null, k, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2), k, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry));
      return cljs.core.second.call(null, best_entry)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._reset[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._reset["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._add_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._add_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._remove_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._remove_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._prefer_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._prefer_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._get_method[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._get_method["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._methods[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._methods["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._prefers[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._prefers["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3119__auto__ = mf;
    if(and__3119__auto__) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__3723__auto__ = mf == null ? null : mf;
    return function() {
      var or__3128__auto__ = cljs.core._dispatch[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core._dispatch["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, name, dispatch_fn, args) {
  var dispatch_val = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn = cljs.core._get_method.call(null, mf, dispatch_val);
  if(cljs.core.truth_(target_fn)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
  }
  return cljs.core.apply.call(null, target_fn, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 256
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, self__.cached_hierarchy, function(mf__$2) {
    return null
  });
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.call(null, self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.call(null, self__.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
  }
  var temp__4090__auto__ = cljs.core.deref.call(null, self__.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var target_fn = temp__4090__auto__;
    return target_fn
  }else {
    var temp__4090__auto____$1 = cljs.core.find_and_cache_best_method.call(null, self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if(cljs.core.truth_(temp__4090__auto____$1)) {
      var target_fn = temp__4090__auto____$1;
      return target_fn
    }else {
      return cljs.core.deref.call(null, self__.method_table).call(null, self__.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, self__.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core.get.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.call(null, self__.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.do_dispatch.call(null, mf__$1, self__.name, self__.dispatch_fn, args)
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
};
cljs.core.MultiFn.prototype.call = function() {
  var G__14830__delegate = function(_, args) {
    var self = this;
    return cljs.core._dispatch.call(null, self, args)
  };
  var G__14830 = function(_, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__14830__delegate.call(this, _, args)
  };
  G__14830.cljs$lang$maxFixedArity = 1;
  G__14830.cljs$lang$applyTo = function(arglist__14831) {
    var _ = cljs.core.first(arglist__14831);
    var args = cljs.core.rest(arglist__14831);
    return G__14830__delegate(_, args)
  };
  G__14830.cljs$core$IFn$_invoke$arity$variadic = G__14830__delegate;
  return G__14830
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self = this;
  return cljs.core._dispatch.call(null, self, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$__$1))
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid)
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core/ExceptionInfo")
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause)
};
cljs.core.ExceptionInfo.prototype = new Error;
cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, map) {
    return new cljs.core.ExceptionInfo(msg, map, null)
  };
  var ex_info__3 = function(msg, map, cause) {
    return new cljs.core.ExceptionInfo(msg, map, cause)
  };
  ex_info = function(msg, map, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, map);
      case 3:
        return ex_info__3.call(this, msg, map, cause)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info
}();
cljs.core.ex_data = function ex_data(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.data
  }else {
    return null
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if(ex instanceof Error) {
    return ex.message
  }else {
    return null
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if(ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause
  }else {
    return null
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if(cljs.core.truth_(pred.call(null, x, y))) {
      return-1
    }else {
      if(cljs.core.truth_(pred.call(null, y, x))) {
        return 1
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return 0
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Symbol(null, "deftype*", "deftype*", -978581244, null), null, new cljs.core.Symbol(null, "new", "new", -1640422567, null), null, new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), null, new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), null, new cljs.core.Symbol(null, "set!", "set!", -1637004872, null), null, new cljs.core.Symbol(null, "recur", "recur", -1532142362, null), 
  null, new cljs.core.Symbol(null, ".", ".", -1640531481, null), null, new cljs.core.Symbol(null, "ns", "ns", -1640528002, null), null, new cljs.core.Symbol(null, "do", "do", -1640528316, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -1640430053, null), null, new cljs.core.Symbol(null, "throw", "throw", -1530191713, null), null, new cljs.core.Symbol(null, "letfn*", "letfn*", 1548249632, null), null, new cljs.core.Symbol(null, "js*", "js*", -1640426054, null), null, new cljs.core.Symbol(null, 
  "defrecord*", "defrecord*", 774272013, null), null, new cljs.core.Symbol(null, "let*", "let*", -1637213400, null), null, new cljs.core.Symbol(null, "loop*", "loop*", -1537374273, null), null, new cljs.core.Symbol(null, "try", "try", -1640416396, null), null, new cljs.core.Symbol(null, "if", "if", -1640528170, null), null, new cljs.core.Symbol(null, "def", "def", -1640432194, null), null], true), x)
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__17724_SHARP_) {
    return max === p1__17724_SHARP_
  }, coll))
};
clojure.set.union = function() {
  var union = null;
  var union__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var union__1 = function(s1) {
    return s1
  };
  var union__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, cljs.core.conj, s2, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.conj, s1, s2)
    }
  };
  var union__3 = function() {
    var G__17725__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__17725 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17725__delegate.call(this, s1, s2, sets)
    };
    G__17725.cljs$lang$maxFixedArity = 2;
    G__17725.cljs$lang$applyTo = function(arglist__17726) {
      var s1 = cljs.core.first(arglist__17726);
      arglist__17726 = cljs.core.next(arglist__17726);
      var s2 = cljs.core.first(arglist__17726);
      var sets = cljs.core.rest(arglist__17726);
      return G__17725__delegate(s1, s2, sets)
    };
    G__17725.cljs$core$IFn$_invoke$arity$variadic = G__17725__delegate;
    return G__17725
  }();
  union = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 0:
        return union__0.call(this);
      case 1:
        return union__1.call(this, s1);
      case 2:
        return union__2.call(this, s1, s2);
      default:
        return union__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  union.cljs$lang$maxFixedArity = 2;
  union.cljs$lang$applyTo = union__3.cljs$lang$applyTo;
  union.cljs$core$IFn$_invoke$arity$0 = union__0;
  union.cljs$core$IFn$_invoke$arity$1 = union__1;
  union.cljs$core$IFn$_invoke$arity$2 = union__2;
  union.cljs$core$IFn$_invoke$arity$variadic = union__3.cljs$core$IFn$_invoke$arity$variadic;
  return union
}();
clojure.set.intersection = function() {
  var intersection = null;
  var intersection__1 = function(s1) {
    return s1
  };
  var intersection__2 = function(s1, s2) {
    while(true) {
      if(cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
        var G__17728 = s2;
        var G__17729 = s1;
        s1 = G__17728;
        s2 = G__17729;
        continue
      }else {
        return cljs.core.reduce.call(null, function(s1, s2) {
          return function(result, item) {
            if(cljs.core.contains_QMARK_.call(null, s2, item)) {
              return result
            }else {
              return cljs.core.disj.call(null, result, item)
            }
          }
        }(s1, s2), s1, s1)
      }
      break
    }
  };
  var intersection__3 = function() {
    var G__17730__delegate = function(s1, s2, sets) {
      var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__17727_SHARP_) {
        return-cljs.core.count.call(null, p1__17727_SHARP_)
      }, cljs.core.conj.call(null, sets, s2, s1));
      return cljs.core.reduce.call(null, intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets))
    };
    var G__17730 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17730__delegate.call(this, s1, s2, sets)
    };
    G__17730.cljs$lang$maxFixedArity = 2;
    G__17730.cljs$lang$applyTo = function(arglist__17731) {
      var s1 = cljs.core.first(arglist__17731);
      arglist__17731 = cljs.core.next(arglist__17731);
      var s2 = cljs.core.first(arglist__17731);
      var sets = cljs.core.rest(arglist__17731);
      return G__17730__delegate(s1, s2, sets)
    };
    G__17730.cljs$core$IFn$_invoke$arity$variadic = G__17730__delegate;
    return G__17730
  }();
  intersection = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return intersection__1.call(this, s1);
      case 2:
        return intersection__2.call(this, s1, s2);
      default:
        return intersection__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  intersection.cljs$lang$maxFixedArity = 2;
  intersection.cljs$lang$applyTo = intersection__3.cljs$lang$applyTo;
  intersection.cljs$core$IFn$_invoke$arity$1 = intersection__1;
  intersection.cljs$core$IFn$_invoke$arity$2 = intersection__2;
  intersection.cljs$core$IFn$_invoke$arity$variadic = intersection__3.cljs$core$IFn$_invoke$arity$variadic;
  return intersection
}();
clojure.set.difference = function() {
  var difference = null;
  var difference__1 = function(s1) {
    return s1
  };
  var difference__2 = function(s1, s2) {
    if(cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
      return cljs.core.reduce.call(null, function(result, item) {
        if(cljs.core.contains_QMARK_.call(null, s2, item)) {
          return cljs.core.disj.call(null, result, item)
        }else {
          return result
        }
      }, s1, s1)
    }else {
      return cljs.core.reduce.call(null, cljs.core.disj, s1, s2)
    }
  };
  var difference__3 = function() {
    var G__17732__delegate = function(s1, s2, sets) {
      return cljs.core.reduce.call(null, difference, s1, cljs.core.conj.call(null, sets, s2))
    };
    var G__17732 = function(s1, s2, var_args) {
      var sets = null;
      if(arguments.length > 2) {
        sets = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17732__delegate.call(this, s1, s2, sets)
    };
    G__17732.cljs$lang$maxFixedArity = 2;
    G__17732.cljs$lang$applyTo = function(arglist__17733) {
      var s1 = cljs.core.first(arglist__17733);
      arglist__17733 = cljs.core.next(arglist__17733);
      var s2 = cljs.core.first(arglist__17733);
      var sets = cljs.core.rest(arglist__17733);
      return G__17732__delegate(s1, s2, sets)
    };
    G__17732.cljs$core$IFn$_invoke$arity$variadic = G__17732__delegate;
    return G__17732
  }();
  difference = function(s1, s2, var_args) {
    var sets = var_args;
    switch(arguments.length) {
      case 1:
        return difference__1.call(this, s1);
      case 2:
        return difference__2.call(this, s1, s2);
      default:
        return difference__3.cljs$core$IFn$_invoke$arity$variadic(s1, s2, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  difference.cljs$lang$maxFixedArity = 2;
  difference.cljs$lang$applyTo = difference__3.cljs$lang$applyTo;
  difference.cljs$core$IFn$_invoke$arity$1 = difference__1;
  difference.cljs$core$IFn$_invoke$arity$2 = difference__2;
  difference.cljs$core$IFn$_invoke$arity$variadic = difference__3.cljs$core$IFn$_invoke$arity$variadic;
  return difference
}();
clojure.set.select = function select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if(cljs.core.truth_(pred.call(null, k))) {
      return s
    }else {
      return cljs.core.disj.call(null, s, k)
    }
  }, xset, xset)
};
clojure.set.project = function project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17734_SHARP_) {
    return cljs.core.select_keys.call(null, p1__17734_SHARP_, ks)
  }, xrel))
};
clojure.set.rename_keys = function rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__17737) {
    var vec__17738 = p__17737;
    var old = cljs.core.nth.call(null, vec__17738, 0, null);
    var new$ = cljs.core.nth.call(null, vec__17738, 1, null);
    if(cljs.core.not_EQ_.call(null, old, new$) && cljs.core.contains_QMARK_.call(null, m, old)) {
      return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, m, old)), old)
    }else {
      return m
    }
  }, map, kmap)
};
clojure.set.rename = function rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__17739_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__17739_SHARP_, kmap)
  }, xrel))
};
clojure.set.index = function index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x))
  }, cljs.core.PersistentArrayMap.EMPTY, xrel)
};
clojure.set.map_invert = function map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__17742) {
    var vec__17743 = p__17742;
    var k = cljs.core.nth.call(null, vec__17743, 0, null);
    var v = cljs.core.nth.call(null, vec__17743, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k)
  }, cljs.core.PersistentArrayMap.EMPTY, m)
};
clojure.set.join = function() {
  var join = null;
  var join__2 = function(xrel, yrel) {
    if(cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
      var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
      var vec__17750 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel], true) : cljs.core.PersistentVector.fromArray([yrel, xrel], true);
      var r = cljs.core.nth.call(null, vec__17750, 0, null);
      var s = cljs.core.nth.call(null, vec__17750, 1, null);
      var idx = clojure.set.index.call(null, r, ks);
      return cljs.core.reduce.call(null, function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if(cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(p1__17744_SHARP_, p2__17745_SHARP_) {
            return cljs.core.conj.call(null, p1__17744_SHARP_, cljs.core.merge.call(null, p2__17745_SHARP_, x))
          }, ret, found)
        }else {
          return ret
        }
      }, cljs.core.PersistentHashSet.EMPTY, s)
    }else {
      return cljs.core.PersistentHashSet.EMPTY
    }
  };
  var join__3 = function(xrel, yrel, km) {
    var vec__17751 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? cljs.core.PersistentVector.fromArray([xrel, yrel, clojure.set.map_invert.call(null, km)], true) : cljs.core.PersistentVector.fromArray([yrel, xrel, km], true);
    var r = cljs.core.nth.call(null, vec__17751, 0, null);
    var s = cljs.core.nth.call(null, vec__17751, 1, null);
    var k = cljs.core.nth.call(null, vec__17751, 2, null);
    var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if(cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__17746_SHARP_, p2__17747_SHARP_) {
          return cljs.core.conj.call(null, p1__17746_SHARP_, cljs.core.merge.call(null, p2__17747_SHARP_, x))
        }, ret, found)
      }else {
        return ret
      }
    }, cljs.core.PersistentHashSet.EMPTY, s)
  };
  join = function(xrel, yrel, km) {
    switch(arguments.length) {
      case 2:
        return join__2.call(this, xrel, yrel);
      case 3:
        return join__3.call(this, xrel, yrel, km)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  join.cljs$core$IFn$_invoke$arity$3 = join__3;
  return join
}();
clojure.set.subset_QMARK_ = function subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17752_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__17752_SHARP_)
  }, set1)
};
clojure.set.superset_QMARK_ = function superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__17753_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__17753_SHARP_)
  }, set2)
};
goog.provide("clojure.data");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("clojure.set");
clojure.data.atom_diff = function atom_diff(a, b) {
  if(cljs.core._EQ_.call(null, a, b)) {
    return cljs.core.PersistentVector.fromArray([null, null, a], true)
  }else {
    return cljs.core.PersistentVector.fromArray([a, b, null], true)
  }
};
clojure.data.vectorize = function vectorize(m) {
  if(cljs.core.seq.call(null, m)) {
    return cljs.core.reduce.call(null, function(result, p__18166) {
      var vec__18167 = p__18166;
      var k = cljs.core.nth.call(null, vec__18167, 0, null);
      var v = cljs.core.nth.call(null, vec__18167, 1, null);
      return cljs.core.assoc.call(null, result, k, v)
    }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, m)), null)), m)
  }else {
    return null
  }
};
clojure.data.diff_associative_key = function diff_associative_key(a, b, k) {
  var va = cljs.core.get.call(null, a, k);
  var vb = cljs.core.get.call(null, b, k);
  var vec__18169 = clojure.data.diff.call(null, va, vb);
  var a_STAR_ = cljs.core.nth.call(null, vec__18169, 0, null);
  var b_STAR_ = cljs.core.nth.call(null, vec__18169, 1, null);
  var ab = cljs.core.nth.call(null, vec__18169, 2, null);
  var in_a = cljs.core.contains_QMARK_.call(null, a, k);
  var in_b = cljs.core.contains_QMARK_.call(null, b, k);
  var same = in_a && in_b && (!(ab == null) || va == null && vb == null);
  return cljs.core.PersistentVector.fromArray([in_a && (!(a_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.fromArray([k, a_STAR_], true) : null, in_b && (!(b_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.fromArray([k, b_STAR_], true) : null, same ? cljs.core.PersistentArrayMap.fromArray([k, ab], true) : null], true)
};
clojure.data.diff_associative = function() {
  var diff_associative = null;
  var diff_associative__2 = function(a, b) {
    return diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)))
  };
  var diff_associative__3 = function(a, b, ks) {
    return cljs.core.reduce.call(null, function(diff1, diff2) {
      return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, diff1, diff2))
    }, cljs.core.PersistentVector.fromArray([null, null, null], true), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), ks))
  };
  diff_associative = function(a, b, ks) {
    switch(arguments.length) {
      case 2:
        return diff_associative__2.call(this, a, b);
      case 3:
        return diff_associative__3.call(this, a, b, ks)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  diff_associative.cljs$core$IFn$_invoke$arity$2 = diff_associative__2;
  diff_associative.cljs$core$IFn$_invoke$arity$3 = diff_associative__3;
  return diff_associative
}();
clojure.data.diff_sequential = function diff_sequential(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var x__3433__auto__ = cljs.core.count.call(null, a);
    var y__3434__auto__ = cljs.core.count.call(null, b);
    return x__3433__auto__ > y__3434__auto__ ? x__3433__auto__ : y__3434__auto__
  }()))))
};
clojure.data.diff_set = function diff_set(a, b) {
  return cljs.core.PersistentVector.fromArray([cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], true)
};
clojure.data.EqualityPartition = {};
clojure.data.equality_partition = function equality_partition(x) {
  if(function() {
    var and__3119__auto__ = x;
    if(and__3119__auto__) {
      return x.clojure$data$EqualityPartition$equality_partition$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return x.clojure$data$EqualityPartition$equality_partition$arity$1(x)
  }else {
    var x__3723__auto__ = x == null ? null : x;
    return function() {
      var or__3128__auto__ = clojure.data.equality_partition[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = clojure.data.equality_partition["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", x);
        }
      }
    }().call(null, x)
  }
};
clojure.data.Diff = {};
clojure.data.diff_similar = function diff_similar(a, b) {
  if(function() {
    var and__3119__auto__ = a;
    if(and__3119__auto__) {
      return a.clojure$data$Diff$diff_similar$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b)
  }else {
    var x__3723__auto__ = a == null ? null : a;
    return function() {
      var or__3128__auto__ = clojure.data.diff_similar[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = clojure.data.diff_similar["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
        }
      }
    }().call(null, a, b)
  }
};
clojure.data.EqualityPartition["_"] = true;
clojure.data.equality_partition["_"] = function(x) {
  if(function() {
    var G__18170 = x;
    if(G__18170) {
      var bit__3746__auto__ = G__18170.cljs$lang$protocol_mask$partition0$ & 1024;
      if(bit__3746__auto__ || G__18170.cljs$core$IMap$) {
        return true
      }else {
        if(!G__18170.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18170)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, G__18170)
    }
  }()) {
    return new cljs.core.Keyword(null, "map", "map", 1014012110)
  }else {
    if(function() {
      var G__18171 = x;
      if(G__18171) {
        var bit__3746__auto__ = G__18171.cljs$lang$protocol_mask$partition0$ & 4096;
        if(bit__3746__auto__ || G__18171.cljs$core$ISet$) {
          return true
        }else {
          if(!G__18171.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18171)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, G__18171)
      }
    }()) {
      return new cljs.core.Keyword(null, "set", "set", 1014018004)
    }else {
      if(function() {
        var G__18172 = x;
        if(G__18172) {
          var bit__3746__auto__ = G__18172.cljs$lang$protocol_mask$partition0$ & 16777216;
          if(bit__3746__auto__ || G__18172.cljs$core$ISequential$) {
            return true
          }else {
            if(!G__18172.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18172)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, G__18172)
        }
      }()) {
        return new cljs.core.Keyword(null, "sequential", "sequential", 849892465)
      }else {
        if(new cljs.core.Keyword(null, "default", "default", 2558708147)) {
          return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
        }else {
          return null
        }
      }
    }
  }
};
clojure.data.EqualityPartition["boolean"] = true;
clojure.data.equality_partition["boolean"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["function"] = true;
clojure.data.equality_partition["function"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["array"] = true;
clojure.data.equality_partition["array"] = function(x) {
  return new cljs.core.Keyword(null, "sequential", "sequential", 849892465)
};
clojure.data.EqualityPartition["number"] = true;
clojure.data.equality_partition["number"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["string"] = true;
clojure.data.equality_partition["string"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.EqualityPartition["null"] = true;
clojure.data.equality_partition["null"] = function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", 1016908995)
};
clojure.data.Diff["_"] = true;
clojure.data.diff_similar["_"] = function(a, b) {
  return function() {
    var G__18173 = clojure.data.equality_partition.call(null, a);
    if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "map", "map", 1014012110), G__18173)) {
      return clojure.data.diff_associative
    }else {
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "sequential", "sequential", 849892465), G__18173)) {
        return clojure.data.diff_sequential
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "set", "set", 1014018004), G__18173)) {
          return clojure.data.diff_set
        }else {
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "atom", "atom", 1016908995), G__18173)) {
            return clojure.data.atom_diff
          }else {
            if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(clojure.data.equality_partition.call(null, a))].join(""));
            }else {
              return null
            }
          }
        }
      }
    }
  }().call(null, a, b)
};
clojure.data.Diff["boolean"] = true;
clojure.data.diff_similar["boolean"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["function"] = true;
clojure.data.diff_similar["function"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["array"] = true;
clojure.data.diff_similar["array"] = function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b)
};
clojure.data.Diff["number"] = true;
clojure.data.diff_similar["number"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["string"] = true;
clojure.data.diff_similar["string"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.Diff["null"] = true;
clojure.data.diff_similar["null"] = function(a, b) {
  return clojure.data.atom_diff.call(null, a, b)
};
clojure.data.diff = function diff(a, b) {
  if(cljs.core._EQ_.call(null, a, b)) {
    return cljs.core.PersistentVector.fromArray([null, null, a], true)
  }else {
    if(cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b))) {
      return clojure.data.diff_similar.call(null, a, b)
    }else {
      return clojure.data.atom_diff.call(null, a, b)
    }
  }
};
goog.provide("specljs.results");
goog.require("cljs.core");
specljs.results.PassResult = function(characteristic, seconds) {
  this.characteristic = characteristic;
  this.seconds = seconds
};
specljs.results.PassResult.cljs$lang$type = true;
specljs.results.PassResult.cljs$lang$ctorStr = "specljs.results/PassResult";
specljs.results.PassResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/PassResult")
};
specljs.results.__GT_PassResult = function __GT_PassResult(characteristic, seconds) {
  return new specljs.results.PassResult(characteristic, seconds)
};
specljs.results.FailResult = function(characteristic, seconds, failure) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.failure = failure
};
specljs.results.FailResult.cljs$lang$type = true;
specljs.results.FailResult.cljs$lang$ctorStr = "specljs.results/FailResult";
specljs.results.FailResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/FailResult")
};
specljs.results.__GT_FailResult = function __GT_FailResult(characteristic, seconds, failure) {
  return new specljs.results.FailResult(characteristic, seconds, failure)
};
specljs.results.PendingResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception
};
specljs.results.PendingResult.cljs$lang$type = true;
specljs.results.PendingResult.cljs$lang$ctorStr = "specljs.results/PendingResult";
specljs.results.PendingResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/PendingResult")
};
specljs.results.__GT_PendingResult = function __GT_PendingResult(characteristic, seconds, exception) {
  return new specljs.results.PendingResult(characteristic, seconds, exception)
};
specljs.results.ErrorResult = function(characteristic, seconds, exception) {
  this.characteristic = characteristic;
  this.seconds = seconds;
  this.exception = exception
};
specljs.results.ErrorResult.cljs$lang$type = true;
specljs.results.ErrorResult.cljs$lang$ctorStr = "specljs.results/ErrorResult";
specljs.results.ErrorResult.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.results/ErrorResult")
};
specljs.results.__GT_ErrorResult = function __GT_ErrorResult(characteristic, seconds, exception) {
  return new specljs.results.ErrorResult(characteristic, seconds, exception)
};
specljs.results.pass_result = function pass_result(characteristic, seconds) {
  return new specljs.results.PassResult(characteristic, seconds)
};
specljs.results.fail_result = function fail_result(characteristic, seconds, failure) {
  return new specljs.results.FailResult(characteristic, seconds, failure)
};
specljs.results.pending_result = function pending_result(characteristic, seconds, exception) {
  return new specljs.results.PendingResult(characteristic, seconds, exception)
};
specljs.results.error_result = function error_result(exception) {
  return new specljs.results.ErrorResult(null, 0, exception)
};
specljs.results.pass_QMARK_ = function pass_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.PassResult)
};
specljs.results.fail_QMARK_ = function fail_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.FailResult)
};
specljs.results.pending_QMARK_ = function pending_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.PendingResult)
};
specljs.results.error_QMARK_ = function error_QMARK_(result) {
  return cljs.core._EQ_.call(null, cljs.core.type.call(null, result), specljs.results.ErrorResult)
};
specljs.results.fail_count = function fail_count(results) {
  return cljs.core.reduce.call(null, function(p1__18163_SHARP_, p2__18162_SHARP_) {
    if(cljs.core.truth_(function() {
      var or__3128__auto__ = specljs.results.fail_QMARK_.call(null, p2__18162_SHARP_);
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return specljs.results.error_QMARK_.call(null, p2__18162_SHARP_)
      }
    }())) {
      return p1__18163_SHARP_ + 1
    }else {
      return p1__18163_SHARP_
    }
  }, 0, results)
};
specljs.results.categorize = function categorize(results) {
  return cljs.core.reduce.call(null, function(tally, result) {
    if(cljs.core.truth_(specljs.results.pending_QMARK_.call(null, result))) {
      return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "pending", "pending", 4626283785)], true), cljs.core.conj, result)
    }else {
      if(cljs.core.truth_(specljs.results.error_QMARK_.call(null, result))) {
        return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "error", "error", 1110689146)], true), cljs.core.conj, result)
      }else {
        if(cljs.core.truth_(specljs.results.fail_QMARK_.call(null, result))) {
          return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "fail", "fail", 1017039504)], true), cljs.core.conj, result)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return cljs.core.update_in.call(null, tally, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "pass", "pass", 1017337731)], true), cljs.core.conj, result)
          }else {
            return null
          }
        }
      }
    }
  }, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "pending", "pending", 4626283785), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "fail", "fail", 1017039504), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "pass", "pass", 1017337731), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "error", "error", 1110689146), cljs.core.PersistentVector.EMPTY], true), results)
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while(true) {
    if(cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__17206 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__17206;
      continue
    }else {
      return v__$1
    }
    break
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if(cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v)
  }else {
    return v
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if(limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "")
  }else {
    var pred__17210 = cljs.core._EQ_;
    var expr__17211 = limit;
    if(pred__17210.call(null, 1, expr__17211)) {
      return cljs.core.vector.call(null, s)
    }else {
      if(pred__17210.call(null, 2, expr__17211)) {
        return cljs.core.vector.call(null, "", s)
      }else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c))
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0)
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1)
        }else {
          var temp__4090__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if(cljs.core.truth_(temp__4090__auto__)) {
            var m = temp__4090__auto__;
            var index = s__$1.indexOf(m);
            var G__17213 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__17214 = limit__$1 - 1;
            var G__17215 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__17213;
            limit__$1 = G__17214;
            parts = G__17215;
            continue
          }else {
            return cljs.core.conj.call(null, parts, s__$1)
          }
        }
        break
      }
    }())
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while(true) {
    if(index === 0) {
      return""
    }else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if(cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__17216 = index - 1;
        index = G__17216;
        continue
      }else {
        return s.substring(0, index)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s)
};
clojure.string.escape = function escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString()
    }else {
      var ch = s.charAt(index);
      var temp__4090__auto___17217 = cljs.core.get.call(null, cmap, ch);
      if(cljs.core.truth_(temp__4090__auto___17217)) {
        var replacement_17218 = temp__4090__auto___17217;
        buffer.append([cljs.core.str(replacement_17218)].join(""))
      }else {
        buffer.append(ch)
      }
      var G__17219 = index + 1;
      index = G__17219;
      continue
    }
    break
  }
};
goog.provide("specljs.platform");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.platform.endl = "\n";
specljs.platform.file_separator = "/";
specljs.platform.re_type = cljs.core.type.call(null, /./);
specljs.platform.re_QMARK_ = function re_QMARK_(obj) {
  return cljs.core._EQ_.call(null, specljs.platform.re_type, cljs.core.type.call(null, obj))
};
specljs.platform.SpecFailure = function(message) {
  this.message = message
};
specljs.platform.SpecFailure.cljs$lang$type = true;
specljs.platform.SpecFailure.cljs$lang$ctorStr = "specljs.platform/SpecFailure";
specljs.platform.SpecFailure.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.platform/SpecFailure")
};
specljs.platform.__GT_SpecFailure = function __GT_SpecFailure(message) {
  return new specljs.platform.SpecFailure(message)
};
specljs.platform.SpecPending = function(message) {
  this.message = message
};
specljs.platform.SpecPending.cljs$lang$type = true;
specljs.platform.SpecPending.cljs$lang$ctorStr = "specljs.platform/SpecPending";
specljs.platform.SpecPending.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "specljs.platform/SpecPending")
};
specljs.platform.__GT_SpecPending = function __GT_SpecPending(message) {
  return new specljs.platform.SpecPending(message)
};
specljs.platform.throwable = Object;
specljs.platform.exception = Error;
specljs.platform.failure = specljs.platform.SpecFailure;
specljs.platform.pending = specljs.platform.SpecPending;
specljs.platform.pending_QMARK_ = function pending_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), specljs.platform.SpecPending)
};
specljs.platform.failure_QMARK_ = function failure_QMARK_(e) {
  return cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, e), specljs.platform.SpecFailure)
};
specljs.platform.error_message = function error_message(e) {
  return e.message
};
specljs.platform.failure_source = function failure_source(e) {
  if(cljs.core.truth_(e.fileName)) {
    return[cljs.core.str(e.fileName), cljs.core.str(":"), cljs.core.str(function() {
      var or__3128__auto__ = e.lineNumber;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return"?"
      }
    }())].join("")
  }else {
    if(cljs.core.truth_(e.stack)) {
      return clojure.string.trim.call(null, cljs.core.nth.call(null, clojure.string.split_lines.call(null, e.stack), cljs.core.count.call(null, clojure.string.split_lines.call(null, e.message))))
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return"unkown-file:?"
      }else {
        return null
      }
    }
  }
};
specljs.platform.stack_trace = function stack_trace(e) {
  return cljs.core.rest.call(null, clojure.string.split_lines.call(null, function() {
    var or__3128__auto__ = e.stack;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return e.toString()
    }
  }()))
};
specljs.platform.cause = function cause(e) {
  return null
};
specljs.platform.print_stack_trace = function print_stack_trace(e) {
  return cljs.core.println.call(null, function() {
    var or__3128__auto__ = e.stack;
    if(cljs.core.truth_(or__3128__auto__)) {
      return or__3128__auto__
    }else {
      return"missing stack trace"
    }
  }())
};
specljs.platform.elide_level_QMARK_ = function elide_level_QMARK_(stack_element) {
  return false
};
specljs.platform.type_name = function type_name(t) {
  if(cljs.core.truth_(t)) {
    return t.name
  }else {
    return"nil"
  }
};
specljs.platform.format_seconds = function format_seconds(secs) {
  return secs.toFixed(5)
};
specljs.platform.current_time = function current_time() {
  return(new Date).getTime()
};
specljs.platform.secs_since = function secs_since(start) {
  return((new Date).getTime() - start) / 1E3
};
cljs.core._STAR_print_fn_STAR_ = function(thing) {
  return console.log(thing)
};
specljs.platform.dynamically_invoke = function dynamically_invoke(ns_name, fn_name) {
  var code = [cljs.core.str(clojure.string.replace.call(null, ns_name, "-", "_")), cljs.core.str("."), cljs.core.str(clojure.string.replace.call(null, fn_name, "-", "_")), cljs.core.str("();")].join("");
  return eval(code)
};
goog.provide("specljs.config");
goog.require("cljs.core");
goog.require("specljs.platform");
goog.require("specljs.platform");
specljs.config.default_reporters = cljs.core.atom.call(null, null);
specljs.config.active_reporters = function active_reporters() {
  if(cljs.core.truth_(specljs.config._STAR_reporters_STAR_)) {
    return specljs.config._STAR_reporters_STAR_
  }else {
    var temp__4090__auto__ = cljs.core.deref.call(null, specljs.config.default_reporters);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var reporters = temp__4090__auto__;
      return reporters
    }else {
      throw new Error("*reporters* is unbound and no default value has been provided");
    }
  }
};
specljs.config.default_runner = cljs.core.atom.call(null, null);
specljs.config.default_runner_fn = cljs.core.atom.call(null, null);
specljs.config.active_runner = function active_runner() {
  if(cljs.core.truth_(specljs.config._STAR_runner_STAR_)) {
    return specljs.config._STAR_runner_STAR_
  }else {
    var temp__4090__auto__ = cljs.core.deref.call(null, specljs.config.default_runner);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var runner = temp__4090__auto__;
      return runner
    }else {
      throw new Error("*runner* is unbound and no default value has been provided");
    }
  }
};
specljs.config._STAR_color_QMARK__STAR_ = false;
specljs.config._STAR_full_stack_trace_QMARK__STAR_ = false;
specljs.config._STAR_tag_filter_STAR_ = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "include", "include", 2956478490), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "exclude", "exclude", 3987722572), cljs.core.PersistentHashSet.EMPTY], true);
specljs.config.default_config = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "specs", "specs", 1123545994), cljs.core.PersistentVector.fromArray(["spec"], true), new cljs.core.Keyword(null, "runner", "runner", 4389065378), "standard", new cljs.core.Keyword(null, "reporters", "reporters", 660581156), cljs.core.PersistentVector.fromArray(["progress"], true), new cljs.core.Keyword(null, "tags", "tags", 1017456523), cljs.core.PersistentVector.EMPTY], true);
specljs.config.config_bindings = function config_bindings() {
  throw"Not Supported";
};
specljs.config.load_runner = function load_runner(name) {
  try {
    return specljs.platform.dynamically_invoke.call(null, [cljs.core.str("specljs.run."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-runner")].join(""))
  }catch(e18143) {
    if(e18143 instanceof Error) {
      var e = e18143;
      throw new Error([cljs.core.str("Failed to load runner: "), cljs.core.str(name)].join(""), e);
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18143;
      }else {
        return null
      }
    }
  }
};
specljs.config.load_reporter = function load_reporter(name) {
  try {
    return specljs.platform.dynamically_invoke.call(null, [cljs.core.str("specljs.report."), cljs.core.str(name)].join(""), [cljs.core.str("new-"), cljs.core.str(name), cljs.core.str("-reporter")].join(""))
  }catch(e18145) {
    if(e18145 instanceof Error) {
      var e = e18145;
      throw new Error([cljs.core.str("Failed to load reporter: "), cljs.core.str(name)].join(""), e);
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e18145;
      }else {
        return null
      }
    }
  }
};
specljs.config.parse_tags = function parse_tags(values) {
  var result = cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "includes", "includes", 1104163901), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "excludes", "excludes", 3007959371), cljs.core.PersistentHashSet.EMPTY], true);
  var values__$1 = values;
  while(true) {
    if(cljs.core.seq.call(null, values__$1)) {
      var value = cljs.core.name.call(null, cljs.core.first.call(null, values__$1));
      if(cljs.core._EQ_.call(null, "~", cljs.core.first.call(null, value))) {
        var G__18146 = cljs.core.update_in.call(null, result, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)], true), cljs.core.conj, cljs.core.keyword.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.rest.call(null, value))));
        var G__18147 = cljs.core.rest.call(null, values__$1);
        result = G__18146;
        values__$1 = G__18147;
        continue
      }else {
        var G__18148 = cljs.core.update_in.call(null, result, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "includes", "includes", 1104163901)], true), cljs.core.conj, cljs.core.keyword.call(null, value));
        var G__18149 = cljs.core.rest.call(null, values__$1);
        result = G__18148;
        values__$1 = G__18149;
        continue
      }
    }else {
      return result
    }
    break
  }
};
specljs.config.config_mappings = function config_mappings(_) {
  throw"Not Supported";
};
specljs.config.with_config = function with_config(config, action) {
  var _STAR_runner_STAR_18156 = specljs.config._STAR_runner_STAR_;
  var _STAR_reporters_STAR_18157 = specljs.config._STAR_reporters_STAR_;
  var _STAR_specs_STAR_18158 = specljs.config._STAR_specs_STAR_;
  var _STAR_color_QMARK__STAR_18159 = specljs.config._STAR_color_QMARK__STAR_;
  var _STAR_full_stack_trace_QMARK__STAR_18160 = specljs.config._STAR_full_stack_trace_QMARK__STAR_;
  var _STAR_tag_filter_STAR_18161 = specljs.config._STAR_tag_filter_STAR_;
  try {
    specljs.config._STAR_runner_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "runner", "runner", 4389065378)).cljs$core$IFn$_invoke$arity$1(config)) ? function() {
      cljs.core.println.call(null, "loading runner in config");
      return specljs.config.load_runner.call(null, (new cljs.core.Keyword(null, "runner", "runner", 4389065378)).cljs$core$IFn$_invoke$arity$1(config))
    }() : specljs.config.active_runner.call(null);
    specljs.config._STAR_reporters_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "reporters", "reporters", 660581156)).cljs$core$IFn$_invoke$arity$1(config)) ? cljs.core.mapv.call(null, specljs.config.load_reporter, (new cljs.core.Keyword(null, "reporters", "reporters", 660581156)).cljs$core$IFn$_invoke$arity$1(config)) : specljs.config.active_reporters.call(null);
    specljs.config._STAR_specs_STAR_ = (new cljs.core.Keyword(null, "specs", "specs", 1123545994)).cljs$core$IFn$_invoke$arity$1(config);
    specljs.config._STAR_color_QMARK__STAR_ = (new cljs.core.Keyword(null, "color", "color", 1108746965)).cljs$core$IFn$_invoke$arity$1(config);
    specljs.config._STAR_full_stack_trace_QMARK__STAR_ = !((new cljs.core.Keyword(null, "stacktrace", "stacktrace", 3069736751)).cljs$core$IFn$_invoke$arity$1(config) == null);
    specljs.config._STAR_tag_filter_STAR_ = specljs.config.parse_tags.call(null, (new cljs.core.Keyword(null, "tags", "tags", 1017456523)).cljs$core$IFn$_invoke$arity$1(config));
    return action.call(null)
  }finally {
    specljs.config._STAR_tag_filter_STAR_ = _STAR_tag_filter_STAR_18161;
    specljs.config._STAR_full_stack_trace_QMARK__STAR_ = _STAR_full_stack_trace_QMARK__STAR_18160;
    specljs.config._STAR_color_QMARK__STAR_ = _STAR_color_QMARK__STAR_18159;
    specljs.config._STAR_specs_STAR_ = _STAR_specs_STAR_18158;
    specljs.config._STAR_reporters_STAR_ = _STAR_reporters_STAR_18157;
    specljs.config._STAR_runner_STAR_ = _STAR_runner_STAR_18156
  }
};
goog.provide("specljs.reporting");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("specljs.results");
goog.require("specljs.config");
goog.require("specljs.platform");
goog.require("specljs.results");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("goog.string");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.reporting.tally_time = function tally_time(results) {
  return cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.map.call(null, function(p1__17956_SHARP_) {
    return p1__17956_SHARP_.seconds
  }, results))
};
specljs.reporting.Reporter = {};
specljs.reporting.report_message = function report_message(reporter, message) {
  if(function() {
    var and__3119__auto__ = reporter;
    if(and__3119__auto__) {
      return reporter.specljs$reporting$Reporter$report_message$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return reporter.specljs$reporting$Reporter$report_message$arity$2(reporter, message)
  }else {
    var x__3723__auto__ = reporter == null ? null : reporter;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_message[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_message["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-message", reporter);
        }
      }
    }().call(null, reporter, message)
  }
};
specljs.reporting.report_description = function report_description(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_description$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_description$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-description", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.reporting.report_pass = function report_pass(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_pass$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_pass$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_pass[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_pass["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pass", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_pending = function report_pending(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_pending$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_pending$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_pending[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_pending["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-pending", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_fail = function report_fail(this$, result) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_fail$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_fail$arity$2(this$, result)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_fail[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_fail["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-fail", this$);
        }
      }
    }().call(null, this$, result)
  }
};
specljs.reporting.report_runs = function report_runs(this$, results) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_runs$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_runs$arity$2(this$, results)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_runs[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_runs["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-runs", this$);
        }
      }
    }().call(null, this$, results)
  }
};
specljs.reporting.report_error = function report_error(this$, exception) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$reporting$Reporter$report_error$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$reporting$Reporter$report_error$arity$2(this$, exception)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.reporting.report_error[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.reporting.report_error["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Reporter.report-error", this$);
        }
      }
    }().call(null, this$, exception)
  }
};
specljs.reporting.report_run = function() {
  var method_table__3901__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var prefer_table__3902__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var method_cache__3903__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var cached_hierarchy__3904__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var hierarchy__3905__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", 3129050535), cljs.core.get_global_hierarchy.call(null));
  return new cljs.core.MultiFn("report-run", function(result, reporters) {
    return cljs.core.type.call(null, result)
  }, new cljs.core.Keyword(null, "default", "default", 2558708147), hierarchy__3905__auto__, method_table__3901__auto__, prefer_table__3902__auto__, method_cache__3903__auto__, cached_hierarchy__3904__auto__)
}();
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.PassResult, function(result, reporters) {
  var seq__17957 = cljs.core.seq.call(null, reporters);
  var chunk__17958 = null;
  var count__17959 = 0;
  var i__17960 = 0;
  while(true) {
    if(i__17960 < count__17959) {
      var reporter = cljs.core._nth.call(null, chunk__17958, i__17960);
      specljs.reporting.report_pass.call(null, reporter, result);
      var G__17961 = seq__17957;
      var G__17962 = chunk__17958;
      var G__17963 = count__17959;
      var G__17964 = i__17960 + 1;
      seq__17957 = G__17961;
      chunk__17958 = G__17962;
      count__17959 = G__17963;
      i__17960 = G__17964;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17957);
      if(temp__4092__auto__) {
        var seq__17957__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17957__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17957__$1);
          var G__17965 = cljs.core.chunk_rest.call(null, seq__17957__$1);
          var G__17966 = c__3844__auto__;
          var G__17967 = cljs.core.count.call(null, c__3844__auto__);
          var G__17968 = 0;
          seq__17957 = G__17965;
          chunk__17958 = G__17966;
          count__17959 = G__17967;
          i__17960 = G__17968;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17957__$1);
          specljs.reporting.report_pass.call(null, reporter, result);
          var G__17969 = cljs.core.next.call(null, seq__17957__$1);
          var G__17970 = null;
          var G__17971 = 0;
          var G__17972 = 0;
          seq__17957 = G__17969;
          chunk__17958 = G__17970;
          count__17959 = G__17971;
          i__17960 = G__17972;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.FailResult, function(result, reporters) {
  var seq__17973 = cljs.core.seq.call(null, reporters);
  var chunk__17974 = null;
  var count__17975 = 0;
  var i__17976 = 0;
  while(true) {
    if(i__17976 < count__17975) {
      var reporter = cljs.core._nth.call(null, chunk__17974, i__17976);
      specljs.reporting.report_fail.call(null, reporter, result);
      var G__17977 = seq__17973;
      var G__17978 = chunk__17974;
      var G__17979 = count__17975;
      var G__17980 = i__17976 + 1;
      seq__17973 = G__17977;
      chunk__17974 = G__17978;
      count__17975 = G__17979;
      i__17976 = G__17980;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17973);
      if(temp__4092__auto__) {
        var seq__17973__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17973__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17973__$1);
          var G__17981 = cljs.core.chunk_rest.call(null, seq__17973__$1);
          var G__17982 = c__3844__auto__;
          var G__17983 = cljs.core.count.call(null, c__3844__auto__);
          var G__17984 = 0;
          seq__17973 = G__17981;
          chunk__17974 = G__17982;
          count__17975 = G__17983;
          i__17976 = G__17984;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17973__$1);
          specljs.reporting.report_fail.call(null, reporter, result);
          var G__17985 = cljs.core.next.call(null, seq__17973__$1);
          var G__17986 = null;
          var G__17987 = 0;
          var G__17988 = 0;
          seq__17973 = G__17985;
          chunk__17974 = G__17986;
          count__17975 = G__17987;
          i__17976 = G__17988;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.PendingResult, function(result, reporters) {
  var seq__17989 = cljs.core.seq.call(null, reporters);
  var chunk__17990 = null;
  var count__17991 = 0;
  var i__17992 = 0;
  while(true) {
    if(i__17992 < count__17991) {
      var reporter = cljs.core._nth.call(null, chunk__17990, i__17992);
      specljs.reporting.report_pending.call(null, reporter, result);
      var G__17993 = seq__17989;
      var G__17994 = chunk__17990;
      var G__17995 = count__17991;
      var G__17996 = i__17992 + 1;
      seq__17989 = G__17993;
      chunk__17990 = G__17994;
      count__17991 = G__17995;
      i__17992 = G__17996;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17989);
      if(temp__4092__auto__) {
        var seq__17989__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17989__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17989__$1);
          var G__17997 = cljs.core.chunk_rest.call(null, seq__17989__$1);
          var G__17998 = c__3844__auto__;
          var G__17999 = cljs.core.count.call(null, c__3844__auto__);
          var G__18000 = 0;
          seq__17989 = G__17997;
          chunk__17990 = G__17998;
          count__17991 = G__17999;
          i__17992 = G__18000;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__17989__$1);
          specljs.reporting.report_pending.call(null, reporter, result);
          var G__18001 = cljs.core.next.call(null, seq__17989__$1);
          var G__18002 = null;
          var G__18003 = 0;
          var G__18004 = 0;
          seq__17989 = G__18001;
          chunk__17990 = G__18002;
          count__17991 = G__18003;
          i__17992 = G__18004;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
cljs.core._add_method.call(null, specljs.reporting.report_run, specljs.results.ErrorResult, function(result, reporters) {
  var seq__18005 = cljs.core.seq.call(null, reporters);
  var chunk__18006 = null;
  var count__18007 = 0;
  var i__18008 = 0;
  while(true) {
    if(i__18008 < count__18007) {
      var reporter = cljs.core._nth.call(null, chunk__18006, i__18008);
      specljs.reporting.report_error.call(null, reporter, result);
      var G__18009 = seq__18005;
      var G__18010 = chunk__18006;
      var G__18011 = count__18007;
      var G__18012 = i__18008 + 1;
      seq__18005 = G__18009;
      chunk__18006 = G__18010;
      count__18007 = G__18011;
      i__18008 = G__18012;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18005);
      if(temp__4092__auto__) {
        var seq__18005__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18005__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__18005__$1);
          var G__18013 = cljs.core.chunk_rest.call(null, seq__18005__$1);
          var G__18014 = c__3844__auto__;
          var G__18015 = cljs.core.count.call(null, c__3844__auto__);
          var G__18016 = 0;
          seq__18005 = G__18013;
          chunk__18006 = G__18014;
          count__18007 = G__18015;
          i__18008 = G__18016;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__18005__$1);
          specljs.reporting.report_error.call(null, reporter, result);
          var G__18017 = cljs.core.next.call(null, seq__18005__$1);
          var G__18018 = null;
          var G__18019 = 0;
          var G__18020 = 0;
          seq__18005 = G__18017;
          chunk__18006 = G__18018;
          count__18007 = G__18019;
          i__18008 = G__18020;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
});
specljs.reporting.stylizer = function stylizer(code) {
  return function(text) {
    if(cljs.core.truth_(specljs.config._STAR_color_QMARK__STAR_)) {
      return[cljs.core.str("\u001b["), cljs.core.str(code), cljs.core.str("m"), cljs.core.str(text), cljs.core.str("\u001b[0m")].join("")
    }else {
      return text
    }
  }
};
specljs.reporting.red = specljs.reporting.stylizer.call(null, "31");
specljs.reporting.green = specljs.reporting.stylizer.call(null, "32");
specljs.reporting.yellow = specljs.reporting.stylizer.call(null, "33");
specljs.reporting.grey = specljs.reporting.stylizer.call(null, "90");
specljs.reporting.print_elides = function print_elides(n) {
  if(n > 0) {
    return cljs.core.println.call(null, "\t...", n, "stack levels elided ...")
  }else {
    return null
  }
};
specljs.reporting.print_stack_levels = function print_stack_levels(exception) {
  var levels_18021 = specljs.platform.stack_trace.call(null, exception);
  var elides_18022 = 0;
  while(true) {
    if(cljs.core.seq.call(null, levels_18021)) {
      var level_18023 = cljs.core.first.call(null, levels_18021);
      if(cljs.core.truth_(specljs.platform.elide_level_QMARK_.call(null, level_18023))) {
        var G__18024 = cljs.core.rest.call(null, levels_18021);
        var G__18025 = elides_18022 + 1;
        levels_18021 = G__18024;
        elides_18022 = G__18025;
        continue
      }else {
        specljs.reporting.print_elides.call(null, elides_18022);
        cljs.core.println.call(null, [cljs.core.str(level_18023)].join(""));
        var G__18026 = cljs.core.rest.call(null, levels_18021);
        var G__18027 = 0;
        levels_18021 = G__18026;
        elides_18022 = G__18027;
        continue
      }
    }else {
      specljs.reporting.print_elides.call(null, elides_18022)
    }
    break
  }
  var temp__4090__auto__ = specljs.platform.cause.call(null, exception);
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cause = temp__4090__auto__;
    return specljs.reporting.print_exception.call(null, "Caused by:", cause)
  }else {
    return null
  }
};
specljs.reporting.print_exception = function print_exception(prefix, exception) {
  if(cljs.core.truth_(prefix)) {
    cljs.core.println.call(null, prefix, [cljs.core.str(exception)].join(""))
  }else {
    cljs.core.println.call(null, [cljs.core.str(exception)].join(""))
  }
  return specljs.reporting.print_stack_levels.call(null, exception)
};
specljs.reporting.stack_trace_str = function stack_trace_str(exception) {
  var sb__3941__auto__ = new goog.string.StringBuffer;
  var _STAR_print_fn_STAR_18029_18030 = cljs.core._STAR_print_fn_STAR_;
  try {
    cljs.core._STAR_print_fn_STAR_ = function(x__3942__auto__) {
      return sb__3941__auto__.append(x__3942__auto__)
    };
    if(cljs.core.truth_(specljs.config._STAR_full_stack_trace_QMARK__STAR_)) {
      specljs.platform.print_stack_trace.call(null, exception)
    }else {
      specljs.reporting.print_exception.call(null, null, exception)
    }
  }finally {
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_18029_18030
  }
  return[cljs.core.str(sb__3941__auto__)].join("")
};
specljs.reporting.prefix = function() {
  var prefix__delegate = function(pre, args) {
    var value = cljs.core.apply.call(null, cljs.core.str, args);
    var lines = clojure.string.split.call(null, value, /[\r\n]+/);
    var prefixed_lines = cljs.core.map.call(null, function(value, lines) {
      return function(p1__18031_SHARP_) {
        return[cljs.core.str(pre), cljs.core.str(p1__18031_SHARP_)].join("")
      }
    }(value, lines), lines);
    return clojure.string.join.call(null, specljs.platform.endl, prefixed_lines)
  };
  var prefix = function(pre, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return prefix__delegate.call(this, pre, args)
  };
  prefix.cljs$lang$maxFixedArity = 1;
  prefix.cljs$lang$applyTo = function(arglist__18032) {
    var pre = cljs.core.first(arglist__18032);
    var args = cljs.core.rest(arglist__18032);
    return prefix__delegate(pre, args)
  };
  prefix.cljs$core$IFn$_invoke$arity$variadic = prefix__delegate;
  return prefix
}();
specljs.reporting.indent = function() {
  var indent__delegate = function(n, args) {
    var spaces = n * 2 | 0;
    var indention = cljs.core.reduce.call(null, function(spaces) {
      return function(p, _) {
        return[cljs.core.str(" "), cljs.core.str(p)].join("")
      }
    }(spaces), "", cljs.core.range.call(null, spaces));
    return cljs.core.apply.call(null, specljs.reporting.prefix, indention, args)
  };
  var indent = function(n, var_args) {
    var args = null;
    if(arguments.length > 1) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return indent__delegate.call(this, n, args)
  };
  indent.cljs$lang$maxFixedArity = 1;
  indent.cljs$lang$applyTo = function(arglist__18033) {
    var n = cljs.core.first(arglist__18033);
    var args = cljs.core.rest(arglist__18033);
    return indent__delegate(n, args)
  };
  indent.cljs$core$IFn$_invoke$arity$variadic = indent__delegate;
  return indent
}();
specljs.reporting.report_description_STAR_ = function report_description_STAR_(reporters, description) {
  var seq__18038 = cljs.core.seq.call(null, reporters);
  var chunk__18039 = null;
  var count__18040 = 0;
  var i__18041 = 0;
  while(true) {
    if(i__18041 < count__18040) {
      var reporter = cljs.core._nth.call(null, chunk__18039, i__18041);
      specljs.reporting.report_description.call(null, reporter, description);
      var G__18042 = seq__18038;
      var G__18043 = chunk__18039;
      var G__18044 = count__18040;
      var G__18045 = i__18041 + 1;
      seq__18038 = G__18042;
      chunk__18039 = G__18043;
      count__18040 = G__18044;
      i__18041 = G__18045;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18038);
      if(temp__4092__auto__) {
        var seq__18038__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18038__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__18038__$1);
          var G__18046 = cljs.core.chunk_rest.call(null, seq__18038__$1);
          var G__18047 = c__3844__auto__;
          var G__18048 = cljs.core.count.call(null, c__3844__auto__);
          var G__18049 = 0;
          seq__18038 = G__18046;
          chunk__18039 = G__18047;
          count__18040 = G__18048;
          i__18041 = G__18049;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__18038__$1);
          specljs.reporting.report_description.call(null, reporter, description);
          var G__18050 = cljs.core.next.call(null, seq__18038__$1);
          var G__18051 = null;
          var G__18052 = 0;
          var G__18053 = 0;
          seq__18038 = G__18050;
          chunk__18039 = G__18051;
          count__18040 = G__18052;
          i__18041 = G__18053;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_runs_STAR_ = function report_runs_STAR_(reporters, results) {
  var seq__18058 = cljs.core.seq.call(null, reporters);
  var chunk__18059 = null;
  var count__18060 = 0;
  var i__18061 = 0;
  while(true) {
    if(i__18061 < count__18060) {
      var reporter = cljs.core._nth.call(null, chunk__18059, i__18061);
      specljs.reporting.report_runs.call(null, reporter, results);
      var G__18062 = seq__18058;
      var G__18063 = chunk__18059;
      var G__18064 = count__18060;
      var G__18065 = i__18061 + 1;
      seq__18058 = G__18062;
      chunk__18059 = G__18063;
      count__18060 = G__18064;
      i__18061 = G__18065;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18058);
      if(temp__4092__auto__) {
        var seq__18058__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18058__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__18058__$1);
          var G__18066 = cljs.core.chunk_rest.call(null, seq__18058__$1);
          var G__18067 = c__3844__auto__;
          var G__18068 = cljs.core.count.call(null, c__3844__auto__);
          var G__18069 = 0;
          seq__18058 = G__18066;
          chunk__18059 = G__18067;
          count__18060 = G__18068;
          i__18061 = G__18069;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__18058__$1);
          specljs.reporting.report_runs.call(null, reporter, results);
          var G__18070 = cljs.core.next.call(null, seq__18058__$1);
          var G__18071 = null;
          var G__18072 = 0;
          var G__18073 = 0;
          seq__18058 = G__18070;
          chunk__18059 = G__18071;
          count__18060 = G__18072;
          i__18061 = G__18073;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_message_STAR_ = function report_message_STAR_(reporters, message) {
  var seq__18078 = cljs.core.seq.call(null, reporters);
  var chunk__18079 = null;
  var count__18080 = 0;
  var i__18081 = 0;
  while(true) {
    if(i__18081 < count__18080) {
      var reporter = cljs.core._nth.call(null, chunk__18079, i__18081);
      specljs.reporting.report_message.call(null, reporter, message);
      var G__18082 = seq__18078;
      var G__18083 = chunk__18079;
      var G__18084 = count__18080;
      var G__18085 = i__18081 + 1;
      seq__18078 = G__18082;
      chunk__18079 = G__18083;
      count__18080 = G__18084;
      i__18081 = G__18085;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18078);
      if(temp__4092__auto__) {
        var seq__18078__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18078__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__18078__$1);
          var G__18086 = cljs.core.chunk_rest.call(null, seq__18078__$1);
          var G__18087 = c__3844__auto__;
          var G__18088 = cljs.core.count.call(null, c__3844__auto__);
          var G__18089 = 0;
          seq__18078 = G__18086;
          chunk__18079 = G__18087;
          count__18080 = G__18088;
          i__18081 = G__18089;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__18078__$1);
          specljs.reporting.report_message.call(null, reporter, message);
          var G__18090 = cljs.core.next.call(null, seq__18078__$1);
          var G__18091 = null;
          var G__18092 = 0;
          var G__18093 = 0;
          seq__18078 = G__18090;
          chunk__18079 = G__18091;
          count__18080 = G__18092;
          i__18081 = G__18093;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.reporting.report_error_STAR_ = function report_error_STAR_(reporters, exception) {
  var seq__18098 = cljs.core.seq.call(null, reporters);
  var chunk__18099 = null;
  var count__18100 = 0;
  var i__18101 = 0;
  while(true) {
    if(i__18101 < count__18100) {
      var reporter = cljs.core._nth.call(null, chunk__18099, i__18101);
      specljs.reporting.report_error.call(null, reporter, exception);
      var G__18102 = seq__18098;
      var G__18103 = chunk__18099;
      var G__18104 = count__18100;
      var G__18105 = i__18101 + 1;
      seq__18098 = G__18102;
      chunk__18099 = G__18103;
      count__18100 = G__18104;
      i__18101 = G__18105;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__18098);
      if(temp__4092__auto__) {
        var seq__18098__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18098__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__18098__$1);
          var G__18106 = cljs.core.chunk_rest.call(null, seq__18098__$1);
          var G__18107 = c__3844__auto__;
          var G__18108 = cljs.core.count.call(null, c__3844__auto__);
          var G__18109 = 0;
          seq__18098 = G__18106;
          chunk__18099 = G__18107;
          count__18100 = G__18108;
          i__18101 = G__18109;
          continue
        }else {
          var reporter = cljs.core.first.call(null, seq__18098__$1);
          specljs.reporting.report_error.call(null, reporter, exception);
          var G__18110 = cljs.core.next.call(null, seq__18098__$1);
          var G__18111 = null;
          var G__18112 = 0;
          var G__18113 = 0;
          seq__18098 = G__18110;
          chunk__18099 = G__18111;
          count__18100 = G__18112;
          i__18101 = G__18113;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
goog.provide("specljs.components");
goog.require("cljs.core");
specljs.components.SpecComponent = {};
specljs.components.install = function install(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$components$SpecComponent$install$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$components$SpecComponent$install$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.components.install[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.components.install["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "SpecComponent.install", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.components.SpecComponent["object"] = true;
specljs.components.install["object"] = function(this$, description) {
  return null
};
cljs.core.PersistentVector.prototype.specljs$components$SpecComponent$ = true;
cljs.core.PersistentVector.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17754 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17755 = null;
  var count__17756 = 0;
  var i__17757 = 0;
  while(true) {
    if(i__17757 < count__17756) {
      var component = cljs.core._nth.call(null, chunk__17755, i__17757);
      specljs.components.install.call(null, component, description);
      var G__17770 = seq__17754;
      var G__17771 = chunk__17755;
      var G__17772 = count__17756;
      var G__17773 = i__17757 + 1;
      seq__17754 = G__17770;
      chunk__17755 = G__17771;
      count__17756 = G__17772;
      i__17757 = G__17773;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17754);
      if(temp__4092__auto__) {
        var seq__17754__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17754__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17754__$1);
          var G__17774 = cljs.core.chunk_rest.call(null, seq__17754__$1);
          var G__17775 = c__3844__auto__;
          var G__17776 = cljs.core.count.call(null, c__3844__auto__);
          var G__17777 = 0;
          seq__17754 = G__17774;
          chunk__17755 = G__17775;
          count__17756 = G__17776;
          i__17757 = G__17777;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17754__$1);
          specljs.components.install.call(null, component, description);
          var G__17778 = cljs.core.next.call(null, seq__17754__$1);
          var G__17779 = null;
          var G__17780 = 0;
          var G__17781 = 0;
          seq__17754 = G__17778;
          chunk__17755 = G__17779;
          count__17756 = G__17780;
          i__17757 = G__17781;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.EmptyList.prototype.specljs$components$SpecComponent$ = true;
cljs.core.EmptyList.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17758 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17759 = null;
  var count__17760 = 0;
  var i__17761 = 0;
  while(true) {
    if(i__17761 < count__17760) {
      var component = cljs.core._nth.call(null, chunk__17759, i__17761);
      specljs.components.install.call(null, component, description);
      var G__17782 = seq__17758;
      var G__17783 = chunk__17759;
      var G__17784 = count__17760;
      var G__17785 = i__17761 + 1;
      seq__17758 = G__17782;
      chunk__17759 = G__17783;
      count__17760 = G__17784;
      i__17761 = G__17785;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17758);
      if(temp__4092__auto__) {
        var seq__17758__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17758__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17758__$1);
          var G__17786 = cljs.core.chunk_rest.call(null, seq__17758__$1);
          var G__17787 = c__3844__auto__;
          var G__17788 = cljs.core.count.call(null, c__3844__auto__);
          var G__17789 = 0;
          seq__17758 = G__17786;
          chunk__17759 = G__17787;
          count__17760 = G__17788;
          i__17761 = G__17789;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17758__$1);
          specljs.components.install.call(null, component, description);
          var G__17790 = cljs.core.next.call(null, seq__17758__$1);
          var G__17791 = null;
          var G__17792 = 0;
          var G__17793 = 0;
          seq__17758 = G__17790;
          chunk__17759 = G__17791;
          count__17760 = G__17792;
          i__17761 = G__17793;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.List.prototype.specljs$components$SpecComponent$ = true;
cljs.core.List.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17762 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17763 = null;
  var count__17764 = 0;
  var i__17765 = 0;
  while(true) {
    if(i__17765 < count__17764) {
      var component = cljs.core._nth.call(null, chunk__17763, i__17765);
      specljs.components.install.call(null, component, description);
      var G__17794 = seq__17762;
      var G__17795 = chunk__17763;
      var G__17796 = count__17764;
      var G__17797 = i__17765 + 1;
      seq__17762 = G__17794;
      chunk__17763 = G__17795;
      count__17764 = G__17796;
      i__17765 = G__17797;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17762);
      if(temp__4092__auto__) {
        var seq__17762__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17762__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17762__$1);
          var G__17798 = cljs.core.chunk_rest.call(null, seq__17762__$1);
          var G__17799 = c__3844__auto__;
          var G__17800 = cljs.core.count.call(null, c__3844__auto__);
          var G__17801 = 0;
          seq__17762 = G__17798;
          chunk__17763 = G__17799;
          count__17764 = G__17800;
          i__17765 = G__17801;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17762__$1);
          specljs.components.install.call(null, component, description);
          var G__17802 = cljs.core.next.call(null, seq__17762__$1);
          var G__17803 = null;
          var G__17804 = 0;
          var G__17805 = 0;
          seq__17762 = G__17802;
          chunk__17763 = G__17803;
          count__17764 = G__17804;
          i__17765 = G__17805;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
cljs.core.LazySeq.prototype.specljs$components$SpecComponent$ = true;
cljs.core.LazySeq.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var this$__$1 = this;
  var seq__17766 = cljs.core.seq.call(null, cljs.core.seq.call(null, this$__$1));
  var chunk__17767 = null;
  var count__17768 = 0;
  var i__17769 = 0;
  while(true) {
    if(i__17769 < count__17768) {
      var component = cljs.core._nth.call(null, chunk__17767, i__17769);
      specljs.components.install.call(null, component, description);
      var G__17806 = seq__17766;
      var G__17807 = chunk__17767;
      var G__17808 = count__17768;
      var G__17809 = i__17769 + 1;
      seq__17766 = G__17806;
      chunk__17767 = G__17807;
      count__17768 = G__17808;
      i__17769 = G__17809;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17766);
      if(temp__4092__auto__) {
        var seq__17766__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17766__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17766__$1);
          var G__17810 = cljs.core.chunk_rest.call(null, seq__17766__$1);
          var G__17811 = c__3844__auto__;
          var G__17812 = cljs.core.count.call(null, c__3844__auto__);
          var G__17813 = 0;
          seq__17766 = G__17810;
          chunk__17767 = G__17811;
          count__17768 = G__17812;
          i__17769 = G__17813;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17766__$1);
          specljs.components.install.call(null, component, description);
          var G__17814 = cljs.core.next.call(null, seq__17766__$1);
          var G__17815 = null;
          var G__17816 = 0;
          var G__17817 = 0;
          seq__17766 = G__17814;
          chunk__17767 = G__17815;
          count__17768 = G__17816;
          i__17769 = G__17817;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.components.Description = function(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds) {
  this.name = name;
  this.ns = ns;
  this.parent = parent;
  this.children = children;
  this.charcteristics = charcteristics;
  this.tags = tags;
  this.befores = befores;
  this.before_alls = before_alls;
  this.afters = afters;
  this.after_alls = after_alls;
  this.withs = withs;
  this.with_alls = with_alls;
  this.arounds = arounds
};
specljs.components.Description.cljs$lang$type = true;
specljs.components.Description.cljs$lang$ctorStr = "specljs.components/Description";
specljs.components.Description.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Description")
};
specljs.components.Description.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return[cljs.core.str("Description: "), cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("")
};
specljs.components.Description.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Description.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.children, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Description = function __GT_Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds) {
  return new specljs.components.Description(name, ns, parent, children, charcteristics, tags, befores, before_alls, afters, after_alls, withs, with_alls, arounds)
};
specljs.components.new_description = function new_description(name, ns) {
  return new specljs.components.Description(name, ns, cljs.core.atom.call(null, null), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentHashSet.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), 
  cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY))
};
specljs.components.Characteristic = function(name, parent, body) {
  this.name = name;
  this.parent = parent;
  this.body = body
};
specljs.components.Characteristic.cljs$lang$type = true;
specljs.components.Characteristic.cljs$lang$ctorStr = "specljs.components/Characteristic";
specljs.components.Characteristic.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Characteristic")
};
specljs.components.Characteristic.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return[cljs.core.str('"'), cljs.core.str(self__.name), cljs.core.str('"')].join("")
};
specljs.components.Characteristic.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Characteristic.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.reset_BANG_.call(null, this$__$1.parent, description);
  return cljs.core.swap_BANG_.call(null, description.charcteristics, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Characteristic = function __GT_Characteristic(name, parent, body) {
  return new specljs.components.Characteristic(name, parent, body)
};
specljs.components.new_characteristic = function() {
  var new_characteristic = null;
  var new_characteristic__2 = function(name, body) {
    return new specljs.components.Characteristic(name, cljs.core.atom.call(null, null), body)
  };
  var new_characteristic__3 = function(name, description, body) {
    return new specljs.components.Characteristic(name, cljs.core.atom.call(null, description), body)
  };
  new_characteristic = function(name, description, body) {
    switch(arguments.length) {
      case 2:
        return new_characteristic__2.call(this, name, description);
      case 3:
        return new_characteristic__3.call(this, name, description, body)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  new_characteristic.cljs$core$IFn$_invoke$arity$2 = new_characteristic__2;
  new_characteristic.cljs$core$IFn$_invoke$arity$3 = new_characteristic__3;
  return new_characteristic
}();
specljs.components.Before = function(body) {
  this.body = body
};
specljs.components.Before.cljs$lang$type = true;
specljs.components.Before.cljs$lang$ctorStr = "specljs.components/Before";
specljs.components.Before.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Before")
};
specljs.components.Before.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Before.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.befores, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Before = function __GT_Before(body) {
  return new specljs.components.Before(body)
};
specljs.components.new_before = function new_before(body) {
  return new specljs.components.Before(body)
};
specljs.components.After = function(body) {
  this.body = body
};
specljs.components.After.cljs$lang$type = true;
specljs.components.After.cljs$lang$ctorStr = "specljs.components/After";
specljs.components.After.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/After")
};
specljs.components.After.prototype.specljs$components$SpecComponent$ = true;
specljs.components.After.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.afters, cljs.core.conj, this$__$1)
};
specljs.components.__GT_After = function __GT_After(body) {
  return new specljs.components.After(body)
};
specljs.components.new_after = function new_after(body) {
  return new specljs.components.After(body)
};
specljs.components.Around = function(body) {
  this.body = body
};
specljs.components.Around.cljs$lang$type = true;
specljs.components.Around.cljs$lang$ctorStr = "specljs.components/Around";
specljs.components.Around.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Around")
};
specljs.components.Around.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Around.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.arounds, cljs.core.conj, this$__$1)
};
specljs.components.__GT_Around = function __GT_Around(body) {
  return new specljs.components.Around(body)
};
specljs.components.new_around = function new_around(body) {
  return new specljs.components.Around(body)
};
specljs.components.BeforeAll = function(body) {
  this.body = body
};
specljs.components.BeforeAll.cljs$lang$type = true;
specljs.components.BeforeAll.cljs$lang$ctorStr = "specljs.components/BeforeAll";
specljs.components.BeforeAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/BeforeAll")
};
specljs.components.BeforeAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.BeforeAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.before_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_BeforeAll = function __GT_BeforeAll(body) {
  return new specljs.components.BeforeAll(body)
};
specljs.components.new_before_all = function new_before_all(body) {
  return new specljs.components.BeforeAll(body)
};
specljs.components.AfterAll = function(body) {
  this.body = body
};
specljs.components.AfterAll.cljs$lang$type = true;
specljs.components.AfterAll.cljs$lang$ctorStr = "specljs.components/AfterAll";
specljs.components.AfterAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/AfterAll")
};
specljs.components.AfterAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.AfterAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.after_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_AfterAll = function __GT_AfterAll(body) {
  return new specljs.components.AfterAll(body)
};
specljs.components.new_after_all = function new_after_all(body) {
  return new specljs.components.AfterAll(body)
};
specljs.components.With = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
specljs.components.With.cljs$lang$type = true;
specljs.components.With.cljs$lang$ctorStr = "specljs.components/With";
specljs.components.With.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/With")
};
specljs.components.With.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null))
  }else {
  }
  return cljs.core.deref.call(null, self__.value)
};
specljs.components.With.prototype.specljs$components$SpecComponent$ = true;
specljs.components.With.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.withs, cljs.core.conj, this$__$1)
};
specljs.components.__GT_With = function __GT_With(name, unique_name, body, value, bang) {
  return new specljs.components.With(name, unique_name, body, value, bang)
};
specljs.components.reset_with = function reset_with(with$) {
  cljs.core.reset_BANG_.call(null, with$.value, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402));
  if(cljs.core.truth_(with$.bang)) {
    return cljs.core.deref.call(null, with$)
  }else {
    return null
  }
};
specljs.components.new_with = function new_with(name, unique_name, body, bang) {
  var with$ = new specljs.components.With(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402)), bang);
  if(cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with$)
  }else {
  }
  return with$
};
specljs.components.WithAll = function(name, unique_name, body, value, bang) {
  this.name = name;
  this.unique_name = unique_name;
  this.body = body;
  this.value = value;
  this.bang = bang;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
specljs.components.WithAll.cljs$lang$type = true;
specljs.components.WithAll.cljs$lang$ctorStr = "specljs.components/WithAll";
specljs.components.WithAll.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/WithAll")
};
specljs.components.WithAll.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core._EQ_.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402), cljs.core.deref.call(null, self__.value))) {
    cljs.core.reset_BANG_.call(null, self__.value, self__.body.call(null))
  }else {
  }
  return cljs.core.deref.call(null, self__.value)
};
specljs.components.WithAll.prototype.specljs$components$SpecComponent$ = true;
specljs.components.WithAll.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.with_alls, cljs.core.conj, this$__$1)
};
specljs.components.__GT_WithAll = function __GT_WithAll(name, unique_name, body, value, bang) {
  return new specljs.components.WithAll(name, unique_name, body, value, bang)
};
specljs.components.new_with_all = function new_with_all(name, unique_name, body, bang) {
  var with_all = new specljs.components.WithAll(name, unique_name, body, cljs.core.atom.call(null, new cljs.core.Keyword("specljs.components", "none", "specljs.components/none", 4499029402)), bang);
  if(cljs.core.truth_(bang)) {
    cljs.core.deref.call(null, with_all)
  }else {
  }
  return with_all
};
specljs.components.Tag = function(name) {
  this.name = name
};
specljs.components.Tag.cljs$lang$type = true;
specljs.components.Tag.cljs$lang$ctorStr = "specljs.components/Tag";
specljs.components.Tag.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.components/Tag")
};
specljs.components.Tag.prototype.specljs$components$SpecComponent$ = true;
specljs.components.Tag.prototype.specljs$components$SpecComponent$install$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, description.tags, cljs.core.conj, self__.name)
};
specljs.components.__GT_Tag = function __GT_Tag(name) {
  return new specljs.components.Tag(name)
};
specljs.components.new_tag = function new_tag(name) {
  return new specljs.components.Tag(name)
};
goog.provide("specljs.tags");
goog.require("cljs.core");
goog.require("specljs.config");
goog.require("clojure.string");
goog.require("clojure.set");
goog.require("specljs.config");
goog.require("clojure.string");
goog.require("clojure.set");
specljs.tags.pass_includes_QMARK_ = function pass_includes_QMARK_(includes, tags) {
  if(cljs.core.empty_QMARK_.call(null, includes)) {
    return true
  }else {
    return cljs.core._EQ_.call(null, includes, clojure.set.intersection.call(null, includes, cljs.core.set.call(null, tags)))
  }
};
specljs.tags.pass_excludes_QMARK_ = function pass_excludes_QMARK_(excludes, tags) {
  if(cljs.core.empty_QMARK_.call(null, excludes)) {
    return true
  }else {
    return cljs.core.not.call(null, cljs.core.some.call(null, function(p1__17718_SHARP_) {
      return cljs.core.contains_QMARK_.call(null, excludes, p1__17718_SHARP_)
    }, tags))
  }
};
specljs.tags.pass_tag_filter_QMARK_ = function() {
  var pass_tag_filter_QMARK_ = null;
  var pass_tag_filter_QMARK___1 = function(tags) {
    return pass_tag_filter_QMARK_.call(null, specljs.config._STAR_tag_filter_STAR_, tags)
  };
  var pass_tag_filter_QMARK___2 = function(filter, tags) {
    var and__3119__auto__ = specljs.tags.pass_includes_QMARK_.call(null, (new cljs.core.Keyword(null, "includes", "includes", 1104163901)).cljs$core$IFn$_invoke$arity$1(filter), tags);
    if(cljs.core.truth_(and__3119__auto__)) {
      return specljs.tags.pass_excludes_QMARK_.call(null, (new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)).cljs$core$IFn$_invoke$arity$1(filter), tags)
    }else {
      return and__3119__auto__
    }
  };
  pass_tag_filter_QMARK_ = function(filter, tags) {
    switch(arguments.length) {
      case 1:
        return pass_tag_filter_QMARK___1.call(this, filter);
      case 2:
        return pass_tag_filter_QMARK___2.call(this, filter, tags)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$1 = pass_tag_filter_QMARK___1;
  pass_tag_filter_QMARK_.cljs$core$IFn$_invoke$arity$2 = pass_tag_filter_QMARK___2;
  return pass_tag_filter_QMARK_
}();
specljs.tags.tags_for = function tags_for(context) {
  if(cljs.core.truth_(context)) {
    return clojure.set.union.call(null, tags_for.call(null, cljs.core.deref.call(null, context.parent)), cljs.core.deref.call(null, context.tags))
  }else {
    return cljs.core.PersistentHashSet.EMPTY
  }
};
specljs.tags.tag_sets_for = function tag_sets_for(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__17719_SHARP_) {
    return!(p1__17719_SHARP_ == null)
  }, function(p1__17720_SHARP_) {
    return cljs.core.deref.call(null, p1__17720_SHARP_.children)
  }, context);
  return cljs.core.map.call(null, specljs.tags.tags_for, context_seq)
};
specljs.tags.context_with_tags_seq = function context_with_tags_seq(context) {
  var context_seq = cljs.core.tree_seq.call(null, function(p1__17721_SHARP_) {
    return!(p1__17721_SHARP_ == null)
  }, function(p1__17722_SHARP_) {
    return cljs.core.deref.call(null, p1__17722_SHARP_.children)
  }, context);
  return cljs.core.map.call(null, function(p1__17723_SHARP_) {
    return cljs.core.hash_map.call(null, new cljs.core.Keyword(null, "context", "context", 1965435169), p1__17723_SHARP_, new cljs.core.Keyword(null, "tag-set", "tag-set", 3758720801), specljs.tags.tags_for.call(null, p1__17723_SHARP_))
  }, context_seq)
};
specljs.tags.describe_filter = function() {
  var describe_filter = null;
  var describe_filter__0 = function() {
    return describe_filter.call(null, specljs.config._STAR_tag_filter_STAR_)
  };
  var describe_filter__1 = function(filter) {
    var includes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "includes", "includes", 1104163901)).cljs$core$IFn$_invoke$arity$1(filter)));
    var excludes = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.name, (new cljs.core.Keyword(null, "excludes", "excludes", 3007959371)).cljs$core$IFn$_invoke$arity$1(filter)));
    if(includes || excludes) {
      return[cljs.core.str("Filtering tags."), cljs.core.str(includes ? [cljs.core.str(" Including: "), cljs.core.str(clojure.string.join.call(null, ", ", includes)), cljs.core.str(".")].join("") : null), cljs.core.str(excludes ? [cljs.core.str(" Excluding: "), cljs.core.str(clojure.string.join.call(null, ", ", excludes)), cljs.core.str(".")].join("") : null)].join("")
    }else {
      return null
    }
  };
  describe_filter = function(filter) {
    switch(arguments.length) {
      case 0:
        return describe_filter__0.call(this);
      case 1:
        return describe_filter__1.call(this, filter)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  describe_filter.cljs$core$IFn$_invoke$arity$0 = describe_filter__0;
  describe_filter.cljs$core$IFn$_invoke$arity$1 = describe_filter__1;
  return describe_filter
}();
goog.provide("specljs.running");
goog.require("cljs.core");
goog.require("specljs.components");
goog.require("specljs.config");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.tags");
goog.require("specljs.platform");
goog.require("specljs.tags");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("specljs.components");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.running.eval_components = function eval_components(components) {
  var seq__17822 = cljs.core.seq.call(null, components);
  var chunk__17823 = null;
  var count__17824 = 0;
  var i__17825 = 0;
  while(true) {
    if(i__17825 < count__17824) {
      var component = cljs.core._nth.call(null, chunk__17823, i__17825);
      component.body.call(null);
      var G__17826 = seq__17822;
      var G__17827 = chunk__17823;
      var G__17828 = count__17824;
      var G__17829 = i__17825 + 1;
      seq__17822 = G__17826;
      chunk__17823 = G__17827;
      count__17824 = G__17828;
      i__17825 = G__17829;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17822);
      if(temp__4092__auto__) {
        var seq__17822__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17822__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17822__$1);
          var G__17830 = cljs.core.chunk_rest.call(null, seq__17822__$1);
          var G__17831 = c__3844__auto__;
          var G__17832 = cljs.core.count.call(null, c__3844__auto__);
          var G__17833 = 0;
          seq__17822 = G__17830;
          chunk__17823 = G__17831;
          count__17824 = G__17832;
          i__17825 = G__17833;
          continue
        }else {
          var component = cljs.core.first.call(null, seq__17822__$1);
          component.body.call(null);
          var G__17834 = cljs.core.next.call(null, seq__17822__$1);
          var G__17835 = null;
          var G__17836 = 0;
          var G__17837 = 0;
          seq__17822 = G__17834;
          chunk__17823 = G__17835;
          count__17824 = G__17836;
          i__17825 = G__17837;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.running.nested_fns = function nested_fns(base, fns) {
  if(cljs.core.seq.call(null, fns)) {
    return cljs.core.partial.call(null, cljs.core.first.call(null, fns), nested_fns.call(null, base, cljs.core.rest.call(null, fns)))
  }else {
    return base
  }
};
specljs.running.eval_characteristic = function eval_characteristic(befores, body, afters) {
  specljs.running.eval_components.call(null, befores);
  try {
    return body.call(null)
  }finally {
    specljs.running.eval_components.call(null, afters)
  }
};
specljs.running.reset_withs = function reset_withs(withs) {
  var seq__17842 = cljs.core.seq.call(null, withs);
  var chunk__17843 = null;
  var count__17844 = 0;
  var i__17845 = 0;
  while(true) {
    if(i__17845 < count__17844) {
      var with$ = cljs.core._nth.call(null, chunk__17843, i__17845);
      specljs.components.reset_with.call(null, with$);
      var G__17846 = seq__17842;
      var G__17847 = chunk__17843;
      var G__17848 = count__17844;
      var G__17849 = i__17845 + 1;
      seq__17842 = G__17846;
      chunk__17843 = G__17847;
      count__17844 = G__17848;
      i__17845 = G__17849;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17842);
      if(temp__4092__auto__) {
        var seq__17842__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17842__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17842__$1);
          var G__17850 = cljs.core.chunk_rest.call(null, seq__17842__$1);
          var G__17851 = c__3844__auto__;
          var G__17852 = cljs.core.count.call(null, c__3844__auto__);
          var G__17853 = 0;
          seq__17842 = G__17850;
          chunk__17843 = G__17851;
          count__17844 = G__17852;
          i__17845 = G__17853;
          continue
        }else {
          var with$ = cljs.core.first.call(null, seq__17842__$1);
          specljs.components.reset_with.call(null, with$);
          var G__17854 = cljs.core.next.call(null, seq__17842__$1);
          var G__17855 = null;
          var G__17856 = 0;
          var G__17857 = 0;
          seq__17842 = G__17854;
          chunk__17843 = G__17855;
          count__17844 = G__17856;
          i__17845 = G__17857;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.running.collect_components = function collect_components(getter, description) {
  var description__$1 = description;
  var components = cljs.core.PersistentVector.EMPTY;
  while(true) {
    if(cljs.core.truth_(description__$1)) {
      var G__17858 = cljs.core.deref.call(null, description__$1.parent);
      var G__17859 = cljs.core.concat.call(null, getter.call(null, description__$1), components);
      description__$1 = G__17858;
      components = G__17859;
      continue
    }else {
      return components
    }
    break
  }
};
specljs.running.report_result = function report_result(result_constructor, characteristic, start_time, reporters, failure) {
  var present_args = cljs.core.filter.call(null, cljs.core.identity, cljs.core.PersistentVector.fromArray([characteristic, specljs.platform.secs_since.call(null, start_time), failure], true));
  var result = cljs.core.apply.call(null, result_constructor, present_args);
  specljs.reporting.report_run.call(null, result, reporters);
  return result
};
specljs.running.do_characteristic = function do_characteristic(characteristic, reporters) {
  var description = cljs.core.deref.call(null, characteristic.parent);
  var befores = specljs.running.collect_components.call(null, function(description) {
    return function(p1__17860_SHARP_) {
      return cljs.core.deref.call(null, p1__17860_SHARP_.befores)
    }
  }(description), description);
  var afters = specljs.running.collect_components.call(null, function(description, befores) {
    return function(p1__17861_SHARP_) {
      return cljs.core.deref.call(null, p1__17861_SHARP_.afters)
    }
  }(description, befores), description);
  var core_body = characteristic.body;
  var before_and_after_body = function(description, befores, afters, core_body) {
    return function() {
      return specljs.running.eval_characteristic.call(null, befores, core_body, afters)
    }
  }(description, befores, afters, core_body);
  var arounds = specljs.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body) {
    return function(p1__17862_SHARP_) {
      return cljs.core.deref.call(null, p1__17862_SHARP_.arounds)
    }
  }(description, befores, afters, core_body, before_and_after_body), description);
  var full_body = specljs.running.nested_fns.call(null, before_and_after_body, cljs.core.map.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds) {
    return function(p1__17863_SHARP_) {
      return p1__17863_SHARP_.body
    }
  }(description, befores, afters, core_body, before_and_after_body, arounds), arounds));
  var withs = specljs.running.collect_components.call(null, function(description, befores, afters, core_body, before_and_after_body, arounds, full_body) {
    return function(p1__17864_SHARP_) {
      return cljs.core.deref.call(null, p1__17864_SHARP_.withs)
    }
  }(description, befores, afters, core_body, before_and_after_body, arounds, full_body), description);
  var start_time = specljs.platform.current_time.call(null);
  try {
    full_body.call(null);
    return specljs.running.report_result.call(null, specljs.results.pass_result, characteristic, start_time, reporters, null)
  }catch(e17866) {
    if(e17866 instanceof Object) {
      var e = e17866;
      if(cljs.core.truth_(specljs.platform.pending_QMARK_.call(null, e))) {
        return specljs.running.report_result.call(null, specljs.results.pending_result, characteristic, start_time, reporters, e)
      }else {
        return specljs.running.report_result.call(null, specljs.results.fail_result, characteristic, start_time, reporters, e)
      }
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e17866;
      }else {
        return null
      }
    }
  }finally {
    specljs.running.reset_withs.call(null, withs)
  }
};
specljs.running.do_characteristics = function do_characteristics(characteristics, reporters) {
  return cljs.core.doall.call(null, function() {
    var iter__3813__auto__ = function iter__17871(s__17872) {
      return new cljs.core.LazySeq(null, function() {
        var s__17872__$1 = s__17872;
        while(true) {
          var temp__4092__auto__ = cljs.core.seq.call(null, s__17872__$1);
          if(temp__4092__auto__) {
            var s__17872__$2 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, s__17872__$2)) {
              var c__3811__auto__ = cljs.core.chunk_first.call(null, s__17872__$2);
              var size__3812__auto__ = cljs.core.count.call(null, c__3811__auto__);
              var b__17874 = cljs.core.chunk_buffer.call(null, size__3812__auto__);
              if(function() {
                var i__17873 = 0;
                while(true) {
                  if(i__17873 < size__3812__auto__) {
                    var characteristic = cljs.core._nth.call(null, c__3811__auto__, i__17873);
                    cljs.core.chunk_append.call(null, b__17874, specljs.running.do_characteristic.call(null, characteristic, reporters));
                    var G__17875 = i__17873 + 1;
                    i__17873 = G__17875;
                    continue
                  }else {
                    return true
                  }
                  break
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17874), iter__17871.call(null, cljs.core.chunk_rest.call(null, s__17872__$2)))
              }else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__17874), null)
              }
            }else {
              var characteristic = cljs.core.first.call(null, s__17872__$2);
              return cljs.core.cons.call(null, specljs.running.do_characteristic.call(null, characteristic, reporters), iter__17871.call(null, cljs.core.rest.call(null, s__17872__$2)))
            }
          }else {
            return null
          }
          break
        }
      }, null, null)
    };
    return iter__3813__auto__.call(null, characteristics)
  }())
};
specljs.running.do_child_contexts = function do_child_contexts(context, results, reporters) {
  var results__$1 = results;
  var contexts = cljs.core.deref.call(null, context.children);
  while(true) {
    if(cljs.core.seq.call(null, contexts)) {
      var G__17876 = cljs.core.concat.call(null, results__$1, specljs.running.do_description.call(null, cljs.core.first.call(null, contexts), reporters));
      var G__17877 = cljs.core.rest.call(null, contexts);
      results__$1 = G__17876;
      contexts = G__17877;
      continue
    }else {
      specljs.running.eval_components.call(null, cljs.core.deref.call(null, context.after_alls));
      return results__$1
    }
    break
  }
};
specljs.running.results_for_context = function results_for_context(context, reporters) {
  if(cljs.core.truth_(specljs.tags.pass_tag_filter_QMARK_.call(null, specljs.tags.tags_for.call(null, context)))) {
    return specljs.running.do_characteristics.call(null, cljs.core.deref.call(null, context.charcteristics), reporters)
  }else {
    return cljs.core.PersistentVector.EMPTY
  }
};
specljs.running.with_withs_bound = function with_withs_bound(description, body) {
  var withs = cljs.core.concat.call(null, cljs.core.deref.call(null, description.withs), cljs.core.deref.call(null, description.with_alls));
  var ns = clojure.string.replace.call(null, description.ns, "-", "_");
  var var_names = cljs.core.map.call(null, function(withs, ns) {
    return function(p1__17878_SHARP_) {
      return[cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__17878_SHARP_.name))].join("")
    }
  }(withs, ns), withs);
  var unique_names = cljs.core.map.call(null, function(withs, ns, var_names) {
    return function(p1__17879_SHARP_) {
      return[cljs.core.str(ns), cljs.core.str("."), cljs.core.str(cljs.core.name.call(null, p1__17879_SHARP_.unique_name))].join("")
    }
  }(withs, ns, var_names), withs);
  var seq__17892_17904 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, var_names, unique_names)));
  var chunk__17893_17905 = null;
  var count__17894_17906 = 0;
  var i__17895_17907 = 0;
  while(true) {
    if(i__17895_17907 < count__17894_17906) {
      var vec__17896_17908 = cljs.core._nth.call(null, chunk__17893_17905, i__17895_17907);
      var n_17909 = cljs.core.nth.call(null, vec__17896_17908, 0, null);
      var un_17910 = cljs.core.nth.call(null, vec__17896_17908, 1, null);
      var code_17911 = [cljs.core.str(n_17909), cljs.core.str(" \x3d "), cljs.core.str(un_17910), cljs.core.str(";")].join("");
      eval(code_17911);
      var G__17912 = seq__17892_17904;
      var G__17913 = chunk__17893_17905;
      var G__17914 = count__17894_17906;
      var G__17915 = i__17895_17907 + 1;
      seq__17892_17904 = G__17912;
      chunk__17893_17905 = G__17913;
      count__17894_17906 = G__17914;
      i__17895_17907 = G__17915;
      continue
    }else {
      var temp__4092__auto___17916 = cljs.core.seq.call(null, seq__17892_17904);
      if(temp__4092__auto___17916) {
        var seq__17892_17917__$1 = temp__4092__auto___17916;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17892_17917__$1)) {
          var c__3844__auto___17918 = cljs.core.chunk_first.call(null, seq__17892_17917__$1);
          var G__17919 = cljs.core.chunk_rest.call(null, seq__17892_17917__$1);
          var G__17920 = c__3844__auto___17918;
          var G__17921 = cljs.core.count.call(null, c__3844__auto___17918);
          var G__17922 = 0;
          seq__17892_17904 = G__17919;
          chunk__17893_17905 = G__17920;
          count__17894_17906 = G__17921;
          i__17895_17907 = G__17922;
          continue
        }else {
          var vec__17897_17923 = cljs.core.first.call(null, seq__17892_17917__$1);
          var n_17924 = cljs.core.nth.call(null, vec__17897_17923, 0, null);
          var un_17925 = cljs.core.nth.call(null, vec__17897_17923, 1, null);
          var code_17926 = [cljs.core.str(n_17924), cljs.core.str(" \x3d "), cljs.core.str(un_17925), cljs.core.str(";")].join("");
          eval(code_17926);
          var G__17927 = cljs.core.next.call(null, seq__17892_17917__$1);
          var G__17928 = null;
          var G__17929 = 0;
          var G__17930 = 0;
          seq__17892_17904 = G__17927;
          chunk__17893_17905 = G__17928;
          count__17894_17906 = G__17929;
          i__17895_17907 = G__17930;
          continue
        }
      }else {
      }
    }
    break
  }
  try {
    return body.call(null)
  }finally {
    var seq__17898_17931 = cljs.core.seq.call(null, var_names);
    var chunk__17899_17932 = null;
    var count__17900_17933 = 0;
    var i__17901_17934 = 0;
    while(true) {
      if(i__17901_17934 < count__17900_17933) {
        var vec__17902_17935 = cljs.core._nth.call(null, chunk__17899_17932, i__17901_17934);
        var n_17936 = cljs.core.nth.call(null, vec__17902_17935, 0, null);
        var code_17937 = [cljs.core.str(n_17936), cljs.core.str(" \x3d null;")].join("");
        eval(code_17937);
        var G__17938 = seq__17898_17931;
        var G__17939 = chunk__17899_17932;
        var G__17940 = count__17900_17933;
        var G__17941 = i__17901_17934 + 1;
        seq__17898_17931 = G__17938;
        chunk__17899_17932 = G__17939;
        count__17900_17933 = G__17940;
        i__17901_17934 = G__17941;
        continue
      }else {
        var temp__4092__auto___17942 = cljs.core.seq.call(null, seq__17898_17931);
        if(temp__4092__auto___17942) {
          var seq__17898_17943__$1 = temp__4092__auto___17942;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17898_17943__$1)) {
            var c__3844__auto___17944 = cljs.core.chunk_first.call(null, seq__17898_17943__$1);
            var G__17945 = cljs.core.chunk_rest.call(null, seq__17898_17943__$1);
            var G__17946 = c__3844__auto___17944;
            var G__17947 = cljs.core.count.call(null, c__3844__auto___17944);
            var G__17948 = 0;
            seq__17898_17931 = G__17945;
            chunk__17899_17932 = G__17946;
            count__17900_17933 = G__17947;
            i__17901_17934 = G__17948;
            continue
          }else {
            var vec__17903_17949 = cljs.core.first.call(null, seq__17898_17943__$1);
            var n_17950 = cljs.core.nth.call(null, vec__17903_17949, 0, null);
            var code_17951 = [cljs.core.str(n_17950), cljs.core.str(" \x3d null;")].join("");
            eval(code_17951);
            var G__17952 = cljs.core.next.call(null, seq__17898_17943__$1);
            var G__17953 = null;
            var G__17954 = 0;
            var G__17955 = 0;
            seq__17898_17931 = G__17952;
            chunk__17899_17932 = G__17953;
            count__17900_17933 = G__17954;
            i__17901_17934 = G__17955;
            continue
          }
        }else {
        }
      }
      break
    }
  }
};
specljs.running.do_description = function do_description(description, reporters) {
  var tag_sets = specljs.tags.tag_sets_for.call(null, description);
  if(cljs.core.truth_(cljs.core.some.call(null, specljs.tags.pass_tag_filter_QMARK_, tag_sets))) {
    specljs.reporting.report_description_STAR_.call(null, reporters, description);
    return specljs.running.with_withs_bound.call(null, description, function() {
      specljs.running.eval_components.call(null, cljs.core.deref.call(null, description.before_alls));
      try {
        var results = specljs.running.results_for_context.call(null, description, reporters);
        return specljs.running.do_child_contexts.call(null, description, results, reporters)
      }finally {
        specljs.running.reset_withs.call(null, cljs.core.deref.call(null, description.with_alls))
      }
    })
  }else {
    return null
  }
};
specljs.running.process_compile_error = function process_compile_error(runner, e) {
  var error_result = specljs.results.error_result.call(null, e);
  cljs.core.swap_BANG_.call(null, runner.results, cljs.core.conj, error_result);
  return specljs.reporting.report_run.call(null, error_result, specljs.config.active_reporters.call(null))
};
specljs.running.Runner = {};
specljs.running.run_directories = function run_directories(this$, directories, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_directories$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_directories$arity$3(this$, directories, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_directories[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_directories["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-directories", this$);
        }
      }
    }().call(null, this$, directories, reporters)
  }
};
specljs.running.submit_description = function submit_description(this$, description) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$submit_description$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$submit_description$arity$2(this$, description)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.submit_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.submit_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.submit-description", this$);
        }
      }
    }().call(null, this$, description)
  }
};
specljs.running.run_description = function run_description(this$, description, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_description$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_description$arity$3(this$, description, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_description[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_description["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-description", this$);
        }
      }
    }().call(null, this$, description, reporters)
  }
};
specljs.running.run_and_report = function run_and_report(this$, reporters) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.specljs$running$Runner$run_and_report$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.specljs$running$Runner$run_and_report$arity$2(this$, reporters)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = specljs.running.run_and_report[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = specljs.running.run_and_report["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Runner.run-and-report", this$);
        }
      }
    }().call(null, this$, reporters)
  }
};
goog.provide("specljs.report.progress");
goog.require("cljs.core");
goog.require("specljs.platform");
goog.require("specljs.config");
goog.require("specljs.reporting");
goog.require("specljs.results");
goog.require("clojure.string");
goog.require("clojure.string");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.platform");
goog.require("specljs.config");
specljs.report.progress.full_name = function full_name(characteristic) {
  var context = cljs.core.deref.call(null, characteristic.parent);
  var name = characteristic.name;
  while(true) {
    if(cljs.core.truth_(context)) {
      var G__17656 = cljs.core.deref.call(null, context.parent);
      var G__17657 = [cljs.core.str(context.name), cljs.core.str(" "), cljs.core.str(name)].join("");
      context = G__17656;
      name = G__17657;
      continue
    }else {
      return name
    }
    break
  }
};
specljs.report.progress.print_failure = function print_failure(id, result) {
  var characteristic = result.characteristic;
  var failure = result.failure;
  cljs.core.println.call(null);
  cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, id, ") ", specljs.report.progress.full_name.call(null, characteristic)));
  cljs.core.println.call(null, specljs.reporting.red.call(null, specljs.reporting.indent.call(null, 2.5, specljs.platform.error_message.call(null, failure))));
  if(cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, failure), specljs.platform.failure)) {
    return cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.platform.failure_source.call(null, failure))))
  }else {
    return cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, failure))))
  }
};
specljs.report.progress.print_failures = function print_failures(failures) {
  if(cljs.core.seq.call(null, failures)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Failures:")
  }else {
  }
  var n__3891__auto__ = cljs.core.count.call(null, failures);
  var i = 0;
  while(true) {
    if(i < n__3891__auto__) {
      specljs.report.progress.print_failure.call(null, i + 1, cljs.core.nth.call(null, failures, i));
      var G__17658 = i + 1;
      i = G__17658;
      continue
    }else {
      return null
    }
    break
  }
};
specljs.report.progress.print_pendings = function print_pendings(pending_results) {
  if(cljs.core.seq.call(null, pending_results)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Pending:")
  }else {
  }
  var seq__17663 = cljs.core.seq.call(null, pending_results);
  var chunk__17664 = null;
  var count__17665 = 0;
  var i__17666 = 0;
  while(true) {
    if(i__17666 < count__17665) {
      var result = cljs.core._nth.call(null, chunk__17664, i__17666);
      cljs.core.println.call(null);
      cljs.core.println.call(null, specljs.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(specljs.report.progress.full_name.call(null, result.characteristic))].join("")));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.error_message.call(null, result.exception))].join("")));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.failure_source.call(null, result.exception))].join("")));
      var G__17667 = seq__17663;
      var G__17668 = chunk__17664;
      var G__17669 = count__17665;
      var G__17670 = i__17666 + 1;
      seq__17663 = G__17667;
      chunk__17664 = G__17668;
      count__17665 = G__17669;
      i__17666 = G__17670;
      continue
    }else {
      var temp__4092__auto__ = cljs.core.seq.call(null, seq__17663);
      if(temp__4092__auto__) {
        var seq__17663__$1 = temp__4092__auto__;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17663__$1)) {
          var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17663__$1);
          var G__17671 = cljs.core.chunk_rest.call(null, seq__17663__$1);
          var G__17672 = c__3844__auto__;
          var G__17673 = cljs.core.count.call(null, c__3844__auto__);
          var G__17674 = 0;
          seq__17663 = G__17671;
          chunk__17664 = G__17672;
          count__17665 = G__17673;
          i__17666 = G__17674;
          continue
        }else {
          var result = cljs.core.first.call(null, seq__17663__$1);
          cljs.core.println.call(null);
          cljs.core.println.call(null, specljs.reporting.yellow.call(null, [cljs.core.str("  "), cljs.core.str(specljs.report.progress.full_name.call(null, result.characteristic))].join("")));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.error_message.call(null, result.exception))].join("")));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, [cljs.core.str("    ; "), cljs.core.str(specljs.platform.failure_source.call(null, result.exception))].join("")));
          var G__17675 = cljs.core.next.call(null, seq__17663__$1);
          var G__17676 = null;
          var G__17677 = 0;
          var G__17678 = 0;
          seq__17663 = G__17675;
          chunk__17664 = G__17676;
          count__17665 = G__17677;
          i__17666 = G__17678;
          continue
        }
      }else {
        return null
      }
    }
    break
  }
};
specljs.report.progress.print_errors = function print_errors(error_results) {
  if(cljs.core.seq.call(null, error_results)) {
    cljs.core.println.call(null);
    cljs.core.println.call(null, "Errors:")
  }else {
  }
  var seq__17685_17691 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, cljs.core.interleave.call(null, cljs.core.iterate.call(null, cljs.core.inc, 1), error_results)));
  var chunk__17686_17692 = null;
  var count__17687_17693 = 0;
  var i__17688_17694 = 0;
  while(true) {
    if(i__17688_17694 < count__17687_17693) {
      var vec__17689_17695 = cljs.core._nth.call(null, chunk__17686_17692, i__17688_17694);
      var number_17696 = cljs.core.nth.call(null, vec__17689_17695, 0, null);
      var result_17697 = cljs.core.nth.call(null, vec__17689_17695, 1, null);
      cljs.core.println.call(null);
      cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, number_17696, ") ", specljs.reporting.red.call(null, [cljs.core.str(result_17697.exception)].join(""))));
      cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, result_17697.exception))));
      var G__17698 = seq__17685_17691;
      var G__17699 = chunk__17686_17692;
      var G__17700 = count__17687_17693;
      var G__17701 = i__17688_17694 + 1;
      seq__17685_17691 = G__17698;
      chunk__17686_17692 = G__17699;
      count__17687_17693 = G__17700;
      i__17688_17694 = G__17701;
      continue
    }else {
      var temp__4092__auto___17702 = cljs.core.seq.call(null, seq__17685_17691);
      if(temp__4092__auto___17702) {
        var seq__17685_17703__$1 = temp__4092__auto___17702;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17685_17703__$1)) {
          var c__3844__auto___17704 = cljs.core.chunk_first.call(null, seq__17685_17703__$1);
          var G__17705 = cljs.core.chunk_rest.call(null, seq__17685_17703__$1);
          var G__17706 = c__3844__auto___17704;
          var G__17707 = cljs.core.count.call(null, c__3844__auto___17704);
          var G__17708 = 0;
          seq__17685_17691 = G__17705;
          chunk__17686_17692 = G__17706;
          count__17687_17693 = G__17707;
          i__17688_17694 = G__17708;
          continue
        }else {
          var vec__17690_17709 = cljs.core.first.call(null, seq__17685_17703__$1);
          var number_17710 = cljs.core.nth.call(null, vec__17690_17709, 0, null);
          var result_17711 = cljs.core.nth.call(null, vec__17690_17709, 1, null);
          cljs.core.println.call(null);
          cljs.core.println.call(null, specljs.reporting.indent.call(null, 1, number_17710, ") ", specljs.reporting.red.call(null, [cljs.core.str(result_17711.exception)].join(""))));
          cljs.core.println.call(null, specljs.reporting.grey.call(null, specljs.reporting.indent.call(null, 2.5, specljs.reporting.stack_trace_str.call(null, result_17711.exception))));
          var G__17712 = cljs.core.next.call(null, seq__17685_17703__$1);
          var G__17713 = null;
          var G__17714 = 0;
          var G__17715 = 0;
          seq__17685_17691 = G__17712;
          chunk__17686_17692 = G__17713;
          count__17687_17693 = G__17714;
          i__17688_17694 = G__17715;
          continue
        }
      }else {
      }
    }
    break
  }
  return cljs.core.flush.call(null)
};
specljs.report.progress.print_duration = function print_duration(results) {
  cljs.core.println.call(null);
  return cljs.core.println.call(null, "Finished in", specljs.platform.format_seconds.call(null, specljs.reporting.tally_time.call(null, results)), "seconds")
};
specljs.report.progress.color_fn_for = function color_fn_for(result_map) {
  if(cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, cljs.core.concat.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(result_map), (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(result_map))))) {
    return specljs.reporting.red
  }else {
    if(cljs.core.not_EQ_.call(null, 0, cljs.core.count.call(null, (new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(result_map)))) {
      return specljs.reporting.yellow
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return specljs.reporting.green
      }else {
        return null
      }
    }
  }
};
specljs.report.progress.apply_pending_tally = function apply_pending_tally(report, tally) {
  if((new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" pending")].join(""))
  }else {
    return report
  }
};
specljs.report.progress.apply_error_tally = function apply_error_tally(report, tally) {
  if((new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(tally) > 0) {
    return cljs.core.conj.call(null, report, [cljs.core.str((new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" errors")].join(""))
  }else {
    return report
  }
};
specljs.report.progress.describe_counts_for = function describe_counts_for(result_map) {
  var tally = cljs.core.zipmap.call(null, cljs.core.keys.call(null, result_map), cljs.core.map.call(null, cljs.core.count, cljs.core.vals.call(null, result_map)));
  var always_on_counts = cljs.core.PersistentVector.fromArray([[cljs.core.str(cljs.core.apply.call(null, cljs.core._PLUS_, cljs.core.vals.call(null, tally))), cljs.core.str(" examples")].join(""), [cljs.core.str((new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(tally)), cljs.core.str(" failures")].join("")], true);
  return clojure.string.join.call(null, ", ", specljs.report.progress.apply_error_tally.call(null, specljs.report.progress.apply_pending_tally.call(null, always_on_counts, tally), tally))
};
specljs.report.progress.print_tally = function print_tally(result_map) {
  var color_fn = specljs.report.progress.color_fn_for.call(null, result_map);
  return cljs.core.println.call(null, color_fn.call(null, specljs.report.progress.describe_counts_for.call(null, result_map)))
};
specljs.report.progress.print_summary = function print_summary(results) {
  var result_map = specljs.results.categorize.call(null, results);
  specljs.report.progress.print_failures.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1017039504)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_pendings.call(null, (new cljs.core.Keyword(null, "pending", "pending", 4626283785)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_errors.call(null, (new cljs.core.Keyword(null, "error", "error", 1110689146)).cljs$core$IFn$_invoke$arity$1(result_map));
  specljs.report.progress.print_duration.call(null, results);
  return specljs.report.progress.print_tally.call(null, result_map)
};
specljs.report.progress.ProgressReporter = function() {
};
specljs.report.progress.ProgressReporter.cljs$lang$type = true;
specljs.report.progress.ProgressReporter.cljs$lang$ctorStr = "specljs.report.progress/ProgressReporter";
specljs.report.progress.ProgressReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.progress/ProgressReporter")
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.green.call(null, "."));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.yellow.call(null, "*"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.red.call(null, "F"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.print.call(null, specljs.reporting.red.call(null, "E"));
  return cljs.core.flush.call(null)
};
specljs.report.progress.ProgressReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null);
  return specljs.report.progress.print_summary.call(null, results)
};
specljs.report.progress.__GT_ProgressReporter = function __GT_ProgressReporter() {
  return new specljs.report.progress.ProgressReporter
};
specljs.report.progress.new_progress_reporter = function new_progress_reporter() {
  return new specljs.report.progress.ProgressReporter
};
cljs.core.reset_BANG_.call(null, specljs.config.default_reporters, cljs.core.PersistentVector.fromArray([specljs.report.progress.new_progress_reporter.call(null)], true));
goog.provide("specljs.run.standard");
goog.require("cljs.core");
goog.require("specljs.tags");
goog.require("specljs.running");
goog.require("specljs.reporting");
goog.require("specljs.config");
goog.require("specljs.results");
goog.require("specljs.tags");
goog.require("specljs.running");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.report.progress");
goog.require("specljs.config");
goog.require("specljs.components");
specljs.run.standard.counter = cljs.core.atom.call(null, 0);
specljs.run.standard.StandardRunner = function(num, descriptions, results) {
  this.num = num;
  this.descriptions = descriptions;
  this.results = results
};
specljs.run.standard.StandardRunner.cljs$lang$type = true;
specljs.run.standard.StandardRunner.cljs$lang$ctorStr = "specljs.run.standard/StandardRunner";
specljs.run.standard.StandardRunner.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.run.standard/StandardRunner")
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$ = true;
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_directories$arity$3 = function(this$, directories, reporters) {
  var self__ = this;
  var this$__$1 = this;
  return alert("StandardRunner.run-directories:  I don't know how to do this.")
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$submit_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.swap_BANG_.call(null, self__.descriptions, cljs.core.conj, description)
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_description$arity$3 = function(this$, description, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var run_results = specljs.running.do_description.call(null, description, reporters);
  return cljs.core.swap_BANG_.call(null, self__.results, cljs.core.into, run_results)
};
specljs.run.standard.StandardRunner.prototype.specljs$running$Runner$run_and_report$arity$2 = function(this$, reporters) {
  var self__ = this;
  var this$__$1 = this;
  var seq__18114_18118 = cljs.core.seq.call(null, cljs.core.deref.call(null, self__.descriptions));
  var chunk__18115_18119 = null;
  var count__18116_18120 = 0;
  var i__18117_18121 = 0;
  while(true) {
    if(i__18117_18121 < count__18116_18120) {
      var description_18122 = cljs.core._nth.call(null, chunk__18115_18119, i__18117_18121);
      specljs.running.run_description.call(null, this$__$1, description_18122, reporters);
      var G__18123 = seq__18114_18118;
      var G__18124 = chunk__18115_18119;
      var G__18125 = count__18116_18120;
      var G__18126 = i__18117_18121 + 1;
      seq__18114_18118 = G__18123;
      chunk__18115_18119 = G__18124;
      count__18116_18120 = G__18125;
      i__18117_18121 = G__18126;
      continue
    }else {
      var temp__4092__auto___18127 = cljs.core.seq.call(null, seq__18114_18118);
      if(temp__4092__auto___18127) {
        var seq__18114_18128__$1 = temp__4092__auto___18127;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__18114_18128__$1)) {
          var c__3844__auto___18129 = cljs.core.chunk_first.call(null, seq__18114_18128__$1);
          var G__18130 = cljs.core.chunk_rest.call(null, seq__18114_18128__$1);
          var G__18131 = c__3844__auto___18129;
          var G__18132 = cljs.core.count.call(null, c__3844__auto___18129);
          var G__18133 = 0;
          seq__18114_18118 = G__18130;
          chunk__18115_18119 = G__18131;
          count__18116_18120 = G__18132;
          i__18117_18121 = G__18133;
          continue
        }else {
          var description_18134 = cljs.core.first.call(null, seq__18114_18128__$1);
          specljs.running.run_description.call(null, this$__$1, description_18134, reporters);
          var G__18135 = cljs.core.next.call(null, seq__18114_18128__$1);
          var G__18136 = null;
          var G__18137 = 0;
          var G__18138 = 0;
          seq__18114_18118 = G__18135;
          chunk__18115_18119 = G__18136;
          count__18116_18120 = G__18137;
          i__18117_18121 = G__18138;
          continue
        }
      }else {
      }
    }
    break
  }
  return specljs.reporting.report_runs_STAR_.call(null, reporters, cljs.core.deref.call(null, self__.results))
};
specljs.run.standard.__GT_StandardRunner = function __GT_StandardRunner(num, descriptions, results) {
  return new specljs.run.standard.StandardRunner(num, descriptions, results)
};
specljs.components.Description.prototype.cljs$core$IPrintWithWriter$ = true;
specljs.components.Description.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  return cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspecljs.component.Description(name: "), cljs.core.str(x__$1.name), cljs.core.str(")\x3e")].join(""))
};
specljs.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$ = true;
specljs.run.standard.StandardRunner.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var x__$1 = this;
  cljs.core._write.call(null, writer, [cljs.core.str("#\x3cspecljs.run.standard.StandardRunner(num: "), cljs.core.str(x__$1.num), cljs.core.str(", descriptions: ")].join(""));
  cljs.core._pr_writer.call(null, cljs.core.deref.call(null, x__$1.descriptions), writer, opts);
  return cljs.core._write.call(null, writer, ")\x3e")
};
specljs.run.standard.new_standard_runner = function new_standard_runner() {
  return new specljs.run.standard.StandardRunner(cljs.core.swap_BANG_.call(null, specljs.run.standard.counter, cljs.core.inc), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY), cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY))
};
cljs.core.reset_BANG_.call(null, specljs.config.default_runner_fn, specljs.run.standard.new_standard_runner);
cljs.core.reset_BANG_.call(null, specljs.config.default_runner, specljs.run.standard.new_standard_runner.call(null));
specljs.run.standard.armed = false;
specljs.run.standard.run_specs = function() {
  var run_specs__delegate = function(configurations) {
    if(cljs.core.truth_(specljs.run.standard.armed)) {
      var config = cljs.core.apply.call(null, cljs.core.hash_map, configurations);
      var config__$1 = cljs.core.merge.call(null, cljs.core.dissoc.call(null, specljs.config.default_config, new cljs.core.Keyword(null, "runner", "runner", 4389065378)), config);
      return specljs.config.with_config.call(null, config__$1, function() {
        var temp__4090__auto___18139 = specljs.tags.describe_filter.call(null);
        if(cljs.core.truth_(temp__4090__auto___18139)) {
          var filter_msg_18140 = temp__4090__auto___18139;
          specljs.reporting.report_message_STAR_.call(null, specljs.config.active_reporters.call(null), filter_msg_18140)
        }else {
        }
        specljs.running.run_and_report.call(null, specljs.config.active_runner.call(null), specljs.config.active_reporters.call(null));
        return specljs.results.fail_count.call(null, cljs.core.deref.call(null, specljs.config.active_runner.call(null).results))
      })
    }else {
      return null
    }
  };
  var run_specs = function(var_args) {
    var configurations = null;
    if(arguments.length > 0) {
      configurations = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return run_specs__delegate.call(this, configurations)
  };
  run_specs.cljs$lang$maxFixedArity = 0;
  run_specs.cljs$lang$applyTo = function(arglist__18141) {
    var configurations = cljs.core.seq(arglist__18141);
    return run_specs__delegate(configurations)
  };
  run_specs.cljs$core$IFn$_invoke$arity$variadic = run_specs__delegate;
  return run_specs
}();
goog.provide("specljs.report.silent");
goog.require("cljs.core");
goog.require("specljs.reporting");
specljs.report.silent.SilentReporter = function(passes, fails, results) {
  this.passes = passes;
  this.fails = fails;
  this.results = results
};
specljs.report.silent.SilentReporter.cljs$lang$type = true;
specljs.report.silent.SilentReporter.cljs$lang$ctorStr = "specljs.report.silent/SilentReporter";
specljs.report.silent.SilentReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.silent/SilentReporter")
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results__$1) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.SilentReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, exception) {
  var self__ = this;
  var this$__$1 = this;
  return null
};
specljs.report.silent.__GT_SilentReporter = function __GT_SilentReporter(passes, fails, results) {
  return new specljs.report.silent.SilentReporter(passes, fails, results)
};
specljs.report.silent.new_silent_reporter = function new_silent_reporter() {
  return new specljs.report.silent.SilentReporter(cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, null))
};
goog.provide("specljs.report.documentation");
goog.require("cljs.core");
goog.require("specljs.report.progress");
goog.require("specljs.config");
goog.require("specljs.platform");
goog.require("specljs.reporting");
goog.require("specljs.results");
goog.require("specljs.results");
goog.require("specljs.reporting");
goog.require("specljs.report.progress");
goog.require("specljs.platform");
goog.require("specljs.config");
specljs.report.documentation.level_of = function level_of(component) {
  var component__$1 = cljs.core.deref.call(null, component.parent);
  var level = 0;
  while(true) {
    if(cljs.core.truth_(component__$1)) {
      var G__17716 = cljs.core.deref.call(null, component__$1.parent);
      var G__17717 = level + 1;
      component__$1 = G__17716;
      level = G__17717;
      continue
    }else {
      return level
    }
    break
  }
};
specljs.report.documentation.DocumentationReporter = function() {
};
specljs.report.documentation.DocumentationReporter.cljs$lang$type = true;
specljs.report.documentation.DocumentationReporter.cljs$lang$ctorStr = "specljs.report.documentation/DocumentationReporter";
specljs.report.documentation.DocumentationReporter.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "specljs.report.documentation/DocumentationReporter")
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$ = true;
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_message$arity$2 = function(this$, message) {
  var self__ = this;
  var this$__$1 = this;
  cljs.core.println.call(null, message);
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_description$arity$2 = function(this$, description) {
  var self__ = this;
  var this$__$1 = this;
  var level = specljs.report.documentation.level_of.call(null, description);
  if(level === 0) {
    cljs.core.println.call(null)
  }else {
  }
  cljs.core.println.call(null, [cljs.core.str(specljs.reporting.indent.call(null, level, description.name))].join(""));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_pass$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.green.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name)));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_pending$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.yellow.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (PENDING: ", specljs.platform.error_message.call(null, result.exception), ")")));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_fail$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  var characteristic = result.characteristic;
  var level = specljs.report.documentation.level_of.call(null, characteristic);
  cljs.core.println.call(null, specljs.reporting.red.call(null, specljs.reporting.indent.call(null, level - 1, "- ", characteristic.name, " (FAILED)")));
  return cljs.core.flush.call(null)
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_error$arity$2 = function(this$, result) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.println.call(null, specljs.reporting.red.call(null, result.exception.toString()))
};
specljs.report.documentation.DocumentationReporter.prototype.specljs$reporting$Reporter$report_runs$arity$2 = function(this$, results) {
  var self__ = this;
  var this$__$1 = this;
  return specljs.report.progress.print_summary.call(null, results)
};
specljs.report.documentation.__GT_DocumentationReporter = function __GT_DocumentationReporter() {
  return new specljs.report.documentation.DocumentationReporter
};
specljs.report.documentation.new_documentation_reporter = function new_documentation_reporter() {
  return new specljs.report.documentation.DocumentationReporter
};
goog.provide("specljs.version");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
specljs.version.major = 2;
specljs.version.minor = 7;
specljs.version.tiny = 5;
specljs.version.snapshot = false;
specljs.version.string = [cljs.core.str(clojure.string.join.call(null, ".", cljs.core.filter.call(null, cljs.core.identity, cljs.core.PersistentVector.fromArray([specljs.version.major, specljs.version.minor, specljs.version.tiny], true)))), cljs.core.str(cljs.core.truth_(specljs.version.snapshot) ? "-SNAPSHOT" : "")].join("");
specljs.version.summary = [cljs.core.str("specljs "), cljs.core.str(specljs.version.string)].join("");
goog.provide("specljs.core");
goog.require("cljs.core");
goog.require("clojure.data");
goog.require("specljs.results");
goog.require("specljs.config");
goog.require("specljs.run.standard");
goog.require("specljs.report.silent");
goog.require("specljs.platform");
goog.require("specljs.reporting");
goog.require("specljs.running");
goog.require("specljs.components");
goog.require("specljs.tags");
goog.require("specljs.report.documentation");
goog.require("specljs.report.progress");
goog.require("specljs.version");
goog.provide("koans.meditations.sequence_comprehensions");
goog.require("cljs.core");
koans.meditations.sequence_comprehensions.koans = cljs.core.list("Sequence comprehensions can bind each element in turn to a symbol", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "for", "for", -1640429950, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "index", "index", -1540185461, null), cljs.core.list(new cljs.core.Symbol(null, "range", "range", 
-1532251402, null), 6)], true), new cljs.core.Symbol(null, "index", "index", -1540185461, null))), "They can easily emulate mapping", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(0, 1, 4, 9, 16, 25)), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"index", "index", -1540185461, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "index", "index", -1540185461, null), new cljs.core.Symbol(null, "index", "index", -1540185461, null))), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 6)), cljs.core.list(new cljs.core.Symbol(null, "for", "for", -1640429950, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "index", "index", -1540185461, 
null), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 6)], true), new cljs.core.Keyword(null, "__", "__", 1013907282))), "And also filtering", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(1, 3, 5, 7, 9)), cljs.core.list(new cljs.core.Symbol(null, "filter", "filter", 1379943729, null), new cljs.core.Symbol(null, "odd?", "odd?", -1637125463, 
null), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 10)), cljs.core.list(new cljs.core.Symbol(null, "for", "for", -1640429950, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "index", "index", -1540185461, null), new cljs.core.Keyword(null, "__", "__", 1013907282), new cljs.core.Keyword(null, "when", "when", 1017552556), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1637125463, null), new cljs.core.Symbol(null, "index", "index", 
-1540185461, null))], true), new cljs.core.Symbol(null, "index", "index", -1540185461, null))), "More complex transformations simply take multiple binding forms", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "top", "top", 1014019271), new cljs.core.Keyword(null, "left", "left", 1017222009)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, 
"top", "top", 1014019271), new cljs.core.Keyword(null, "middle", "middle", 4234530055)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "top", "top", 1014019271), new cljs.core.Keyword(null, "right", "right", 1122416014)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "middle", "middle", 4234530055), new cljs.core.Keyword(null, "left", "left", 1017222009)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "middle", "middle", 
4234530055), new cljs.core.Keyword(null, "middle", "middle", 4234530055)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "middle", "middle", 4234530055), new cljs.core.Keyword(null, "right", "right", 1122416014)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), new cljs.core.Keyword(null, "left", "left", 1017222009)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), 
new cljs.core.Keyword(null, "middle", "middle", 4234530055)], true), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "bottom", "bottom", 3925642653), new cljs.core.Keyword(null, "right", "right", 1122416014)], true)], true), cljs.core.list(new cljs.core.Symbol(null, "for", "for", -1640429950, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "row", "row", -1640418413, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "top", "top", 1014019271), 
new cljs.core.Keyword(null, "middle", "middle", 4234530055), new cljs.core.Keyword(null, "bottom", "bottom", 3925642653)], true), new cljs.core.Symbol(null, "column", "column", 1299598607, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "left", "left", 1017222009), new cljs.core.Keyword(null, "middle", "middle", 4234530055), new cljs.core.Keyword(null, "right", "right", 1122416014)], true)], true), new cljs.core.Keyword(null, "__", "__", 1013907282))));
goog.provide("koans.meditations.datatypes");
goog.require("cljs.core");
koans.meditations.datatypes.koans = cljs.core.list("Holding records is meaningful only when the record is worthy of you", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Keyword(null, "prize", "prize", 1120839556), cljs.core.list(new cljs.core.Symbol(null, "Nobel.", "Nobel.", 698073055, null), "peace"))), "Types are quite similar", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
-1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, ".prize", ".prize", -216655267, null), cljs.core.list(new cljs.core.Symbol(null, "Pulitzer.", "Pulitzer.", 2020419954, null), "literature"))), "Records may be treated like maps", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Keyword(null, "prize", "prize", 1120839556), cljs.core.list(new cljs.core.Symbol(null, 
"Nobel.", "Nobel.", 698073055, null), "physics"))), "While types may not", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Keyword(null, "prize", "prize", 1120839556), cljs.core.list(new cljs.core.Symbol(null, "Pulitzer.", "Pulitzer.", 2020419954, null), "poetry"))), "Further study reveals why", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), new cljs.core.Symbol(null, "map?", "map?", -1637187556, null), cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "Nobel.", "Nobel.", 698073055, null), "chemistry"), cljs.core.list(new cljs.core.Symbol(null, "Pulitzer.", "Pulitzer.", 2020419954, null), "music")], true))), "Either sort of datatype can define methods in a protocol", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", 825586404, null), cljs.core.list(new cljs.core.Symbol(null, "present", "present", -1958808972, null), cljs.core.list(new cljs.core.Symbol(null, "Oscar.", "Oscar.", 730422423, null), "Best Picture"), "Evil Alien Conquerors"))));
koans.meditations.datatypes.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "defrecord", "defrecord", 1623953999, null), new cljs.core.Symbol(null, "Nobel", "Nobel", -1565092671, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "prize", "prize", -1533596213, null)], true)), cljs.core.list(new cljs.core.Symbol(null, "deftype", "deftype", -95157640, null), new cljs.core.Symbol(null, "Pulitzer", "Pulitzer", 1584334, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"prize", "prize", -1533596213, null)], true)), cljs.core.list(new cljs.core.Symbol(null, "defprotocol", "defprotocol", 14006102, null), new cljs.core.Symbol(null, "Award", "Award", -1576860682, null), cljs.core.list(new cljs.core.Symbol(null, "present", "present", -1958808972, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "this", "this", -1636972457, null), new cljs.core.Symbol(null, "recipient", "recipient", -820450350, null)], true))), cljs.core.list(new cljs.core.Symbol(null, 
"defrecord", "defrecord", 1623953999, null), new cljs.core.Symbol(null, "Oscar", "Oscar", -1564049143, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "category", "category", -1590020425, null)], true), new cljs.core.Symbol(null, "Award", "Award", -1576860682, null), cljs.core.list(new cljs.core.Symbol(null, "present", "present", -1958808972, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "this", "this", -1636972457, null), new cljs.core.Symbol(null, 
"recipient", "recipient", -820450350, null)], true), cljs.core.list(new cljs.core.Symbol(null, "print", "print", -1533596570, null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1640417302, null), "Congratulations on your ", cljs.core.list(new cljs.core.Keyword(null, "category", "category", 1064415344), new cljs.core.Symbol(null, "this", "this", -1636972457, null)), " Oscar, ", new cljs.core.Symbol(null, "recipient", "recipient", -820450350, null), "!"))))], true);
goog.provide("koans.meditations.maps");
goog.require("cljs.core");
koans.meditations.maps.koans = cljs.core.list("Don't get lost when creating a map", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true), cljs.core.list(new cljs.core.Symbol(null, "hash-map", "hash-map", -1493492266, null), new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "__", "__", 1013907282))), 
"A value must be supplied for each key", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1], true), cljs.core.list(new cljs.core.Symbol(null, "hash-map", "hash-map", -1493492266, null), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "__", "__", 1013907282))), "The size is the number of entries", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
-1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true))), "You can look up the value for a given key", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"get", "get", -1640429297, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true), new cljs.core.Keyword(null, "b", "b", 1013904340))), "Maps can be used as functions to do lookups", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true), new cljs.core.Keyword(null, "a", "a", 1013904339))), "And so can keywords", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Keyword(null, "a", "a", 1013904339), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 
2], true))), "But map keys need not be keywords", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(cljs.core.PersistentArrayMap.fromArray([2006, "Torino", 2010, "Vancouver", 2014, "Sochi"], true), 2010)), "You may not be able to find an entry for a key", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"get", "get", -1640429297, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true), new cljs.core.Keyword(null, "c", "c", 1013904341))), "But you can provide your own default", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "get", "get", -1640429297, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"a", "a", 1013904339), 1, new cljs.core.Keyword(null, "b", "b", 1013904340), 2], true), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "key-not-found", "key-not-found", 1380119948))), "You can find out if a key is present", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "contains?", "contains?", -2051487815, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, 
"a", "a", 1013904339), null, new cljs.core.Keyword(null, "b", "b", 1013904340), null], true), new cljs.core.Keyword(null, "b", "b", 1013904340))), "Or if it is missing", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "contains?", "contains?", -2051487815, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), null, new cljs.core.Keyword(null, 
"b", "b", 1013904340), null], true), new cljs.core.Keyword(null, "c", "c", 1013904341))), "Maps are immutable, but you can create a new and improved version", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentArrayMap.fromArray([1, "January", 2, new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), cljs.core.PersistentArrayMap.fromArray([1, "January"], true), 2, "February")), 
"You can also create a new version with an entry removed", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "dissoc", "dissoc", 1322893298, null), cljs.core.PersistentArrayMap.fromArray([1, "January", 2, "February"], true), 2)), "Often you will need to get the keys, but the order is undependable", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 
cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.list(new cljs.core.Symbol(null, "sort", "sort", -1636995241, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1637242963, null), cljs.core.PersistentArrayMap.fromArray([2010, "Vancouver", 2014, "Sochi", 2006, "Torino"], true)))), "You can get the values in a similar way", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, 
null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.list(new cljs.core.Symbol(null, "sort", "sort", -1636995241, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1636919509, null), cljs.core.PersistentArrayMap.fromArray([2006, "Torino", 2010, "Vancouver", 2014, "Sochi"], true)))));
goog.provide("koans.meditations.atoms");
goog.require("cljs.core");
koans.meditations.atoms.koans = cljs.core.list("Atoms are like refs", "(\x3d :__ @atomic-clock)", "You can change at the swap meet", "(\x3d :__ (do\n          (swap! atomic-clock inc)\n          @atomic-clock))", "Keep taxes out of this: swapping requires no transaction", "(\x3d 5 (do\n         :__\n         @atomic-clock))", "Any number of arguments might happen during a swap", "(\x3d :__ (do\n          (swap! atomic-clock + 1 2 3 4 5)\n          @atomic-clock))", "Atomic atoms are atomic", "(\x3d :__ (do\n          (compare-and-set! atomic-clock 100 :fin)\n          @atomic-clock))", 
"When your expectations are aligned with reality things, proceed that way", "(\x3d :fin (do\n            (compare-and-set! :__)\n            @atomic-clock))");
koans.meditations.atoms.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "def", "def", -1640432194, null), new cljs.core.Symbol(null, "atomic-clock", "atomic-clock", 1878504357, null), cljs.core.list(new cljs.core.Symbol(null, "atom", "atom", -1637526774, null), 0))], true);
goog.provide("koans.meditations.partition");
goog.require("cljs.core");
koans.meditations.partition.koans = cljs.core.list("To split a collection you can use the partition function", "(\x3d '((0 1) (2 3)) (:__ 2 (range 4)))", "But watch out if there are not enough elements to form n sequences", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "__", "__", 1013907282))), cljs.core.list(new cljs.core.Symbol(null, "partition", 
"partition", 854625443, null), 3, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "e", "e", 1013904343)], true))), "You can use partition-all to also get partitions with less than n elements", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "partition-all", "partition-all", 957281783, null), 3, cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 5))), "If you need to, you can start each sequence with an offset", "(\x3d '((0 1 2) (5 6 7) (10 11 12)) (partition 3 :__ (range 13)))", "Consider padding the last sequence with some default values..", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, 
"quote", "quote", -1532577739, null), cljs.core.list(cljs.core.list(0, 1, 2), cljs.core.list(3, 4, 5), cljs.core.list(6, new cljs.core.Keyword(null, "hello", "hello", 1113066564)))), cljs.core.list(new cljs.core.Symbol(null, "partition", "partition", 854625443, null), 3, 3, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 7))), ".. but notice that they will only pad up to given sequence length", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(cljs.core.list(0, 1, 2), cljs.core.list(3, 4, 5), new cljs.core.Keyword(null, "__", "__", 1013907282))), cljs.core.list(new cljs.core.Symbol(null, "partition", "partition", 854625443, null), 3, 3, cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "this", "this", 1017463312), new cljs.core.Keyword(null, "are", "are", 
1014001094), "my", "words"], true), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 7))));
goog.provide("koans.meditations.creating_functions");
goog.require("cljs.core");
koans.meditations.creating_functions.koans = cljs.core.list("One may know what they seek by knowing what they do not seek", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "not-a-symbol?", "not-a-symbol?", -508753030, null), cljs.core.list(new cljs.core.Symbol(null, 
"complement", "complement", 2113019871, null), new cljs.core.Symbol(null, "symbol?", "symbol?", 910997344, null))], true), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), new cljs.core.Symbol(null, "not-a-symbol?", "not-a-symbol?", -508753030, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null)), 
"c"], true)))), "Praise and 'complement' may help you separate the wheat from the chaff", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "wheat", "wheat", 1127001689), "wheat", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "wheat", "wheat", -1527434080, null))], true), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), 
cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "not-nil?", "not-nil?", -110340927, null), new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "filter", "filter", 1379943729, null), new cljs.core.Symbol(null, "not-nil?", "not-nil?", -110340927, null), cljs.core.PersistentVector.fromArray([null, new cljs.core.Keyword(null, "wheat", "wheat", 1127001689), null, "wheat", null, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 
-1532577739, null), new cljs.core.Symbol(null, "wheat", "wheat", -1527434080, null)), null], true)))), "Partial functions allow procrastination", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 20, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "multiply-by-5", "multiply-by-5", -1764916223, null), cljs.core.list(new cljs.core.Symbol(null, "partial", "partial", 1861501754, null), 
new cljs.core.Symbol(null, "*", "*", -1640531485, null), 5)], true), cljs.core.list(new cljs.core.Keyword(null, "__", "__", 1013907282)))), "Functions can join forces as one 'composed' function", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 25, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "inc-and-square", "inc-and-square", -726126373, null), cljs.core.list(new cljs.core.Symbol(null, 
"comp", "comp", -1637472056, null), new cljs.core.Symbol(null, "square", "square", 1759761110, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, null))], true), cljs.core.list(new cljs.core.Symbol(null, "inc-and-square", "inc-and-square", -726126373, null), new cljs.core.Keyword(null, "__", "__", 1013907282)))), "Have a go on a double dec-er", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "double-dec", "double-dec", -862937665, null), cljs.core.list(new cljs.core.Symbol(null, "comp", "comp", -1637472056, null), new cljs.core.Symbol(null, "dec", "dec", -1640432197, null), new cljs.core.Symbol(null, "dec", "dec", -1640432197, null))], true), cljs.core.list(new cljs.core.Symbol(null, "double-dec", "double-dec", -862937665, null), 10))), "Be careful about the order in which you mix your functions", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 99, cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "square-and-dec", "square-and-dec", -1571227627, null), new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "square-and-dec", "square-and-dec", -1571227627, null), 10))));
koans.meditations.creating_functions.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "defn", "defn", -1637452094, null), new cljs.core.Symbol(null, "square", "square", 1759761110, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "x", "x", -1640531407, null), new cljs.core.Symbol(null, "x", "x", -1640531407, 
null)))], true);
goog.provide("koans.meditations.lazy_sequences");
goog.require("cljs.core");
koans.meditations.lazy_sequences.koans = cljs.core.list("There are many ways to generate a sequence", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 1, 5)), "The range starts at the beginning by default", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"range", "range", -1532251402, null), 5)), "Only take what you need when the sequence is large", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9], true), cljs.core.list(new cljs.core.Symbol(null, "take", "take", -1636979136, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 100))), "Or limit results by dropping what you don't need", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([95, 96, 97, 98, 99], true), cljs.core.list(new cljs.core.Symbol(null, "drop", "drop", -1637439320, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "range", "range", -1532251402, null), 100))), "Iteration provides an infinite lazy sequence", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "take", "take", -1636979136, null), 20, cljs.core.list(new cljs.core.Symbol(null, "iterate", "iterate", 475824691, null), new cljs.core.Symbol(null, "inc", "inc", -1640427113, null), 0))), "Repetition is key", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, 
"a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "a", "a", 1013904339)], true), cljs.core.list(new cljs.core.Symbol(null, "repeat", "repeat", 1719904084, null), 10, new cljs.core.Keyword(null, 
"__", "__", 1013907282))), "Iteration can be used for repetition", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "repeat", "repeat", 1719904084, null), 100, new cljs.core.Keyword(null, "foo", "foo", 1014005816)), cljs.core.list(new cljs.core.Symbol(null, "take", "take", -1636979136, null), 100, cljs.core.list(new cljs.core.Symbol(null, "iterate", "iterate", 475824691, null), new cljs.core.Keyword(null, "__", "__", 1013907282), 
new cljs.core.Keyword(null, "foo", "foo", 1014005816)))));
goog.provide("koans.utils");
goog.require("cljs.core");
koans.utils.index_of = function index_of(item, coll) {
  return cljs.core.first.call(null, cljs.core.keep_indexed.call(null, function(p1__12679_SHARP_, p2__12678_SHARP_) {
    if(cljs.core._EQ_.call(null, item, p2__12678_SHARP_)) {
      return p1__12679_SHARP_
    }else {
      return null
    }
  }, coll))
};
goog.provide("koans.meditations.conditionals");
goog.require("cljs.core");
koans.meditations.conditionals.koans = cljs.core.list("You will face many decisions", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "if", "if", -1640528170, null), cljs.core.list(new cljs.core.Symbol(null, "false?", "false?", 1372554549, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 4, 5)), new cljs.core.Keyword(null, "a", "a", 1013904339), 
new cljs.core.Keyword(null, "b", "b", 1013904340))), "Some of them leave you no alternative", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "if", "if", -1640528170, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), 4, 3), cljs.core.PersistentVector.EMPTY)), "And in such a situation you may have nothing", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "if", "if", -1640528170, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), 0), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "c", "c", 1013904341)], true))), "In others your alternative may be interesting", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "glory", "glory", 1112354659), cljs.core.list(new cljs.core.Symbol(null, "if", "if", -1640528170, null), cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 1355128395, null), cljs.core.List.EMPTY)), new cljs.core.Keyword(null, "doom", "doom", 1016993563), new cljs.core.Keyword(null, "__", "__", 1013907282))), "In case of emergency, sound the alarms", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "sirens", "sirens", 4406723072), cljs.core.list(new cljs.core.Symbol(null, "explain-defcon-level", "explain-defcon-level", 1104714723, null), new cljs.core.Keyword(null, "__", "__", 1013907282))), "But admit it when you don't know what to do", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"explain-defcon-level", "explain-defcon-level", 1104714723, null), new cljs.core.Keyword(null, "yo-mama", "yo-mama", 4250405361))));
koans.meditations.conditionals.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "defn", "defn", -1637452094, null), new cljs.core.Symbol(null, "explain-defcon-level", "explain-defcon-level", 1104714723, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "exercise-term", "exercise-term", 1046889722, null)], true), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1637485335, null), new cljs.core.Symbol(null, "exercise-term", "exercise-term", 
1046889722, null), new cljs.core.Keyword(null, "fade-out", "fade-out", 1538084847), new cljs.core.Keyword(null, "you-and-what-army", "you-and-what-army", 2878715092), new cljs.core.Keyword(null, "double-take", "double-take", 3644950645), new cljs.core.Keyword(null, "call-me-when-its-important", "call-me-when-its-important", 3202493314), new cljs.core.Keyword(null, "round-house", "round-house", 3637353875), new cljs.core.Keyword(null, "o-rly", "o-rly", 1117868691), new cljs.core.Keyword(null, "fast-pace", 
"fast-pace", 940734550), new cljs.core.Keyword(null, "thats-pretty-bad", "thats-pretty-bad", 3834208865), new cljs.core.Keyword(null, "cocked-pistol", "cocked-pistol", 2731459203), new cljs.core.Keyword(null, "sirens", "sirens", 4406723072), new cljs.core.Keyword(null, "say-what?", "say-what?", 2279118091)))], true);
goog.provide("koans.meditations.equality");
goog.require("cljs.core");
koans.meditations.equality.koans = cljs.core.list("We shall contemplate truth by testing reality, via equality", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), true), "To understand reality, we must compare our expectations against reality", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "+", 
"+", -1640531484, null), 1, 1)), "You can test equality of many things", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -1640531484, null), 3, 4), 7, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -1640531484, null), 2, new cljs.core.Keyword(null, "__", "__", 1013907282))), "But you may not string yourself along", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 2, "2")), "Something is not equal to nothing", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 1, null))), "Strings, and keywords, and symbols: oh my!", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "foo", new cljs.core.Keyword(null, "foo", "foo", 1014005816), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "foo", "foo", -1640429953, null)))), "Make a keyword with your keyboard", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"foo", "foo", 1014005816), cljs.core.list(new cljs.core.Symbol(null, "keyword", "keyword", 1840027554, null), new cljs.core.Keyword(null, "__", "__", 1013907282))), "Symbolism is all around us", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), new cljs.core.Symbol(null, "foo", "foo", -1640429953, null)), cljs.core.list(new cljs.core.Symbol(null, "symbol", "symbol", 1766911825, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282))), "When things cannot be equal, they must be different", cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", -1637144189, null), new cljs.core.Keyword(null, "fill-in-the-blank", "fill-in-the-blank", 2866381260), new cljs.core.Keyword(null, "__", "__", 1013907282)));
goog.provide("koans.meditations.sets");
goog.require("cljs.core");
koans.meditations.sets.koans = cljs.core.list("You can create a set by converting another collection", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentHashSet.fromArray([3, null], true), cljs.core.list(new cljs.core.Symbol(null, "set", "set", -1640417765, null), new cljs.core.Keyword(null, "__", "__", 1013907282))), "Counting them is like counting other collections", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.PersistentHashSet.fromArray([1, null, 2, null, 3, null], true))), "Remember that a set is a *mathematical* set", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "set", "set", -1640417765, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, 
null), cljs.core.list(1, 1, 2, 2, 3, 3, 4, 4, 5, 5)))));
goog.provide("koans.meditations.vectors");
goog.require("cljs.core");
koans.meditations.vectors.koans = cljs.core.list("You can use vectors in clojure as array-like structures", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.PersistentVector.fromArray([42], true))), "You can create a vector from a list", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "vec", "vec", -1640414899, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(1)))), "Or from some elements", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", 1834048252, null), null, null)), "But you can populate it with any number of elements at once", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([1, new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "vec", "vec", -1640414899, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(1, 2)))), "Conjoining to a vector is different than to a list", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "conj", "conj", -1637472031, null), cljs.core.PersistentVector.fromArray([111, 222], true), 333)), "You can get the first element of a vector like so", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "peanut", 
"peanut", 4316643955), new cljs.core.Keyword(null, "butter", "butter", 3931183474), new cljs.core.Keyword(null, "and", "and", 1014000969), new cljs.core.Keyword(null, "jelly", "jelly", 1114913616)], true))), "And the last in a similar fashion", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "last", "last", -1637217201, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, 
"peanut", "peanut", 4316643955), new cljs.core.Keyword(null, "butter", "butter", 3931183474), new cljs.core.Keyword(null, "and", "and", 1014000969), new cljs.core.Keyword(null, "jelly", "jelly", 1114913616)], true))), "Or any index if you wish", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "nth", "nth", -1640422117, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, 
"peanut", "peanut", 4316643955), new cljs.core.Keyword(null, "butter", "butter", 3931183474), new cljs.core.Keyword(null, "and", "and", 1014000969), new cljs.core.Keyword(null, "jelly", "jelly", 1114913616)], true), 3)), "You can also slice a vector", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "subvec", "subvec", 1762908941, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, 
"peanut", "peanut", 4316643955), new cljs.core.Keyword(null, "butter", "butter", 3931183474), new cljs.core.Keyword(null, "and", "and", 1014000969), new cljs.core.Keyword(null, "jelly", "jelly", 1114913616)], true), 1, 3)), "Equality with collections is in terms of values", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", 
1834048252, null), 1, 2, new cljs.core.Keyword(null, "__", "__", 1013907282))));
goog.provide("koans.meditations.destructuring");
goog.require("cljs.core");
koans.meditations.destructuring.koans = cljs.core.list("Destructuring is an arbiter: it breaks up arguments", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, 
null)], true)], true), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1640417302, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null), new cljs.core.Symbol(null, "a", "a", -1640531430, null))), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "foo", "foo", 1014005816), new cljs.core.Keyword(null, "bar", "bar", 1014001541)], true))), "Whether in function definitions", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, 
"str", "str", -1640417302, null), "First comes love, ", "then comes marriage, ", "then comes Clojure with the baby carriage"), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null), new cljs.core.Symbol(null, "c", "c", -1640531428, null)], true)], true), new cljs.core.Keyword(null, 
"__", "__", 1013907282)), cljs.core.PersistentVector.fromArray(["love", "marriage", "Clojure"], true))), "Or in let expressions", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Rich Hickey aka The Clojurer aka Go Time aka Macro Killah", cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "first-name", "first-name", -1847692991, null), new cljs.core.Symbol(null, 
"last-name", "last-name", 326414619, null), new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), new cljs.core.Symbol(null, "aliases", "aliases", 1739901111, null)], true), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), "Rich", "Hickey", "The Clojurer", "Go Time", "Macro Killah")], true), new cljs.core.Keyword(null, "__", "__", 1013907282))), "You can regain the full argument if you like arguing", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, 
null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "original-parts", "original-parts", 1508854614), cljs.core.PersistentVector.fromArray(["Steven", "Hawking"], true), new cljs.core.Keyword(null, "named-parts", "named-parts", 3767724734), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "first", "first", 1111344674), "Steven", new cljs.core.Keyword(null, "last", "last", 1017218568), "Hawking"], true)], true), cljs.core.list(new cljs.core.Symbol(null, "let", 
"let", -1640424492, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "first-name", "first-name", -1847692991, null), new cljs.core.Symbol(null, "last-name", "last-name", 326414619, null), new cljs.core.Keyword(null, "as", "as", 1013907364), new cljs.core.Symbol(null, "full-name", "full-name", 931083458, null)], true), cljs.core.PersistentVector.fromArray(["Steven", "Hawking"], true)], true), new cljs.core.Keyword(null, "__", "__", 1013907282))), 
"Break up maps by key", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "123 Test Lane, Testerville, TX", cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([cljs.core.PersistentArrayMap.fromArray([new cljs.core.Symbol(null, "street-address", "street-address", -508127773, null), new cljs.core.Keyword(null, "street-address", "street-address", 2146307996), new cljs.core.Symbol(null, "city", "city", -1637477596, 
null), new cljs.core.Keyword(null, "city", "city", 1016958173), new cljs.core.Symbol(null, "state", "state", -1530773942, null), new cljs.core.Keyword(null, "state", "state", 1123661827)], true), new cljs.core.Symbol(null, "test-address", "test-address", -1021473934, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282))), "All together now!", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "Test Testerson, 123 Test Lane, Testerville, TX", cljs.core.list(new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.PersistentVector.fromArray(["Test", "Testerson"], true), new cljs.core.Symbol(null, "test-address", "test-address", -1021473934, null))));
koans.meditations.destructuring.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "def", "def", -1640432194, null), new cljs.core.Symbol(null, "test-address", "test-address", -1021473934, null), cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "street-address", "street-address", 2146307996), "123 Test Lane", new cljs.core.Keyword(null, "city", "city", 1016958173), "Testerville", new cljs.core.Keyword(null, "state", "state", 1123661827), "TX"], 
true))], true);
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = {};
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if(function() {
    var and__3119__auto__ = port;
    if(and__3119__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler)
  }else {
    var x__3723__auto__ = port == null ? null : port;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler)
  }
};
cljs.core.async.impl.protocols.WritePort = {};
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn0_handler) {
  if(function() {
    var and__3119__auto__ = port;
    if(and__3119__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn0_handler)
  }else {
    var x__3723__auto__ = port == null ? null : port;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn0_handler)
  }
};
cljs.core.async.impl.protocols.Channel = {};
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if(function() {
    var and__3119__auto__ = chan;
    if(and__3119__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan)
  }else {
    var x__3723__auto__ = chan == null ? null : chan;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan)
  }
};
cljs.core.async.impl.protocols.Handler = {};
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if(function() {
    var and__3119__auto__ = h;
    if(and__3119__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h)
  }else {
    var x__3723__auto__ = h == null ? null : h;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if(function() {
    var and__3119__auto__ = h;
    if(and__3119__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h)
  }else {
    var x__3723__auto__ = h == null ? null : h;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h)
  }
};
cljs.core.async.impl.protocols.Buffer = {};
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b)
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function add_BANG_(b, itm) {
  if(function() {
    var and__3119__auto__ = b;
    if(and__3119__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2(b, itm)
  }else {
    var x__3723__auto__ = b == null ? null : b;
    return function() {
      var or__3128__auto__ = cljs.core.async.impl.protocols.add_BANG_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.impl.protocols.add_BANG_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!", b);
        }
      }
    }().call(null, b, itm)
  }
};
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 4;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o]
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx]
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", 4635210724))
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.impl.ioc_helpers.t16781 !== "undefined") {
  }else {
    cljs.core.async.impl.ioc_helpers.t16781 = function(f, fn_handler, meta16782) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta16782 = meta16782;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.impl.ioc_helpers.t16781.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t16781.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t16781";
    cljs.core.async.impl.ioc_helpers.t16781.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.ioc-helpers/t16781")
    };
    cljs.core.async.impl.ioc_helpers.t16781.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t16781.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.impl.ioc_helpers.t16781.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.impl.ioc_helpers.t16781.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16783) {
      var self__ = this;
      var _16783__$1 = this;
      return self__.meta16782
    };
    cljs.core.async.impl.ioc_helpers.t16781.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16783, meta16782__$1) {
      var self__ = this;
      var _16783__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t16781(self__.f, self__.fn_handler, meta16782__$1)
    };
    cljs.core.async.impl.ioc_helpers.__GT_t16781 = function __GT_t16781(f__$1, fn_handler__$1, meta16782) {
      return new cljs.core.async.impl.ioc_helpers.t16781(f__$1, fn_handler__$1, meta16782)
    }
  }
  return new cljs.core.async.impl.ioc_helpers.t16781(f, fn_handler, null)
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state)
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state)
  }catch(e16785) {
    if(e16785 instanceof Object) {
      var ex = e16785;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        throw e16785;
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_16788_16790 = state;
    statearr_16788_16790[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_16788_16790[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16789_16791 = state;
    statearr_16789_16791[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16789_16791[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4090__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
    var statearr_16794_16796 = state;
    statearr_16794_16796[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = null;
    statearr_16794_16796[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
  }));
  if(cljs.core.truth_(temp__4090__auto__)) {
    var cb = temp__4090__auto__;
    var statearr_16795_16797 = state;
    statearr_16795_16797[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_16795_16797[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
  }else {
    return null
  }
};
cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__16798) {
    var map__16803 = p__16798;
    var map__16803__$1 = cljs.core.seq_QMARK_.call(null, map__16803) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16803) : map__16803;
    var opts = map__16803__$1;
    var statearr_16804_16807 = state;
    statearr_16804_16807[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4092__auto__ = cljs.core.async.do_alts.call(null, function(val) {
      var statearr_16805_16808 = state;
      statearr_16805_16808[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state)
    }, ports, opts);
    if(cljs.core.truth_(temp__4092__auto__)) {
      var cb = temp__4092__auto__;
      var statearr_16806_16809 = state;
      statearr_16806_16809[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
    }else {
      return null
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__16798 = null;
    if(arguments.length > 3) {
      p__16798 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__16798)
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__16810) {
    var state = cljs.core.first(arglist__16810);
    arglist__16810 = cljs.core.next(arglist__16810);
    var cont_block = cljs.core.first(arglist__16810);
    arglist__16810 = cljs.core.next(arglist__16810);
    var ports = cljs.core.first(arglist__16810);
    var p__16798 = cljs.core.rest(arglist__16810);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__16798)
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_
}();
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if(value == null) {
  }else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function() {
      return null
    }))
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c
};
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while(true) {
    if(cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__16775 = cnt + 1;
      cnt = G__16775;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/RingBuffer")
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if(self__.length === 0) {
    return null
  }else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if(self__.length + 1 === self__.arr.length) {
    this$.resize()
  }else {
  }
  return this$.unshift(x)
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if(self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr
  }else {
    if(self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr
    }else {
      if(self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr
      }else {
        return null
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__3891__auto__ = self__.length;
  var x = 0;
  while(true) {
    if(x < n__3891__auto__) {
      var v_16776 = this$.pop();
      if(keep_QMARK_.call(null, v_16776)) {
        this$.unshift(v_16776)
      }else {
      }
      var G__16777 = x + 1;
      x = G__16777;
      continue
    }else {
      return null
    }
    break
  }
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr)
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if(n > 0) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", -1640531465, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n))
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/FixedBuffer")
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, this$__$1))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't add to a full buffer"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol("impl", "full?", "impl/full?", -1337857039, null), new cljs.core.Symbol(null, "this", "this", -1636972457, null)))))].join(""));
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n)
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/DroppingBuffer")
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    return null
  }else {
    return self__.buf.unshift(itm)
  }
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n)
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.buffers/SlidingBuffer")
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop()
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1)
  }else {
  }
  return self__.buf.unshift(itm)
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n)
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n)
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.message_channel = null;
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_16764 = 0;
  while(true) {
    var m_16765 = cljs.core.async.impl.dispatch.tasks.pop();
    if(m_16765 == null) {
    }else {
      m_16765.call(null);
      if(count_16764 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__16766 = count_16764 + 1;
        count_16764 = G__16766;
        continue
      }else {
      }
    }
    break
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if(cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
  }else {
    return null
  }
};
if(typeof MessageChannel !== "undefined") {
  cljs.core.async.impl.dispatch.message_channel = new MessageChannel;
  cljs.core.async.impl.dispatch.message_channel.port1.onmessage = function(msg) {
    return cljs.core.async.impl.dispatch.process_messages.call(null)
  }
}else {
}
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if(and__3119__auto__) {
      return cljs.core.async.impl.dispatch.running_QMARK_
    }else {
      return and__3119__auto__
    }
  }())) {
    return null
  }else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    if(typeof MessageChannel !== "undefined") {
      return cljs.core.async.impl.dispatch.message_channel.port2.postMessage(0)
    }else {
      if(typeof setImmediate !== "undefined") {
        return setImmediate(cljs.core.async.impl.dispatch.process_messages)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return setTimeout(cljs.core.async.impl.dispatch.process_messages, 0)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null)
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay)
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if(typeof cljs.core.async.impl.channels.t16770 !== "undefined") {
  }else {
    cljs.core.async.impl.channels.t16770 = function(val, box, meta16771) {
      this.val = val;
      this.box = box;
      this.meta16771 = meta16771;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984
    };
    cljs.core.async.impl.channels.t16770.cljs$lang$type = true;
    cljs.core.async.impl.channels.t16770.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t16770";
    cljs.core.async.impl.channels.t16770.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.channels/t16770")
    };
    cljs.core.async.impl.channels.t16770.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val
    };
    cljs.core.async.impl.channels.t16770.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16772) {
      var self__ = this;
      var _16772__$1 = this;
      return self__.meta16771
    };
    cljs.core.async.impl.channels.t16770.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16772, meta16771__$1) {
      var self__ = this;
      var _16772__$1 = this;
      return new cljs.core.async.impl.channels.t16770(self__.val, self__.box, meta16771__$1)
    };
    cljs.core.async.impl.channels.__GT_t16770 = function __GT_t16770(val__$1, box__$1, meta16771) {
      return new cljs.core.async.impl.channels.t16770(val__$1, box__$1, meta16771)
    }
  }
  return new cljs.core.async.impl.channels.t16770(val, box, null)
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__3667__auto__, writer__3668__auto__, opts__3669__auto__) {
  return cljs.core._write.call(null, writer__3668__auto__, "cljs.core.async.impl.channels/PutBox")
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val)
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler)
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.channels/ManyToManyChannel")
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if(self__.closed) {
    return null
  }else {
    self__.closed = true;
    while(true) {
      var taker_16773 = self__.takes.pop();
      if(taker_16773 == null) {
      }else {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_16773)) {
          var take_cb_16774 = cljs.core.async.impl.protocols.commit.call(null, taker_16773);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_16774, taker_16773) {
            return function() {
              return take_cb_16774.call(null, null)
            }
          }(take_cb_16774, taker_16773))
        }else {
        }
        continue
      }
      break
    }
    return null
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null
  }else {
    if(!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      return cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf))
    }else {
      while(true) {
        var putter = self__.puts.pop();
        if(!(putter == null)) {
          var put_handler = putter.handler;
          var val = putter.val;
          if(cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler)) {
            var put_cb = cljs.core.async.impl.protocols.commit.call(null, put_handler);
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            cljs.core.async.impl.dispatch.run.call(null, put_cb);
            return cljs.core.async.impl.channels.box.call(null, val)
          }else {
            continue
          }
        }else {
          if(self__.closed) {
            var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
            return cljs.core.async.impl.channels.box.call(null, null)
          }else {
            if(self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
              self__.dirty_takes = 0;
              self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_)
            }else {
              self__.dirty_takes = self__.dirty_takes + 1
            }
            if(self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
            }else {
              throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 1395928862, null), new cljs.core.Symbol(null, 
              "takes", "takes", -1530407291, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
            }
            self__.takes.unbounded_unshift(handler);
            return null
          }
        }
        break
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if(!(val == null)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), new cljs.core.Symbol(null, "val", "val", -1640415014, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if(closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, null)
  }else {
    while(true) {
      var taker = self__.takes.pop();
      if(!(taker == null)) {
        if(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker)) {
          var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb, _, taker) {
            return function() {
              return take_cb.call(null, val)
            }
          }(take_cb, _, taker));
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          continue
        }
      }else {
        if(!(self__.buf == null || cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
          var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
          cljs.core.async.impl.protocols.add_BANG_.call(null, self__.buf, val);
          return cljs.core.async.impl.channels.box.call(null, null)
        }else {
          if(self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_puts = 0;
            self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_)
          }else {
            self__.dirty_puts = self__.dirty_puts + 1
          }
          if(self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
            1395928862, null), new cljs.core.Symbol(null, "puts", "puts", -1637078787, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", -1989946393, null))))].join(""));
          }
          self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
          return null
        }
      }
      break
    }
  }
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed)
};
cljs.core.async.impl.channels.chan = function chan(buf) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, null)
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0)
  };
  var random_level__1 = function(level) {
    while(true) {
      if(Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__16740 = level + 1;
        level = G__16740;
        continue
      }else {
        return level
      }
      break
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.timers/SkipListNode")
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.list.call(null, self__.key, self__.val)
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward)
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level)
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_16741 = 0;
    while(true) {
      if(i_16741 < arr.length) {
        arr[i_16741] = null;
        var G__16742 = i_16741 + 1;
        i_16741 = G__16742;
        continue
      }else {
      }
      break
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr)
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null)
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while(true) {
      if(!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while(true) {
            var temp__4090__auto__ = x__$1.forward[level];
            if(cljs.core.truth_(temp__4090__auto__)) {
              var x_SINGLEQUOTE_ = temp__4090__auto__;
              if(x_SINGLEQUOTE_.key < k) {
                var G__16743 = x_SINGLEQUOTE_;
                x__$1 = G__16743;
                continue
              }else {
                return x__$1
              }
            }else {
              return x__$1
            }
            break
          }
        }();
        if(update == null) {
        }else {
          update[level] = x__$1
        }
        var G__16744 = x__$1;
        var G__16745 = k;
        var G__16746 = level - 1;
        var G__16747 = update;
        x = G__16744;
        k = G__16745;
        level = G__16746;
        update = G__16747;
        continue
      }else {
        return x
      }
      break
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
  return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async.impl.timers/SkipList")
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(keyval) {
    return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1)
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function iter(node) {
    return new cljs.core.LazySeq(null, function() {
      if(node == null) {
        return null
      }else {
        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([node.key, node.val], true), iter.call(null, node.forward[0]))
      }
    }, null, null)
  };
  return iter.call(null, self__.header.forward[0])
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v
  }else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if(new_level > self__.level) {
      var i_16748 = self__.level + 1;
      while(true) {
        if(i_16748 <= new_level + 1) {
          update[i_16748] = self__.header;
          var G__16749 = i_16748 + 1;
          i_16748 = G__16749;
          continue
        }else {
        }
        break
      }
      self__.level = new_level
    }else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while(true) {
      if(i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2
      }else {
        return null
      }
      break
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if(!(x__$1 == null) && x__$1.key === k) {
    var i_16750 = 0;
    while(true) {
      if(i_16750 <= self__.level) {
        var links_16751 = update[i_16750].forward;
        if(links_16751[i_16750] === x__$1) {
          links_16751[i_16750] = x__$1.forward[i_16750];
          var G__16752 = i_16750 + 1;
          i_16750 = G__16752;
          continue
        }else {
          var G__16753 = i_16750 + 1;
          i_16750 = G__16753;
          continue
        }
      }else {
      }
      break
    }
    while(true) {
      if(self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(x_SINGLEQUOTE_ == null) {
            return null
          }else {
            if(x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_
            }else {
              var G__16754 = x_SINGLEQUOTE_;
              x__$1 = G__16754;
              continue
            }
          }
          break
        }
      }();
      if(!(nx == null)) {
        var G__16755 = nx;
        var G__16756 = level__$1 - 1;
        x = G__16755;
        level__$1 = G__16756;
        continue
      }else {
        var G__16757 = x;
        var G__16758 = level__$1 - 1;
        x = G__16757;
        level__$1 = G__16758;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while(true) {
    if(!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while(true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if(!(x_SINGLEQUOTE_ == null)) {
            if(x_SINGLEQUOTE_.key > k) {
              return x__$1
            }else {
              var G__16759 = x_SINGLEQUOTE_;
              x__$1 = G__16759;
              continue
            }
          }else {
            if(level__$1 === 0) {
              return x__$1
            }else {
              return null
            }
          }
          break
        }
      }();
      if(cljs.core.truth_(nx)) {
        var G__16760 = nx;
        var G__16761 = level__$1 - 1;
        x = G__16760;
        level__$1 = G__16761;
        continue
      }else {
        var G__16762 = x;
        var G__16763 = level__$1 - 1;
        x = G__16762;
        level__$1 = G__16763;
        continue
      }
    }else {
      if(x === self__.header) {
        return null
      }else {
        return x
      }
    }
    break
  }
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level)
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0)
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3128__auto__ = cljs.core.truth_(function() {
    var and__3119__auto__ = me;
    if(cljs.core.truth_(and__3119__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS
    }else {
      return and__3119__auto__
    }
  }()) ? me.val : null;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function() {
      cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
      return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel)
    }, msecs);
    return timeout_channel
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.timers");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.ioc_helpers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if(typeof cljs.core.async.t14838 !== "undefined") {
  }else {
    cljs.core.async.t14838 = function(f, fn_handler, meta14839) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta14839 = meta14839;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14838.cljs$lang$type = true;
    cljs.core.async.t14838.cljs$lang$ctorStr = "cljs.core.async/t14838";
    cljs.core.async.t14838.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14838")
    };
    cljs.core.async.t14838.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14838.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true
    };
    cljs.core.async.t14838.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f
    };
    cljs.core.async.t14838.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14840) {
      var self__ = this;
      var _14840__$1 = this;
      return self__.meta14839
    };
    cljs.core.async.t14838.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14840, meta14839__$1) {
      var self__ = this;
      var _14840__$1 = this;
      return new cljs.core.async.t14838(self__.f, self__.fn_handler, meta14839__$1)
    };
    cljs.core.async.__GT_t14838 = function __GT_t14838(f__$1, fn_handler__$1, meta14839) {
      return new cljs.core.async.t14838(f__$1, fn_handler__$1, meta14839)
    }
  }
  return new cljs.core.async.t14838(f, fn_handler, null)
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n)
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n)
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n)
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null)
  };
  var chan__1 = function(buf_or_n) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1)
  };
  chan = function(buf_or_n) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  return chan
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs)
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3c! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true)
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if(cljs.core.truth_(ret)) {
      var val_14841 = cljs.core.deref.call(null, ret);
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_14841)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, function() {
          return fn1.call(null, val_14841)
        })
      }
    }else {
    }
    return null
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_
}();
cljs.core.async.nop = function nop() {
  return null
};
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  if(null) {
    return null
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("\x3e! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
  }
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    return put_BANG_.call(null, port, val, cljs.core.async.nop)
  };
  var put_BANG___3 = function(port, val, fn0) {
    return put_BANG_.call(null, port, val, fn0, true)
  };
  var put_BANG___4 = function(port, val, fn0, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn0));
    if(cljs.core.truth_(function() {
      var and__3119__auto__ = ret;
      if(cljs.core.truth_(and__3119__auto__)) {
        return cljs.core.not_EQ_.call(null, fn0, cljs.core.async.nop)
      }else {
        return and__3119__auto__
      }
    }())) {
      if(cljs.core.truth_(on_caller_QMARK_)) {
        fn0.call(null)
      }else {
        cljs.core.async.impl.dispatch.run.call(null, fn0)
      }
    }else {
    }
    return null
  };
  put_BANG_ = function(port, val, fn0, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn0);
      case 4:
        return put_BANG___4.call(this, port, val, fn0, on_caller_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port)
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__3891__auto___14842 = n;
  var x_14843 = 0;
  while(true) {
    if(x_14843 < n__3891__auto___14842) {
      a[x_14843] = 0;
      var G__14844 = x_14843 + 1;
      x_14843 = G__14844;
      continue
    }else {
    }
    break
  }
  var i = 1;
  while(true) {
    if(cljs.core._EQ_.call(null, i, n)) {
      return a
    }else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__14845 = i + 1;
      i = G__14845;
      continue
    }
    break
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if(typeof cljs.core.async.t14849 !== "undefined") {
  }else {
    cljs.core.async.t14849 = function(flag, alt_flag, meta14850) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta14850 = meta14850;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14849.cljs$lang$type = true;
    cljs.core.async.t14849.cljs$lang$ctorStr = "cljs.core.async/t14849";
    cljs.core.async.t14849.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14849")
    };
    cljs.core.async.t14849.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14849.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.deref.call(null, self__.flag)
    };
    cljs.core.async.t14849.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.reset_BANG_.call(null, self__.flag, null);
      return true
    };
    cljs.core.async.t14849.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14851) {
      var self__ = this;
      var _14851__$1 = this;
      return self__.meta14850
    };
    cljs.core.async.t14849.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14851, meta14850__$1) {
      var self__ = this;
      var _14851__$1 = this;
      return new cljs.core.async.t14849(self__.flag, self__.alt_flag, meta14850__$1)
    };
    cljs.core.async.__GT_t14849 = function __GT_t14849(flag__$1, alt_flag__$1, meta14850) {
      return new cljs.core.async.t14849(flag__$1, alt_flag__$1, meta14850)
    }
  }
  return new cljs.core.async.t14849(flag, alt_flag, null)
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if(typeof cljs.core.async.t14855 !== "undefined") {
  }else {
    cljs.core.async.t14855 = function(cb, flag, alt_handler, meta14856) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta14856 = meta14856;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14855.cljs$lang$type = true;
    cljs.core.async.t14855.cljs$lang$ctorStr = "cljs.core.async/t14855";
    cljs.core.async.t14855.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14855")
    };
    cljs.core.async.t14855.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t14855.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag)
    };
    cljs.core.async.t14855.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb
    };
    cljs.core.async.t14855.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14857) {
      var self__ = this;
      var _14857__$1 = this;
      return self__.meta14856
    };
    cljs.core.async.t14855.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14857, meta14856__$1) {
      var self__ = this;
      var _14857__$1 = this;
      return new cljs.core.async.t14855(self__.cb, self__.flag, self__.alt_handler, meta14856__$1)
    };
    cljs.core.async.__GT_t14855 = function __GT_t14855(cb__$1, flag__$1, alt_handler__$1, meta14856) {
      return new cljs.core.async.t14855(cb__$1, flag__$1, alt_handler__$1, meta14856)
    }
  }
  return new cljs.core.async.t14855(cb, flag, alt_handler, null)
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 4143410454)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while(true) {
      if(i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function() {
              return fret.call(null, cljs.core.PersistentVector.fromArray([null, wport], true))
            }
          }(i, val, idx, port, wport, flag, n, idxs, priority)))
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__14858_SHARP_) {
            return fret.call(null, cljs.core.PersistentVector.fromArray([p1__14858_SHARP_, port], true))
          }
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if(cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([cljs.core.deref.call(null, vbox), function() {
            var or__3128__auto__ = wport;
            if(cljs.core.truth_(or__3128__auto__)) {
              return or__3128__auto__
            }else {
              return port
            }
          }()], true))
        }else {
          var G__14859 = i + 1;
          i = G__14859;
          continue
        }
      }else {
        return null
      }
      break
    }
  }();
  var or__3128__auto__ = ret;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    if(cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", 2558708147))) {
      var temp__4092__auto__ = function() {
        var and__3119__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if(cljs.core.truth_(and__3119__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag)
        }else {
          return and__3119__auto__
        }
      }();
      if(cljs.core.truth_(temp__4092__auto__)) {
        var got = temp__4092__auto__;
        return cljs.core.async.impl.channels.box.call(null, cljs.core.PersistentVector.fromArray([(new cljs.core.Keyword(null, "default", "default", 2558708147)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", 2558708147)], true))
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__14860) {
    var map__14862 = p__14860;
    var map__14862__$1 = cljs.core.seq_QMARK_.call(null, map__14862) ? cljs.core.apply.call(null, cljs.core.hash_map, map__14862) : map__14862;
    var opts = map__14862__$1;
    if(null) {
      return null
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("alts! used not in (go ...) block"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, null))].join(""));
    }
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__14860 = null;
    if(arguments.length > 1) {
      p__14860 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return alts_BANG___delegate.call(this, ports, p__14860)
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__14863) {
    var ports = cljs.core.first(arglist__14863);
    var p__14860 = cljs.core.rest(arglist__14863);
    return alts_BANG___delegate(ports, p__14860)
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if(typeof cljs.core.async.t14871 !== "undefined") {
  }else {
    cljs.core.async.t14871 = function(ch, f, map_LT_, meta14872) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta14872 = meta14872;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14871.cljs$lang$type = true;
    cljs.core.async.t14871.cljs$lang$ctorStr = "cljs.core.async/t14871";
    cljs.core.async.t14871.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14871")
    };
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
    };
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if(typeof cljs.core.async.t14874 !== "undefined") {
        }else {
          cljs.core.async.t14874 = function(fn1, _, meta14872, ch, f, map_LT_, meta14875) {
            this.fn1 = fn1;
            this._ = _;
            this.meta14872 = meta14872;
            this.ch = ch;
            this.f = f;
            this.map_LT_ = map_LT_;
            this.meta14875 = meta14875;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          cljs.core.async.t14874.cljs$lang$type = true;
          cljs.core.async.t14874.cljs$lang$ctorStr = "cljs.core.async/t14874";
          cljs.core.async.t14874.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
            return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14874")
          };
          cljs.core.async.t14874.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t14874.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1)
          };
          cljs.core.async.t14874.prototype.cljs$core$async$impl$protocols$Handler$lock_id$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            return cljs.core.async.impl.protocols.lock_id.call(null, self__.fn1)
          };
          cljs.core.async.t14874.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$3) {
            var self__ = this;
            var ___$4 = this;
            var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
            return function(f1, ___$4) {
              return function(p1__14864_SHARP_) {
                return f1.call(null, p1__14864_SHARP_ == null ? null : self__.f.call(null, p1__14864_SHARP_))
              }
            }(f1, ___$4)
          };
          cljs.core.async.t14874.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14876) {
            var self__ = this;
            var _14876__$1 = this;
            return self__.meta14875
          };
          cljs.core.async.t14874.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14876, meta14875__$1) {
            var self__ = this;
            var _14876__$1 = this;
            return new cljs.core.async.t14874(self__.fn1, self__._, self__.meta14872, self__.ch, self__.f, self__.map_LT_, meta14875__$1)
          };
          cljs.core.async.__GT_t14874 = function __GT_t14874(fn1__$1, ___$2, meta14872__$1, ch__$2, f__$2, map_LT___$2, meta14875) {
            return new cljs.core.async.t14874(fn1__$1, ___$2, meta14872__$1, ch__$2, f__$2, map_LT___$2, meta14875)
          }
        }
        return new cljs.core.async.t14874(fn1, ___$1, self__.meta14872, self__.ch, self__.f, self__.map_LT_, null)
      }());
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = ret;
        if(cljs.core.truth_(and__3119__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null)
        }else {
          return and__3119__auto__
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)))
      }else {
        return ret
      }
    };
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14871.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14871.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14873) {
      var self__ = this;
      var _14873__$1 = this;
      return self__.meta14872
    };
    cljs.core.async.t14871.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14873, meta14872__$1) {
      var self__ = this;
      var _14873__$1 = this;
      return new cljs.core.async.t14871(self__.ch, self__.f, self__.map_LT_, meta14872__$1)
    };
    cljs.core.async.__GT_t14871 = function __GT_t14871(ch__$1, f__$1, map_LT___$1, meta14872) {
      return new cljs.core.async.t14871(ch__$1, f__$1, map_LT___$1, meta14872)
    }
  }
  return new cljs.core.async.t14871(ch, f, map_LT_, null)
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if(typeof cljs.core.async.t14880 !== "undefined") {
  }else {
    cljs.core.async.t14880 = function(ch, f, map_GT_, meta14881) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta14881 = meta14881;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14880.cljs$lang$type = true;
    cljs.core.async.t14880.cljs$lang$ctorStr = "cljs.core.async/t14880";
    cljs.core.async.t14880.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14880")
    };
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn0)
    };
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14880.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14880.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14882) {
      var self__ = this;
      var _14882__$1 = this;
      return self__.meta14881
    };
    cljs.core.async.t14880.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14882, meta14881__$1) {
      var self__ = this;
      var _14882__$1 = this;
      return new cljs.core.async.t14880(self__.ch, self__.f, self__.map_GT_, meta14881__$1)
    };
    cljs.core.async.__GT_t14880 = function __GT_t14880(ch__$1, f__$1, map_GT___$1, meta14881) {
      return new cljs.core.async.t14880(ch__$1, f__$1, map_GT___$1, meta14881)
    }
  }
  return new cljs.core.async.t14880(ch, f, map_GT_, null)
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if(typeof cljs.core.async.t14886 !== "undefined") {
  }else {
    cljs.core.async.t14886 = function(ch, p, filter_GT_, meta14887) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta14887 = meta14887;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    cljs.core.async.t14886.cljs$lang$type = true;
    cljs.core.async.t14886.cljs$lang$ctorStr = "cljs.core.async/t14886";
    cljs.core.async.t14886.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
      return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t14886")
    };
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn0) {
      var self__ = this;
      var ___$1 = this;
      if(cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn0)
      }else {
        return cljs.core.async.impl.channels.box.call(null, null)
      }
    };
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1)
    };
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t14886.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch)
    };
    cljs.core.async.t14886.prototype.cljs$core$IMeta$_meta$arity$1 = function(_14888) {
      var self__ = this;
      var _14888__$1 = this;
      return self__.meta14887
    };
    cljs.core.async.t14886.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_14888, meta14887__$1) {
      var self__ = this;
      var _14888__$1 = this;
      return new cljs.core.async.t14886(self__.ch, self__.p, self__.filter_GT_, meta14887__$1)
    };
    cljs.core.async.__GT_t14886 = function __GT_t14886(ch__$1, p__$1, filter_GT___$1, meta14887) {
      return new cljs.core.async.t14886(ch__$1, p__$1, filter_GT___$1, meta14887)
    }
  }
  return new cljs.core.async.t14886(ch, p, filter_GT_, null)
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch)
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null)
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5380__auto___14963 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_14946) {
          var state_val_14947 = state_14946[1];
          if(state_val_14947 === 1) {
            var state_14946__$1 = state_14946;
            var statearr_14948_14964 = state_14946__$1;
            statearr_14948_14964[2] = null;
            statearr_14948_14964[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_14947 === 2) {
              var state_14946__$1 = state_14946;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_14946__$1, 4, ch)
            }else {
              if(state_val_14947 === 3) {
                var inst_14944 = state_14946[2];
                var state_14946__$1 = state_14946;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_14946__$1, inst_14944)
              }else {
                if(state_val_14947 === 4) {
                  var inst_14928 = state_14946[5];
                  var inst_14928__$1 = state_14946[2];
                  var inst_14929 = inst_14928__$1 == null;
                  var state_14946__$1 = function() {
                    var statearr_14949 = state_14946;
                    statearr_14949[5] = inst_14928__$1;
                    return statearr_14949
                  }();
                  if(cljs.core.truth_(inst_14929)) {
                    var statearr_14950_14965 = state_14946__$1;
                    statearr_14950_14965[1] = 5
                  }else {
                    var statearr_14951_14966 = state_14946__$1;
                    statearr_14951_14966[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_14947 === 5) {
                    var inst_14931 = cljs.core.async.close_BANG_.call(null, out);
                    var state_14946__$1 = state_14946;
                    var statearr_14952_14967 = state_14946__$1;
                    statearr_14952_14967[2] = inst_14931;
                    statearr_14952_14967[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_14947 === 6) {
                      var inst_14928 = state_14946[5];
                      var inst_14933 = p.call(null, inst_14928);
                      var state_14946__$1 = state_14946;
                      if(cljs.core.truth_(inst_14933)) {
                        var statearr_14953_14968 = state_14946__$1;
                        statearr_14953_14968[1] = 8
                      }else {
                        var statearr_14954_14969 = state_14946__$1;
                        statearr_14954_14969[1] = 9
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_14947 === 7) {
                        var inst_14942 = state_14946[2];
                        var state_14946__$1 = state_14946;
                        var statearr_14955_14970 = state_14946__$1;
                        statearr_14955_14970[2] = inst_14942;
                        statearr_14955_14970[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_14947 === 8) {
                          var inst_14928 = state_14946[5];
                          var state_14946__$1 = state_14946;
                          return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_14946__$1, 11, out, inst_14928)
                        }else {
                          if(state_val_14947 === 9) {
                            var state_14946__$1 = state_14946;
                            var statearr_14956_14971 = state_14946__$1;
                            statearr_14956_14971[2] = null;
                            statearr_14956_14971[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_14947 === 10) {
                              var inst_14939 = state_14946[2];
                              var state_14946__$1 = function() {
                                var statearr_14957 = state_14946;
                                statearr_14957[6] = inst_14939;
                                return statearr_14957
                              }();
                              var statearr_14958_14972 = state_14946__$1;
                              statearr_14958_14972[2] = null;
                              statearr_14958_14972[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_14947 === 11) {
                                var inst_14936 = state_14946[2];
                                var state_14946__$1 = state_14946;
                                var statearr_14959_14973 = state_14946__$1;
                                statearr_14959_14973[2] = inst_14936;
                                statearr_14959_14973[1] = 10;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_14961 = new Array(7);
              statearr_14961[0] = state_machine__5331__auto__;
              statearr_14961[1] = 1;
              return statearr_14961
            };
            var state_machine__5331__auto____1 = function(state_14946) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_14946);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_14946) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_14946)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_14962 = f__5381__auto__.call(null);
        statearr_14962[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___14963;
        return statearr_14962
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null)
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n)
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_15121) {
        var state_val_15122 = state_15121[1];
        if(state_val_15122 === 1) {
          var state_15121__$1 = state_15121;
          var statearr_15123_15156 = state_15121__$1;
          statearr_15123_15156[2] = null;
          statearr_15123_15156[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_15122 === 2) {
            var state_15121__$1 = state_15121;
            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15121__$1, 4, in$)
          }else {
            if(state_val_15122 === 3) {
              var inst_15119 = state_15121[2];
              var state_15121__$1 = state_15121;
              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15121__$1, inst_15119)
            }else {
              if(state_val_15122 === 4) {
                var inst_15067 = state_15121[5];
                var inst_15067__$1 = state_15121[2];
                var inst_15068 = inst_15067__$1 == null;
                var state_15121__$1 = function() {
                  var statearr_15124 = state_15121;
                  statearr_15124[5] = inst_15067__$1;
                  return statearr_15124
                }();
                if(cljs.core.truth_(inst_15068)) {
                  var statearr_15125_15157 = state_15121__$1;
                  statearr_15125_15157[1] = 5
                }else {
                  var statearr_15126_15158 = state_15121__$1;
                  statearr_15126_15158[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_15122 === 5) {
                  var inst_15070 = cljs.core.async.close_BANG_.call(null, out);
                  var state_15121__$1 = state_15121;
                  var statearr_15127_15159 = state_15121__$1;
                  statearr_15127_15159[2] = inst_15070;
                  statearr_15127_15159[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15122 === 6) {
                    var inst_15067 = state_15121[5];
                    var inst_15072 = f.call(null, inst_15067);
                    var inst_15077 = cljs.core.seq.call(null, inst_15072);
                    var inst_15078 = inst_15077;
                    var inst_15079 = null;
                    var inst_15080 = 0;
                    var inst_15081 = 0;
                    var state_15121__$1 = function() {
                      var statearr_15128 = state_15121;
                      statearr_15128[6] = inst_15080;
                      statearr_15128[7] = inst_15081;
                      statearr_15128[8] = inst_15078;
                      statearr_15128[9] = inst_15079;
                      return statearr_15128
                    }();
                    var statearr_15129_15160 = state_15121__$1;
                    statearr_15129_15160[2] = null;
                    statearr_15129_15160[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15122 === 7) {
                      var inst_15117 = state_15121[2];
                      var state_15121__$1 = state_15121;
                      var statearr_15130_15161 = state_15121__$1;
                      statearr_15130_15161[2] = inst_15117;
                      statearr_15130_15161[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15122 === 8) {
                        var inst_15080 = state_15121[6];
                        var inst_15081 = state_15121[7];
                        var inst_15083 = inst_15081 < inst_15080;
                        var inst_15084 = inst_15083;
                        var state_15121__$1 = state_15121;
                        if(cljs.core.truth_(inst_15084)) {
                          var statearr_15131_15162 = state_15121__$1;
                          statearr_15131_15162[1] = 10
                        }else {
                          var statearr_15132_15163 = state_15121__$1;
                          statearr_15132_15163[1] = 11
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15122 === 9) {
                          var inst_15114 = state_15121[2];
                          var state_15121__$1 = function() {
                            var statearr_15133 = state_15121;
                            statearr_15133[10] = inst_15114;
                            return statearr_15133
                          }();
                          var statearr_15134_15164 = state_15121__$1;
                          statearr_15134_15164[2] = null;
                          statearr_15134_15164[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15122 === 10) {
                            var inst_15081 = state_15121[7];
                            var inst_15079 = state_15121[9];
                            var inst_15086 = cljs.core._nth.call(null, inst_15079, inst_15081);
                            var state_15121__$1 = state_15121;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15121__$1, 13, out, inst_15086)
                          }else {
                            if(state_val_15122 === 11) {
                              var inst_15078 = state_15121[8];
                              var inst_15092 = state_15121[11];
                              var inst_15092__$1 = cljs.core.seq.call(null, inst_15078);
                              var state_15121__$1 = function() {
                                var statearr_15138 = state_15121;
                                statearr_15138[11] = inst_15092__$1;
                                return statearr_15138
                              }();
                              if(inst_15092__$1) {
                                var statearr_15139_15165 = state_15121__$1;
                                statearr_15139_15165[1] = 14
                              }else {
                                var statearr_15140_15166 = state_15121__$1;
                                statearr_15140_15166[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15122 === 12) {
                                var inst_15112 = state_15121[2];
                                var state_15121__$1 = state_15121;
                                var statearr_15141_15167 = state_15121__$1;
                                statearr_15141_15167[2] = inst_15112;
                                statearr_15141_15167[1] = 9;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15122 === 13) {
                                  var inst_15080 = state_15121[6];
                                  var inst_15081 = state_15121[7];
                                  var inst_15078 = state_15121[8];
                                  var inst_15079 = state_15121[9];
                                  var inst_15088 = state_15121[2];
                                  var inst_15089 = inst_15081 + 1;
                                  var tmp15135 = inst_15080;
                                  var tmp15136 = inst_15078;
                                  var tmp15137 = inst_15079;
                                  var inst_15078__$1 = tmp15136;
                                  var inst_15079__$1 = tmp15137;
                                  var inst_15080__$1 = tmp15135;
                                  var inst_15081__$1 = inst_15089;
                                  var state_15121__$1 = function() {
                                    var statearr_15142 = state_15121;
                                    statearr_15142[6] = inst_15080__$1;
                                    statearr_15142[7] = inst_15081__$1;
                                    statearr_15142[8] = inst_15078__$1;
                                    statearr_15142[9] = inst_15079__$1;
                                    statearr_15142[12] = inst_15088;
                                    return statearr_15142
                                  }();
                                  var statearr_15143_15168 = state_15121__$1;
                                  statearr_15143_15168[2] = null;
                                  statearr_15143_15168[1] = 8;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15122 === 14) {
                                    var inst_15092 = state_15121[11];
                                    var inst_15094 = cljs.core.chunked_seq_QMARK_.call(null, inst_15092);
                                    var state_15121__$1 = state_15121;
                                    if(inst_15094) {
                                      var statearr_15144_15169 = state_15121__$1;
                                      statearr_15144_15169[1] = 17
                                    }else {
                                      var statearr_15145_15170 = state_15121__$1;
                                      statearr_15145_15170[1] = 18
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15122 === 15) {
                                      var state_15121__$1 = state_15121;
                                      var statearr_15146_15171 = state_15121__$1;
                                      statearr_15146_15171[2] = null;
                                      statearr_15146_15171[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15122 === 16) {
                                        var inst_15110 = state_15121[2];
                                        var state_15121__$1 = state_15121;
                                        var statearr_15147_15172 = state_15121__$1;
                                        statearr_15147_15172[2] = inst_15110;
                                        statearr_15147_15172[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15122 === 17) {
                                          var inst_15092 = state_15121[11];
                                          var inst_15096 = cljs.core.chunk_first.call(null, inst_15092);
                                          var inst_15097 = cljs.core.chunk_rest.call(null, inst_15092);
                                          var inst_15098 = cljs.core.count.call(null, inst_15096);
                                          var inst_15078 = inst_15097;
                                          var inst_15079 = inst_15096;
                                          var inst_15080 = inst_15098;
                                          var inst_15081 = 0;
                                          var state_15121__$1 = function() {
                                            var statearr_15148 = state_15121;
                                            statearr_15148[6] = inst_15080;
                                            statearr_15148[7] = inst_15081;
                                            statearr_15148[8] = inst_15078;
                                            statearr_15148[9] = inst_15079;
                                            return statearr_15148
                                          }();
                                          var statearr_15149_15173 = state_15121__$1;
                                          statearr_15149_15173[2] = null;
                                          statearr_15149_15173[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15122 === 18) {
                                            var inst_15092 = state_15121[11];
                                            var inst_15101 = cljs.core.first.call(null, inst_15092);
                                            var state_15121__$1 = state_15121;
                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15121__$1, 20, out, inst_15101)
                                          }else {
                                            if(state_val_15122 === 19) {
                                              var inst_15107 = state_15121[2];
                                              var state_15121__$1 = state_15121;
                                              var statearr_15150_15174 = state_15121__$1;
                                              statearr_15150_15174[2] = inst_15107;
                                              statearr_15150_15174[1] = 16;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_15122 === 20) {
                                                var inst_15092 = state_15121[11];
                                                var inst_15103 = state_15121[2];
                                                var inst_15104 = cljs.core.next.call(null, inst_15092);
                                                var inst_15078 = inst_15104;
                                                var inst_15079 = null;
                                                var inst_15080 = 0;
                                                var inst_15081 = 0;
                                                var state_15121__$1 = function() {
                                                  var statearr_15151 = state_15121;
                                                  statearr_15151[6] = inst_15080;
                                                  statearr_15151[7] = inst_15081;
                                                  statearr_15151[13] = inst_15103;
                                                  statearr_15151[8] = inst_15078;
                                                  statearr_15151[9] = inst_15079;
                                                  return statearr_15151
                                                }();
                                                var statearr_15152_15175 = state_15121__$1;
                                                statearr_15152_15175[2] = null;
                                                statearr_15152_15175[1] = 8;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                return null
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15154 = new Array(14);
            statearr_15154[0] = state_machine__5331__auto__;
            statearr_15154[1] = 1;
            return statearr_15154
          };
          var state_machine__5331__auto____1 = function(state_15121) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_15121);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_15121) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_15121)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15155 = f__5381__auto__.call(null);
      statearr_15155[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_15155
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null)
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null)
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true)
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__5380__auto___15248 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15231) {
          var state_val_15232 = state_15231[1];
          if(state_val_15232 === 1) {
            var state_15231__$1 = state_15231;
            var statearr_15233_15249 = state_15231__$1;
            statearr_15233_15249[2] = null;
            statearr_15233_15249[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15232 === 2) {
              var state_15231__$1 = state_15231;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15231__$1, 4, from)
            }else {
              if(state_val_15232 === 3) {
                var inst_15229 = state_15231[2];
                var state_15231__$1 = state_15231;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15231__$1, inst_15229)
              }else {
                if(state_val_15232 === 4) {
                  var inst_15214 = state_15231[5];
                  var inst_15214__$1 = state_15231[2];
                  var inst_15215 = inst_15214__$1 == null;
                  var state_15231__$1 = function() {
                    var statearr_15234 = state_15231;
                    statearr_15234[5] = inst_15214__$1;
                    return statearr_15234
                  }();
                  if(cljs.core.truth_(inst_15215)) {
                    var statearr_15235_15250 = state_15231__$1;
                    statearr_15235_15250[1] = 5
                  }else {
                    var statearr_15236_15251 = state_15231__$1;
                    statearr_15236_15251[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15232 === 5) {
                    var state_15231__$1 = state_15231;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_15237_15252 = state_15231__$1;
                      statearr_15237_15252[1] = 8
                    }else {
                      var statearr_15238_15253 = state_15231__$1;
                      statearr_15238_15253[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15232 === 6) {
                      var inst_15214 = state_15231[5];
                      var state_15231__$1 = state_15231;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15231__$1, 11, to, inst_15214)
                    }else {
                      if(state_val_15232 === 7) {
                        var inst_15227 = state_15231[2];
                        var state_15231__$1 = state_15231;
                        var statearr_15239_15254 = state_15231__$1;
                        statearr_15239_15254[2] = inst_15227;
                        statearr_15239_15254[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15232 === 8) {
                          var inst_15218 = cljs.core.async.close_BANG_.call(null, to);
                          var state_15231__$1 = state_15231;
                          var statearr_15240_15255 = state_15231__$1;
                          statearr_15240_15255[2] = inst_15218;
                          statearr_15240_15255[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15232 === 9) {
                            var state_15231__$1 = state_15231;
                            var statearr_15241_15256 = state_15231__$1;
                            statearr_15241_15256[2] = null;
                            statearr_15241_15256[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15232 === 10) {
                              var inst_15221 = state_15231[2];
                              var state_15231__$1 = state_15231;
                              var statearr_15242_15257 = state_15231__$1;
                              statearr_15242_15257[2] = inst_15221;
                              statearr_15242_15257[1] = 7;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15232 === 11) {
                                var inst_15224 = state_15231[2];
                                var state_15231__$1 = function() {
                                  var statearr_15243 = state_15231;
                                  statearr_15243[6] = inst_15224;
                                  return statearr_15243
                                }();
                                var statearr_15244_15258 = state_15231__$1;
                                statearr_15244_15258[2] = null;
                                statearr_15244_15258[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15246 = new Array(7);
              statearr_15246[0] = state_machine__5331__auto__;
              statearr_15246[1] = 1;
              return statearr_15246
            };
            var state_machine__5331__auto____1 = function(state_15231) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15231);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15231) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15231)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15247 = f__5381__auto__.call(null);
        statearr_15247[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15248;
        return statearr_15247
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return to
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null)
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__5380__auto___15337 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15319) {
          var state_val_15320 = state_15319[1];
          if(state_val_15320 === 1) {
            var state_15319__$1 = state_15319;
            var statearr_15321_15338 = state_15319__$1;
            statearr_15321_15338[2] = null;
            statearr_15321_15338[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15320 === 2) {
              var state_15319__$1 = state_15319;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15319__$1, 4, ch)
            }else {
              if(state_val_15320 === 3) {
                var inst_15317 = state_15319[2];
                var state_15319__$1 = state_15319;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15319__$1, inst_15317)
              }else {
                if(state_val_15320 === 4) {
                  var inst_15300 = state_15319[5];
                  var inst_15300__$1 = state_15319[2];
                  var inst_15301 = inst_15300__$1 == null;
                  var state_15319__$1 = function() {
                    var statearr_15322 = state_15319;
                    statearr_15322[5] = inst_15300__$1;
                    return statearr_15322
                  }();
                  if(cljs.core.truth_(inst_15301)) {
                    var statearr_15323_15339 = state_15319__$1;
                    statearr_15323_15339[1] = 5
                  }else {
                    var statearr_15324_15340 = state_15319__$1;
                    statearr_15324_15340[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15320 === 5) {
                    var inst_15303 = cljs.core.async.close_BANG_.call(null, tc);
                    var inst_15304 = cljs.core.async.close_BANG_.call(null, fc);
                    var state_15319__$1 = function() {
                      var statearr_15325 = state_15319;
                      statearr_15325[6] = inst_15303;
                      return statearr_15325
                    }();
                    var statearr_15326_15341 = state_15319__$1;
                    statearr_15326_15341[2] = inst_15304;
                    statearr_15326_15341[1] = 7;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15320 === 6) {
                      var inst_15300 = state_15319[5];
                      var inst_15306 = p.call(null, inst_15300);
                      var state_15319__$1 = state_15319;
                      if(cljs.core.truth_(inst_15306)) {
                        var statearr_15327_15342 = state_15319__$1;
                        statearr_15327_15342[1] = 9
                      }else {
                        var statearr_15328_15343 = state_15319__$1;
                        statearr_15328_15343[1] = 10
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15320 === 7) {
                        var inst_15315 = state_15319[2];
                        var state_15319__$1 = state_15319;
                        var statearr_15329_15344 = state_15319__$1;
                        statearr_15329_15344[2] = inst_15315;
                        statearr_15329_15344[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15320 === 8) {
                          var inst_15312 = state_15319[2];
                          var state_15319__$1 = function() {
                            var statearr_15330 = state_15319;
                            statearr_15330[7] = inst_15312;
                            return statearr_15330
                          }();
                          var statearr_15331_15345 = state_15319__$1;
                          statearr_15331_15345[2] = null;
                          statearr_15331_15345[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15320 === 9) {
                            var state_15319__$1 = state_15319;
                            var statearr_15332_15346 = state_15319__$1;
                            statearr_15332_15346[2] = tc;
                            statearr_15332_15346[1] = 11;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15320 === 10) {
                              var state_15319__$1 = state_15319;
                              var statearr_15333_15347 = state_15319__$1;
                              statearr_15333_15347[2] = fc;
                              statearr_15333_15347[1] = 11;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15320 === 11) {
                                var inst_15300 = state_15319[5];
                                var inst_15310 = state_15319[2];
                                var state_15319__$1 = state_15319;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15319__$1, 8, inst_15310, inst_15300)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15335 = new Array(8);
              statearr_15335[0] = state_machine__5331__auto__;
              statearr_15335[1] = 1;
              return statearr_15335
            };
            var state_machine__5331__auto____1 = function(state_15319) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15319);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15319) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15319)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15336 = f__5381__auto__.call(null);
        statearr_15336[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15337;
        return statearr_15336
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return cljs.core.PersistentVector.fromArray([tc, fc], true)
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_15390) {
        var state_val_15391 = state_15390[1];
        if(state_val_15391 === 7) {
          var inst_15386 = state_15390[2];
          var state_15390__$1 = state_15390;
          var statearr_15392_15404 = state_15390__$1;
          statearr_15392_15404[2] = inst_15386;
          statearr_15392_15404[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_15391 === 6) {
            var inst_15376 = state_15390[5];
            var inst_15379 = state_15390[6];
            var inst_15383 = f.call(null, inst_15376, inst_15379);
            var inst_15376__$1 = inst_15383;
            var state_15390__$1 = function() {
              var statearr_15393 = state_15390;
              statearr_15393[5] = inst_15376__$1;
              return statearr_15393
            }();
            var statearr_15394_15405 = state_15390__$1;
            statearr_15394_15405[2] = null;
            statearr_15394_15405[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15391 === 5) {
              var inst_15376 = state_15390[5];
              var state_15390__$1 = state_15390;
              var statearr_15395_15406 = state_15390__$1;
              statearr_15395_15406[2] = inst_15376;
              statearr_15395_15406[1] = 7;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15391 === 4) {
                var inst_15379 = state_15390[6];
                var inst_15379__$1 = state_15390[2];
                var inst_15380 = inst_15379__$1 == null;
                var state_15390__$1 = function() {
                  var statearr_15396 = state_15390;
                  statearr_15396[6] = inst_15379__$1;
                  return statearr_15396
                }();
                if(cljs.core.truth_(inst_15380)) {
                  var statearr_15397_15407 = state_15390__$1;
                  statearr_15397_15407[1] = 5
                }else {
                  var statearr_15398_15408 = state_15390__$1;
                  statearr_15398_15408[1] = 6
                }
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_15391 === 3) {
                  var inst_15388 = state_15390[2];
                  var state_15390__$1 = state_15390;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15390__$1, inst_15388)
                }else {
                  if(state_val_15391 === 2) {
                    var state_15390__$1 = state_15390;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15390__$1, 4, ch)
                  }else {
                    if(state_val_15391 === 1) {
                      var inst_15376 = init;
                      var state_15390__$1 = function() {
                        var statearr_15399 = state_15390;
                        statearr_15399[5] = inst_15376;
                        return statearr_15399
                      }();
                      var statearr_15400_15409 = state_15390__$1;
                      statearr_15400_15409[2] = null;
                      statearr_15400_15409[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15402 = new Array(7);
            statearr_15402[0] = state_machine__5331__auto__;
            statearr_15402[1] = 1;
            return statearr_15402
          };
          var state_machine__5331__auto____1 = function(state_15390) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_15390);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_15390) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_15390)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15403 = f__5381__auto__.call(null);
      statearr_15403[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_15403
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true)
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_15467) {
          var state_val_15468 = state_15467[1];
          if(state_val_15468 === 1) {
            var inst_15447 = cljs.core.seq.call(null, coll);
            var inst_15448 = inst_15447;
            var state_15467__$1 = function() {
              var statearr_15469 = state_15467;
              statearr_15469[5] = inst_15448;
              return statearr_15469
            }();
            var statearr_15470_15484 = state_15467__$1;
            statearr_15470_15484[2] = null;
            statearr_15470_15484[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15468 === 2) {
              var inst_15448 = state_15467[5];
              var state_15467__$1 = state_15467;
              if(cljs.core.truth_(inst_15448)) {
                var statearr_15471_15485 = state_15467__$1;
                statearr_15471_15485[1] = 4
              }else {
                var statearr_15472_15486 = state_15467__$1;
                statearr_15472_15486[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15468 === 3) {
                var inst_15465 = state_15467[2];
                var state_15467__$1 = state_15467;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15467__$1, inst_15465)
              }else {
                if(state_val_15468 === 4) {
                  var inst_15448 = state_15467[5];
                  var inst_15451 = cljs.core.first.call(null, inst_15448);
                  var state_15467__$1 = state_15467;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15467__$1, 7, ch, inst_15451)
                }else {
                  if(state_val_15468 === 5) {
                    var state_15467__$1 = state_15467;
                    if(cljs.core.truth_(close_QMARK_)) {
                      var statearr_15473_15487 = state_15467__$1;
                      statearr_15473_15487[1] = 8
                    }else {
                      var statearr_15474_15488 = state_15467__$1;
                      statearr_15474_15488[1] = 9
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_15468 === 6) {
                      var inst_15463 = state_15467[2];
                      var state_15467__$1 = state_15467;
                      var statearr_15475_15489 = state_15467__$1;
                      statearr_15475_15489[2] = inst_15463;
                      statearr_15475_15489[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15468 === 7) {
                        var inst_15448 = state_15467[5];
                        var inst_15453 = state_15467[2];
                        var inst_15454 = cljs.core.next.call(null, inst_15448);
                        var inst_15448__$1 = inst_15454;
                        var state_15467__$1 = function() {
                          var statearr_15476 = state_15467;
                          statearr_15476[6] = inst_15453;
                          statearr_15476[5] = inst_15448__$1;
                          return statearr_15476
                        }();
                        var statearr_15477_15490 = state_15467__$1;
                        statearr_15477_15490[2] = null;
                        statearr_15477_15490[1] = 2;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15468 === 8) {
                          var inst_15458 = cljs.core.async.close_BANG_.call(null, ch);
                          var state_15467__$1 = state_15467;
                          var statearr_15478_15491 = state_15467__$1;
                          statearr_15478_15491[2] = inst_15458;
                          statearr_15478_15491[1] = 10;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15468 === 9) {
                            var state_15467__$1 = state_15467;
                            var statearr_15479_15492 = state_15467__$1;
                            statearr_15479_15492[2] = null;
                            statearr_15479_15492[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15468 === 10) {
                              var inst_15461 = state_15467[2];
                              var state_15467__$1 = state_15467;
                              var statearr_15480_15493 = state_15467__$1;
                              statearr_15480_15493[2] = inst_15461;
                              statearr_15480_15493[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              return null
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_15482 = new Array(7);
              statearr_15482[0] = state_machine__5331__auto__;
              statearr_15482[1] = 1;
              return statearr_15482
            };
            var state_machine__5331__auto____1 = function(state_15467) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_15467);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_15467) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_15467)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_15483 = f__5381__auto__.call(null);
        statearr_15483[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
        return statearr_15483
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return c__5380__auto__
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch
};
cljs.core.async.Mux = {};
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if(function() {
    var and__3119__auto__ = _;
    if(and__3119__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_)
  }else {
    var x__3723__auto__ = _ == null ? null : _;
    return function() {
      var or__3128__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _)
  }
};
cljs.core.async.Mult = {};
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_)
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if(typeof cljs.core.async.t15706 !== "undefined") {
    }else {
      cljs.core.async.t15706 = function(cs, ch, mult, meta15707) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta15707 = meta15707;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t15706.cljs$lang$type = true;
      cljs.core.async.t15706.cljs$lang$ctorStr = "cljs.core.async/t15706";
      cljs.core.async.t15706.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t15706")
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t15706.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$2, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$2, close_QMARK_);
          return null
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$2) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$2);
          return null
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t15706.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_15708) {
          var self__ = this;
          var _15708__$1 = this;
          return self__.meta15707
        }
      }(cs);
      cljs.core.async.t15706.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_15708, meta15707__$1) {
          var self__ = this;
          var _15708__$1 = this;
          return new cljs.core.async.t15706(self__.cs, self__.ch, self__.mult, meta15707__$1)
        }
      }(cs);
      cljs.core.async.__GT_t15706 = function(cs) {
        return function __GT_t15706(cs__$1, ch__$1, mult__$1, meta15707) {
          return new cljs.core.async.t15706(cs__$1, ch__$1, mult__$1, meta15707)
        }
      }(cs)
    }
    return new cljs.core.async.t15706(cs, ch, mult, null)
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function() {
      if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true)
      }else {
        return null
      }
    }
  }(cs, m, dchan, dctr);
  var c__5380__auto___15918 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_15836) {
        var state_val_15837 = state_15836[1];
        if(state_val_15837 === 32) {
          try {
            var inst_15787 = state_15836[5];
            var inst_15711 = state_15836[6];
            var inst_15793 = cljs.core.async.put_BANG_.call(null, inst_15787, inst_15711, done);
            var state_15836__$1 = state_15836;
            var statearr_15840_15919 = state_15836__$1;
            statearr_15840_15919[2] = inst_15793;
            statearr_15840_15919[1] = 30;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }catch(e15838) {
            if(e15838 instanceof Object) {
              var ex__5324__auto__ = e15838;
              var statearr_15839_15920 = state_15836;
              statearr_15839_15920[1] = 31;
              statearr_15839_15920[2] = ex__5324__auto__;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                throw e15838;
              }else {
                return null
              }
            }
          }
        }else {
          if(state_val_15837 === 1) {
            var state_15836__$1 = state_15836;
            var statearr_15841_15921 = state_15836__$1;
            statearr_15841_15921[2] = null;
            statearr_15841_15921[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_15837 === 33) {
              var inst_15799 = state_15836[7];
              var inst_15801 = cljs.core.chunked_seq_QMARK_.call(null, inst_15799);
              var state_15836__$1 = state_15836;
              if(inst_15801) {
                var statearr_15842_15922 = state_15836__$1;
                statearr_15842_15922[1] = 36
              }else {
                var statearr_15843_15923 = state_15836__$1;
                statearr_15843_15923[1] = 37
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_15837 === 2) {
                var state_15836__$1 = state_15836;
                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15836__$1, 4, ch)
              }else {
                if(state_val_15837 === 34) {
                  var state_15836__$1 = state_15836;
                  var statearr_15844_15924 = state_15836__$1;
                  statearr_15844_15924[2] = null;
                  statearr_15844_15924[1] = 35;
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_15837 === 3) {
                    var inst_15834 = state_15836[2];
                    var state_15836__$1 = state_15836;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15836__$1, inst_15834)
                  }else {
                    if(state_val_15837 === 35) {
                      var inst_15823 = state_15836[2];
                      var state_15836__$1 = state_15836;
                      var statearr_15845_15925 = state_15836__$1;
                      statearr_15845_15925[2] = inst_15823;
                      statearr_15845_15925[1] = 29;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_15837 === 4) {
                        var inst_15711 = state_15836[6];
                        var inst_15711__$1 = state_15836[2];
                        var inst_15712 = inst_15711__$1 == null;
                        var state_15836__$1 = function() {
                          var statearr_15846 = state_15836;
                          statearr_15846[6] = inst_15711__$1;
                          return statearr_15846
                        }();
                        if(cljs.core.truth_(inst_15712)) {
                          var statearr_15847_15926 = state_15836__$1;
                          statearr_15847_15926[1] = 5
                        }else {
                          var statearr_15848_15927 = state_15836__$1;
                          statearr_15848_15927[1] = 6
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_15837 === 36) {
                          var inst_15799 = state_15836[7];
                          var inst_15803 = cljs.core.chunk_first.call(null, inst_15799);
                          var inst_15804 = cljs.core.chunk_rest.call(null, inst_15799);
                          var inst_15805 = cljs.core.count.call(null, inst_15803);
                          var inst_15779 = inst_15804;
                          var inst_15780 = inst_15803;
                          var inst_15781 = inst_15805;
                          var inst_15782 = 0;
                          var state_15836__$1 = function() {
                            var statearr_15849 = state_15836;
                            statearr_15849[8] = inst_15779;
                            statearr_15849[9] = inst_15782;
                            statearr_15849[10] = inst_15781;
                            statearr_15849[11] = inst_15780;
                            return statearr_15849
                          }();
                          var statearr_15850_15928 = state_15836__$1;
                          statearr_15850_15928[2] = null;
                          statearr_15850_15928[1] = 25;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_15837 === 5) {
                            var inst_15718 = cljs.core.deref.call(null, cs);
                            var inst_15719 = cljs.core.seq.call(null, inst_15718);
                            var inst_15720 = inst_15719;
                            var inst_15721 = null;
                            var inst_15722 = 0;
                            var inst_15723 = 0;
                            var state_15836__$1 = function() {
                              var statearr_15851 = state_15836;
                              statearr_15851[12] = inst_15723;
                              statearr_15851[13] = inst_15722;
                              statearr_15851[14] = inst_15721;
                              statearr_15851[15] = inst_15720;
                              return statearr_15851
                            }();
                            var statearr_15852_15929 = state_15836__$1;
                            statearr_15852_15929[2] = null;
                            statearr_15852_15929[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_15837 === 37) {
                              var inst_15799 = state_15836[7];
                              var inst_15808 = cljs.core.first.call(null, inst_15799);
                              var state_15836__$1 = function() {
                                var statearr_15853 = state_15836;
                                statearr_15853[16] = inst_15808;
                                return statearr_15853
                              }();
                              var statearr_15854_15930 = state_15836__$1;
                              statearr_15854_15930[2] = null;
                              statearr_15854_15930[1] = 41;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_15837 === 6) {
                                var inst_15770 = cljs.core.deref.call(null, cs);
                                var inst_15771 = cljs.core.keys.call(null, inst_15770);
                                var inst_15772 = cljs.core.count.call(null, inst_15771);
                                var inst_15773 = cljs.core.reset_BANG_.call(null, dctr, inst_15772);
                                var inst_15778 = cljs.core.seq.call(null, inst_15771);
                                var inst_15779 = inst_15778;
                                var inst_15780 = null;
                                var inst_15781 = 0;
                                var inst_15782 = 0;
                                var state_15836__$1 = function() {
                                  var statearr_15855 = state_15836;
                                  statearr_15855[17] = inst_15773;
                                  statearr_15855[8] = inst_15779;
                                  statearr_15855[9] = inst_15782;
                                  statearr_15855[10] = inst_15781;
                                  statearr_15855[11] = inst_15780;
                                  return statearr_15855
                                }();
                                var statearr_15856_15931 = state_15836__$1;
                                statearr_15856_15931[2] = null;
                                statearr_15856_15931[1] = 25;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_15837 === 38) {
                                  var inst_15820 = state_15836[2];
                                  var state_15836__$1 = state_15836;
                                  var statearr_15857_15932 = state_15836__$1;
                                  statearr_15857_15932[2] = inst_15820;
                                  statearr_15857_15932[1] = 35;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_15837 === 7) {
                                    var inst_15832 = state_15836[2];
                                    var state_15836__$1 = state_15836;
                                    var statearr_15858_15933 = state_15836__$1;
                                    statearr_15858_15933[2] = inst_15832;
                                    statearr_15858_15933[1] = 3;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_15837 === 39) {
                                      var inst_15799 = state_15836[7];
                                      var inst_15816 = state_15836[2];
                                      var inst_15817 = cljs.core.next.call(null, inst_15799);
                                      var inst_15779 = inst_15817;
                                      var inst_15780 = null;
                                      var inst_15781 = 0;
                                      var inst_15782 = 0;
                                      var state_15836__$1 = function() {
                                        var statearr_15859 = state_15836;
                                        statearr_15859[8] = inst_15779;
                                        statearr_15859[9] = inst_15782;
                                        statearr_15859[10] = inst_15781;
                                        statearr_15859[11] = inst_15780;
                                        statearr_15859[18] = inst_15816;
                                        return statearr_15859
                                      }();
                                      var statearr_15860_15934 = state_15836__$1;
                                      statearr_15860_15934[2] = null;
                                      statearr_15860_15934[1] = 25;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_15837 === 8) {
                                        var inst_15723 = state_15836[12];
                                        var inst_15722 = state_15836[13];
                                        var inst_15725 = inst_15723 < inst_15722;
                                        var inst_15726 = inst_15725;
                                        var state_15836__$1 = state_15836;
                                        if(cljs.core.truth_(inst_15726)) {
                                          var statearr_15861_15935 = state_15836__$1;
                                          statearr_15861_15935[1] = 10
                                        }else {
                                          var statearr_15862_15936 = state_15836__$1;
                                          statearr_15862_15936[1] = 11
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_15837 === 40) {
                                          var inst_15808 = state_15836[16];
                                          var inst_15809 = state_15836[2];
                                          var inst_15810 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                          var inst_15811 = cljs.core.async.untap_STAR_.call(null, m, inst_15808);
                                          var state_15836__$1 = function() {
                                            var statearr_15863 = state_15836;
                                            statearr_15863[19] = inst_15810;
                                            statearr_15863[20] = inst_15809;
                                            return statearr_15863
                                          }();
                                          var statearr_15864_15937 = state_15836__$1;
                                          statearr_15864_15937[2] = inst_15811;
                                          statearr_15864_15937[1] = 39;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_15837 === 9) {
                                            var inst_15768 = state_15836[2];
                                            var state_15836__$1 = state_15836;
                                            var statearr_15865_15938 = state_15836__$1;
                                            statearr_15865_15938[2] = inst_15768;
                                            statearr_15865_15938[1] = 7;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_15837 === 41) {
                                              try {
                                                var inst_15808 = state_15836[16];
                                                var inst_15711 = state_15836[6];
                                                var inst_15814 = cljs.core.async.put_BANG_.call(null, inst_15808, inst_15711, done);
                                                var state_15836__$1 = state_15836;
                                                var statearr_15868_15939 = state_15836__$1;
                                                statearr_15868_15939[2] = inst_15814;
                                                statearr_15868_15939[1] = 39;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }catch(e15866) {
                                                if(e15866 instanceof Object) {
                                                  var ex__5324__auto__ = e15866;
                                                  var statearr_15867_15940 = state_15836;
                                                  statearr_15867_15940[1] = 40;
                                                  statearr_15867_15940[2] = ex__5324__auto__;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                    throw e15866;
                                                  }else {
                                                    return null
                                                  }
                                                }
                                              }
                                            }else {
                                              if(state_val_15837 === 10) {
                                                var inst_15723 = state_15836[12];
                                                var inst_15721 = state_15836[14];
                                                var inst_15729 = cljs.core._nth.call(null, inst_15721, inst_15723);
                                                var inst_15730 = cljs.core.nth.call(null, inst_15729, 0, null);
                                                var inst_15731 = cljs.core.nth.call(null, inst_15729, 1, null);
                                                var state_15836__$1 = function() {
                                                  var statearr_15869 = state_15836;
                                                  statearr_15869[21] = inst_15730;
                                                  return statearr_15869
                                                }();
                                                if(cljs.core.truth_(inst_15731)) {
                                                  var statearr_15870_15941 = state_15836__$1;
                                                  statearr_15870_15941[1] = 13
                                                }else {
                                                  var statearr_15871_15942 = state_15836__$1;
                                                  statearr_15871_15942[1] = 14
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_15837 === 42) {
                                                  var inst_15829 = state_15836[2];
                                                  var state_15836__$1 = function() {
                                                    var statearr_15872 = state_15836;
                                                    statearr_15872[22] = inst_15829;
                                                    return statearr_15872
                                                  }();
                                                  var statearr_15873_15943 = state_15836__$1;
                                                  statearr_15873_15943[2] = null;
                                                  statearr_15873_15943[1] = 2;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_15837 === 11) {
                                                    var inst_15740 = state_15836[23];
                                                    var inst_15720 = state_15836[15];
                                                    var inst_15740__$1 = cljs.core.seq.call(null, inst_15720);
                                                    var state_15836__$1 = function() {
                                                      var statearr_15874 = state_15836;
                                                      statearr_15874[23] = inst_15740__$1;
                                                      return statearr_15874
                                                    }();
                                                    if(inst_15740__$1) {
                                                      var statearr_15875_15944 = state_15836__$1;
                                                      statearr_15875_15944[1] = 16
                                                    }else {
                                                      var statearr_15876_15945 = state_15836__$1;
                                                      statearr_15876_15945[1] = 17
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_15837 === 12) {
                                                      var inst_15766 = state_15836[2];
                                                      var state_15836__$1 = state_15836;
                                                      var statearr_15877_15946 = state_15836__$1;
                                                      statearr_15877_15946[2] = inst_15766;
                                                      statearr_15877_15946[1] = 9;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_15837 === 13) {
                                                        var inst_15730 = state_15836[21];
                                                        var inst_15733 = cljs.core.async.close_BANG_.call(null, inst_15730);
                                                        var state_15836__$1 = state_15836;
                                                        var statearr_15881_15947 = state_15836__$1;
                                                        statearr_15881_15947[2] = inst_15733;
                                                        statearr_15881_15947[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_15837 === 14) {
                                                          var state_15836__$1 = state_15836;
                                                          var statearr_15882_15948 = state_15836__$1;
                                                          statearr_15882_15948[2] = null;
                                                          statearr_15882_15948[1] = 15;
                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                        }else {
                                                          if(state_val_15837 === 15) {
                                                            var inst_15723 = state_15836[12];
                                                            var inst_15722 = state_15836[13];
                                                            var inst_15721 = state_15836[14];
                                                            var inst_15720 = state_15836[15];
                                                            var inst_15736 = state_15836[2];
                                                            var inst_15737 = inst_15723 + 1;
                                                            var tmp15878 = inst_15722;
                                                            var tmp15879 = inst_15721;
                                                            var tmp15880 = inst_15720;
                                                            var inst_15720__$1 = tmp15880;
                                                            var inst_15721__$1 = tmp15879;
                                                            var inst_15722__$1 = tmp15878;
                                                            var inst_15723__$1 = inst_15737;
                                                            var state_15836__$1 = function() {
                                                              var statearr_15883 = state_15836;
                                                              statearr_15883[24] = inst_15736;
                                                              statearr_15883[12] = inst_15723__$1;
                                                              statearr_15883[13] = inst_15722__$1;
                                                              statearr_15883[14] = inst_15721__$1;
                                                              statearr_15883[15] = inst_15720__$1;
                                                              return statearr_15883
                                                            }();
                                                            var statearr_15884_15949 = state_15836__$1;
                                                            statearr_15884_15949[2] = null;
                                                            statearr_15884_15949[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                          }else {
                                                            if(state_val_15837 === 16) {
                                                              var inst_15740 = state_15836[23];
                                                              var inst_15742 = cljs.core.chunked_seq_QMARK_.call(null, inst_15740);
                                                              var state_15836__$1 = state_15836;
                                                              if(inst_15742) {
                                                                var statearr_15885_15950 = state_15836__$1;
                                                                statearr_15885_15950[1] = 19
                                                              }else {
                                                                var statearr_15886_15951 = state_15836__$1;
                                                                statearr_15886_15951[1] = 20
                                                              }
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(state_val_15837 === 17) {
                                                                var state_15836__$1 = state_15836;
                                                                var statearr_15887_15952 = state_15836__$1;
                                                                statearr_15887_15952[2] = null;
                                                                statearr_15887_15952[1] = 18;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(state_val_15837 === 18) {
                                                                  var inst_15764 = state_15836[2];
                                                                  var state_15836__$1 = state_15836;
                                                                  var statearr_15888_15953 = state_15836__$1;
                                                                  statearr_15888_15953[2] = inst_15764;
                                                                  statearr_15888_15953[1] = 12;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                }else {
                                                                  if(state_val_15837 === 19) {
                                                                    var inst_15740 = state_15836[23];
                                                                    var inst_15744 = cljs.core.chunk_first.call(null, inst_15740);
                                                                    var inst_15745 = cljs.core.chunk_rest.call(null, inst_15740);
                                                                    var inst_15746 = cljs.core.count.call(null, inst_15744);
                                                                    var inst_15720 = inst_15745;
                                                                    var inst_15721 = inst_15744;
                                                                    var inst_15722 = inst_15746;
                                                                    var inst_15723 = 0;
                                                                    var state_15836__$1 = function() {
                                                                      var statearr_15889 = state_15836;
                                                                      statearr_15889[12] = inst_15723;
                                                                      statearr_15889[13] = inst_15722;
                                                                      statearr_15889[14] = inst_15721;
                                                                      statearr_15889[15] = inst_15720;
                                                                      return statearr_15889
                                                                    }();
                                                                    var statearr_15890_15954 = state_15836__$1;
                                                                    statearr_15890_15954[2] = null;
                                                                    statearr_15890_15954[1] = 8;
                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                  }else {
                                                                    if(state_val_15837 === 20) {
                                                                      var inst_15740 = state_15836[23];
                                                                      var inst_15750 = cljs.core.first.call(null, inst_15740);
                                                                      var inst_15751 = cljs.core.nth.call(null, inst_15750, 0, null);
                                                                      var inst_15752 = cljs.core.nth.call(null, inst_15750, 1, null);
                                                                      var state_15836__$1 = function() {
                                                                        var statearr_15891 = state_15836;
                                                                        statearr_15891[25] = inst_15751;
                                                                        return statearr_15891
                                                                      }();
                                                                      if(cljs.core.truth_(inst_15752)) {
                                                                        var statearr_15892_15955 = state_15836__$1;
                                                                        statearr_15892_15955[1] = 22
                                                                      }else {
                                                                        var statearr_15893_15956 = state_15836__$1;
                                                                        statearr_15893_15956[1] = 23
                                                                      }
                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                    }else {
                                                                      if(state_val_15837 === 21) {
                                                                        var inst_15761 = state_15836[2];
                                                                        var state_15836__$1 = state_15836;
                                                                        var statearr_15894_15957 = state_15836__$1;
                                                                        statearr_15894_15957[2] = inst_15761;
                                                                        statearr_15894_15957[1] = 18;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                      }else {
                                                                        if(state_val_15837 === 22) {
                                                                          var inst_15751 = state_15836[25];
                                                                          var inst_15754 = cljs.core.async.close_BANG_.call(null, inst_15751);
                                                                          var state_15836__$1 = state_15836;
                                                                          var statearr_15895_15958 = state_15836__$1;
                                                                          statearr_15895_15958[2] = inst_15754;
                                                                          statearr_15895_15958[1] = 24;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                        }else {
                                                                          if(state_val_15837 === 23) {
                                                                            var state_15836__$1 = state_15836;
                                                                            var statearr_15896_15959 = state_15836__$1;
                                                                            statearr_15896_15959[2] = null;
                                                                            statearr_15896_15959[1] = 24;
                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                          }else {
                                                                            if(state_val_15837 === 24) {
                                                                              var inst_15740 = state_15836[23];
                                                                              var inst_15757 = state_15836[2];
                                                                              var inst_15758 = cljs.core.next.call(null, inst_15740);
                                                                              var inst_15720 = inst_15758;
                                                                              var inst_15721 = null;
                                                                              var inst_15722 = 0;
                                                                              var inst_15723 = 0;
                                                                              var state_15836__$1 = function() {
                                                                                var statearr_15897 = state_15836;
                                                                                statearr_15897[26] = inst_15757;
                                                                                statearr_15897[12] = inst_15723;
                                                                                statearr_15897[13] = inst_15722;
                                                                                statearr_15897[14] = inst_15721;
                                                                                statearr_15897[15] = inst_15720;
                                                                                return statearr_15897
                                                                              }();
                                                                              var statearr_15898_15960 = state_15836__$1;
                                                                              statearr_15898_15960[2] = null;
                                                                              statearr_15898_15960[1] = 8;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                            }else {
                                                                              if(state_val_15837 === 25) {
                                                                                var inst_15782 = state_15836[9];
                                                                                var inst_15781 = state_15836[10];
                                                                                var inst_15784 = inst_15782 < inst_15781;
                                                                                var inst_15785 = inst_15784;
                                                                                var state_15836__$1 = state_15836;
                                                                                if(cljs.core.truth_(inst_15785)) {
                                                                                  var statearr_15899_15961 = state_15836__$1;
                                                                                  statearr_15899_15961[1] = 27
                                                                                }else {
                                                                                  var statearr_15900_15962 = state_15836__$1;
                                                                                  statearr_15900_15962[1] = 28
                                                                                }
                                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                              }else {
                                                                                if(state_val_15837 === 26) {
                                                                                  var inst_15827 = state_15836[2];
                                                                                  var state_15836__$1 = function() {
                                                                                    var statearr_15901 = state_15836;
                                                                                    statearr_15901[27] = inst_15827;
                                                                                    return statearr_15901
                                                                                  }();
                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15836__$1, 42, dchan)
                                                                                }else {
                                                                                  if(state_val_15837 === 27) {
                                                                                    var inst_15782 = state_15836[9];
                                                                                    var inst_15780 = state_15836[11];
                                                                                    var inst_15787 = cljs.core._nth.call(null, inst_15780, inst_15782);
                                                                                    var state_15836__$1 = function() {
                                                                                      var statearr_15902 = state_15836;
                                                                                      statearr_15902[5] = inst_15787;
                                                                                      return statearr_15902
                                                                                    }();
                                                                                    var statearr_15903_15963 = state_15836__$1;
                                                                                    statearr_15903_15963[2] = null;
                                                                                    statearr_15903_15963[1] = 32;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                  }else {
                                                                                    if(state_val_15837 === 28) {
                                                                                      var inst_15779 = state_15836[8];
                                                                                      var inst_15799 = state_15836[7];
                                                                                      var inst_15799__$1 = cljs.core.seq.call(null, inst_15779);
                                                                                      var state_15836__$1 = function() {
                                                                                        var statearr_15907 = state_15836;
                                                                                        statearr_15907[7] = inst_15799__$1;
                                                                                        return statearr_15907
                                                                                      }();
                                                                                      if(inst_15799__$1) {
                                                                                        var statearr_15908_15964 = state_15836__$1;
                                                                                        statearr_15908_15964[1] = 33
                                                                                      }else {
                                                                                        var statearr_15909_15965 = state_15836__$1;
                                                                                        statearr_15909_15965[1] = 34
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                    }else {
                                                                                      if(state_val_15837 === 29) {
                                                                                        var inst_15825 = state_15836[2];
                                                                                        var state_15836__$1 = state_15836;
                                                                                        var statearr_15910_15966 = state_15836__$1;
                                                                                        statearr_15910_15966[2] = inst_15825;
                                                                                        statearr_15910_15966[1] = 26;
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                      }else {
                                                                                        if(state_val_15837 === 30) {
                                                                                          var inst_15779 = state_15836[8];
                                                                                          var inst_15782 = state_15836[9];
                                                                                          var inst_15781 = state_15836[10];
                                                                                          var inst_15780 = state_15836[11];
                                                                                          var inst_15795 = state_15836[2];
                                                                                          var inst_15796 = inst_15782 + 1;
                                                                                          var tmp15904 = inst_15779;
                                                                                          var tmp15905 = inst_15781;
                                                                                          var tmp15906 = inst_15780;
                                                                                          var inst_15779__$1 = tmp15904;
                                                                                          var inst_15780__$1 = tmp15906;
                                                                                          var inst_15781__$1 = tmp15905;
                                                                                          var inst_15782__$1 = inst_15796;
                                                                                          var state_15836__$1 = function() {
                                                                                            var statearr_15911 = state_15836;
                                                                                            statearr_15911[8] = inst_15779__$1;
                                                                                            statearr_15911[9] = inst_15782__$1;
                                                                                            statearr_15911[10] = inst_15781__$1;
                                                                                            statearr_15911[11] = inst_15780__$1;
                                                                                            statearr_15911[28] = inst_15795;
                                                                                            return statearr_15911
                                                                                          }();
                                                                                          var statearr_15912_15967 = state_15836__$1;
                                                                                          statearr_15912_15967[2] = null;
                                                                                          statearr_15912_15967[1] = 25;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                        }else {
                                                                                          if(state_val_15837 === 31) {
                                                                                            var inst_15787 = state_15836[5];
                                                                                            var inst_15788 = state_15836[2];
                                                                                            var inst_15789 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                                                                            var inst_15790 = cljs.core.async.untap_STAR_.call(null, m, inst_15787);
                                                                                            var state_15836__$1 = function() {
                                                                                              var statearr_15913 = state_15836;
                                                                                              statearr_15913[29] = inst_15789;
                                                                                              statearr_15913[30] = inst_15788;
                                                                                              return statearr_15913
                                                                                            }();
                                                                                            var statearr_15914_15968 = state_15836__$1;
                                                                                            statearr_15914_15968[2] = inst_15790;
                                                                                            statearr_15914_15968[1] = 30;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                                                          }else {
                                                                                            return null
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_15916 = new Array(31);
            statearr_15916[0] = state_machine__5331__auto__;
            statearr_15916[1] = 1;
            return statearr_15916
          };
          var state_machine__5331__auto____1 = function(state_15836) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_15836);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_15836) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_15836)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_15917 = f__5381__auto__.call(null);
      statearr_15917[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___15918;
      return statearr_15917
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return m
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true)
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch)
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult)
};
cljs.core.async.Mix = {};
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch)
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m)
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map)
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if(function() {
    var and__3119__auto__ = m;
    if(and__3119__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2
    }else {
      return and__3119__auto__
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode)
  }else {
    var x__3723__auto__ = m == null ? null : m;
    return function() {
      var or__3128__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode)
  }
};
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "pause", "pause", 1120344424), null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), null], true);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", 1017440337));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true)
    }
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if(cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c)
          }else {
            return ret
          }
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", 1017440337), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", 1120344424), chs);
      return cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "solos", "solos", 1123523302), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1017267595), chs), new cljs.core.Keyword(null, "reads", "reads", 1122290959), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", 1120344424)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], true)
    }
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if(typeof cljs.core.async.t16074 !== "undefined") {
    }else {
      cljs.core.async.t16074 = function(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, meta16075) {
        this.pick = pick;
        this.out = out;
        this.attrs = attrs;
        this.cs = cs;
        this.calc_state = calc_state;
        this.solo_modes = solo_modes;
        this.mix = mix;
        this.changed = changed;
        this.change = change;
        this.solo_mode = solo_mode;
        this.meta16075 = meta16075;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      cljs.core.async.t16074.cljs$lang$type = true;
      cljs.core.async.t16074.cljs$lang$ctorStr = "cljs.core.async/t16074";
      cljs.core.async.t16074.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t16074")
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, core.merge), state_map);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if(cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          }else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", -1162732933, null), new cljs.core.Symbol(null, "mode", "mode", -1637174436, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t16074.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_16076) {
          var self__ = this;
          var _16076__$1 = this;
          return self__.meta16075
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t16074.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_16076, meta16075__$1) {
          var self__ = this;
          var _16076__$1 = this;
          return new cljs.core.async.t16074(self__.pick, self__.out, self__.attrs, self__.cs, self__.calc_state, self__.solo_modes, self__.mix, self__.changed, self__.change, self__.solo_mode, meta16075__$1)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t16074 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t16074(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta16075) {
          return new cljs.core.async.t16074(pick__$1, out__$1, attrs__$1, cs__$1, calc_state__$1, solo_modes__$1, mix__$1, changed__$1, change__$1, solo_mode__$1, meta16075)
        }
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state)
    }
    return new cljs.core.async.t16074(pick, out, attrs, cs, calc_state, solo_modes, mix, changed, change, solo_mode, null)
  }();
  var c__5380__auto___16179 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_16141) {
        var state_val_16142 = state_16141[1];
        if(state_val_16142 === 1) {
          var inst_16080 = state_16141[5];
          var inst_16080__$1 = calc_state.call(null);
          var inst_16081 = cljs.core.seq_QMARK_.call(null, inst_16080__$1);
          var state_16141__$1 = function() {
            var statearr_16143 = state_16141;
            statearr_16143[5] = inst_16080__$1;
            return statearr_16143
          }();
          if(inst_16081) {
            var statearr_16144_16180 = state_16141__$1;
            statearr_16144_16180[1] = 2
          }else {
            var statearr_16145_16181 = state_16141__$1;
            statearr_16145_16181[1] = 3
          }
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_16142 === 2) {
            var inst_16080 = state_16141[5];
            var inst_16083 = cljs.core.apply.call(null, cljs.core.hash_map, inst_16080);
            var state_16141__$1 = state_16141;
            var statearr_16146_16182 = state_16141__$1;
            statearr_16146_16182[2] = inst_16083;
            statearr_16146_16182[1] = 4;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16142 === 3) {
              var inst_16080 = state_16141[5];
              var state_16141__$1 = state_16141;
              var statearr_16147_16183 = state_16141__$1;
              statearr_16147_16183[2] = inst_16080;
              statearr_16147_16183[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16142 === 4) {
                var inst_16080 = state_16141[5];
                var inst_16086 = state_16141[2];
                var inst_16087 = cljs.core.get.call(null, inst_16086, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                var inst_16088 = cljs.core.get.call(null, inst_16086, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                var inst_16089 = cljs.core.get.call(null, inst_16086, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                var inst_16090 = inst_16080;
                var state_16141__$1 = function() {
                  var statearr_16148 = state_16141;
                  statearr_16148[6] = inst_16090;
                  statearr_16148[7] = inst_16087;
                  statearr_16148[8] = inst_16089;
                  statearr_16148[9] = inst_16088;
                  return statearr_16148
                }();
                var statearr_16149_16184 = state_16141__$1;
                statearr_16149_16184[2] = null;
                statearr_16149_16184[1] = 5;
                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
              }else {
                if(state_val_16142 === 5) {
                  var inst_16090 = state_16141[6];
                  var inst_16093 = cljs.core.seq_QMARK_.call(null, inst_16090);
                  var state_16141__$1 = state_16141;
                  if(inst_16093) {
                    var statearr_16150_16185 = state_16141__$1;
                    statearr_16150_16185[1] = 7
                  }else {
                    var statearr_16151_16186 = state_16141__$1;
                    statearr_16151_16186[1] = 8
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16142 === 6) {
                    var inst_16139 = state_16141[2];
                    var state_16141__$1 = state_16141;
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16141__$1, inst_16139)
                  }else {
                    if(state_val_16142 === 7) {
                      var inst_16090 = state_16141[6];
                      var inst_16095 = cljs.core.apply.call(null, cljs.core.hash_map, inst_16090);
                      var state_16141__$1 = state_16141;
                      var statearr_16152_16187 = state_16141__$1;
                      statearr_16152_16187[2] = inst_16095;
                      statearr_16152_16187[1] = 9;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16142 === 8) {
                        var inst_16090 = state_16141[6];
                        var state_16141__$1 = state_16141;
                        var statearr_16153_16188 = state_16141__$1;
                        statearr_16153_16188[2] = inst_16090;
                        statearr_16153_16188[1] = 9;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16142 === 9) {
                          var inst_16098 = state_16141[10];
                          var inst_16098__$1 = state_16141[2];
                          var inst_16099 = cljs.core.get.call(null, inst_16098__$1, new cljs.core.Keyword(null, "reads", "reads", 1122290959));
                          var inst_16100 = cljs.core.get.call(null, inst_16098__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1118168300));
                          var inst_16101 = cljs.core.get.call(null, inst_16098__$1, new cljs.core.Keyword(null, "solos", "solos", 1123523302));
                          var state_16141__$1 = function() {
                            var statearr_16154 = state_16141;
                            statearr_16154[11] = inst_16101;
                            statearr_16154[12] = inst_16100;
                            statearr_16154[10] = inst_16098__$1;
                            return statearr_16154
                          }();
                          return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_16141__$1, 10, inst_16099)
                        }else {
                          if(state_val_16142 === 10) {
                            var inst_16106 = state_16141[13];
                            var inst_16105 = state_16141[14];
                            var inst_16104 = state_16141[2];
                            var inst_16105__$1 = cljs.core.nth.call(null, inst_16104, 0, null);
                            var inst_16106__$1 = cljs.core.nth.call(null, inst_16104, 1, null);
                            var inst_16107 = inst_16105__$1 == null;
                            var inst_16108 = cljs.core._EQ_.call(null, inst_16106__$1, change);
                            var inst_16109 = inst_16107 || inst_16108;
                            var state_16141__$1 = function() {
                              var statearr_16155 = state_16141;
                              statearr_16155[13] = inst_16106__$1;
                              statearr_16155[14] = inst_16105__$1;
                              return statearr_16155
                            }();
                            if(cljs.core.truth_(inst_16109)) {
                              var statearr_16156_16189 = state_16141__$1;
                              statearr_16156_16189[1] = 11
                            }else {
                              var statearr_16157_16190 = state_16141__$1;
                              statearr_16157_16190[1] = 12
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16142 === 11) {
                              var inst_16105 = state_16141[14];
                              var inst_16111 = inst_16105 == null;
                              var state_16141__$1 = state_16141;
                              if(cljs.core.truth_(inst_16111)) {
                                var statearr_16158_16191 = state_16141__$1;
                                statearr_16158_16191[1] = 14
                              }else {
                                var statearr_16159_16192 = state_16141__$1;
                                statearr_16159_16192[1] = 15
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16142 === 12) {
                                var inst_16101 = state_16141[11];
                                var inst_16106 = state_16141[13];
                                var inst_16120 = state_16141[15];
                                var inst_16120__$1 = inst_16101.call(null, inst_16106);
                                var state_16141__$1 = function() {
                                  var statearr_16160 = state_16141;
                                  statearr_16160[15] = inst_16120__$1;
                                  return statearr_16160
                                }();
                                if(cljs.core.truth_(inst_16120__$1)) {
                                  var statearr_16161_16193 = state_16141__$1;
                                  statearr_16161_16193[1] = 17
                                }else {
                                  var statearr_16162_16194 = state_16141__$1;
                                  statearr_16162_16194[1] = 18
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_16142 === 13) {
                                  var inst_16137 = state_16141[2];
                                  var state_16141__$1 = state_16141;
                                  var statearr_16163_16195 = state_16141__$1;
                                  statearr_16163_16195[2] = inst_16137;
                                  statearr_16163_16195[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16142 === 14) {
                                    var inst_16106 = state_16141[13];
                                    var inst_16113 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_16106);
                                    var state_16141__$1 = state_16141;
                                    var statearr_16164_16196 = state_16141__$1;
                                    statearr_16164_16196[2] = inst_16113;
                                    statearr_16164_16196[1] = 16;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16142 === 15) {
                                      var state_16141__$1 = state_16141;
                                      var statearr_16165_16197 = state_16141__$1;
                                      statearr_16165_16197[2] = null;
                                      statearr_16165_16197[1] = 16;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_16142 === 16) {
                                        var inst_16116 = state_16141[2];
                                        var inst_16117 = calc_state.call(null);
                                        var inst_16090 = inst_16117;
                                        var state_16141__$1 = function() {
                                          var statearr_16166 = state_16141;
                                          statearr_16166[6] = inst_16090;
                                          statearr_16166[16] = inst_16116;
                                          return statearr_16166
                                        }();
                                        var statearr_16167_16198 = state_16141__$1;
                                        statearr_16167_16198[2] = null;
                                        statearr_16167_16198[1] = 5;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16142 === 17) {
                                          var inst_16120 = state_16141[15];
                                          var state_16141__$1 = state_16141;
                                          var statearr_16168_16199 = state_16141__$1;
                                          statearr_16168_16199[2] = inst_16120;
                                          statearr_16168_16199[1] = 19;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_16142 === 18) {
                                            var inst_16101 = state_16141[11];
                                            var inst_16100 = state_16141[12];
                                            var inst_16106 = state_16141[13];
                                            var inst_16123 = cljs.core.empty_QMARK_.call(null, inst_16101);
                                            var inst_16124 = inst_16100.call(null, inst_16106);
                                            var inst_16125 = cljs.core.not.call(null, inst_16124);
                                            var inst_16126 = inst_16123 && inst_16125;
                                            var state_16141__$1 = state_16141;
                                            var statearr_16169_16200 = state_16141__$1;
                                            statearr_16169_16200[2] = inst_16126;
                                            statearr_16169_16200[1] = 19;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_16142 === 19) {
                                              var inst_16128 = state_16141[2];
                                              var state_16141__$1 = state_16141;
                                              if(cljs.core.truth_(inst_16128)) {
                                                var statearr_16170_16201 = state_16141__$1;
                                                statearr_16170_16201[1] = 20
                                              }else {
                                                var statearr_16171_16202 = state_16141__$1;
                                                statearr_16171_16202[1] = 21
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_16142 === 20) {
                                                var inst_16105 = state_16141[14];
                                                var state_16141__$1 = state_16141;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16141__$1, 23, out, inst_16105)
                                              }else {
                                                if(state_val_16142 === 21) {
                                                  var state_16141__$1 = state_16141;
                                                  var statearr_16172_16203 = state_16141__$1;
                                                  statearr_16172_16203[2] = null;
                                                  statearr_16172_16203[1] = 22;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_16142 === 22) {
                                                    var inst_16098 = state_16141[10];
                                                    var inst_16134 = state_16141[2];
                                                    var inst_16090 = inst_16098;
                                                    var state_16141__$1 = function() {
                                                      var statearr_16173 = state_16141;
                                                      statearr_16173[6] = inst_16090;
                                                      statearr_16173[17] = inst_16134;
                                                      return statearr_16173
                                                    }();
                                                    var statearr_16174_16204 = state_16141__$1;
                                                    statearr_16174_16204[2] = null;
                                                    statearr_16174_16204[1] = 5;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_16142 === 23) {
                                                      var inst_16131 = state_16141[2];
                                                      var state_16141__$1 = state_16141;
                                                      var statearr_16175_16205 = state_16141__$1;
                                                      statearr_16175_16205[2] = inst_16131;
                                                      statearr_16175_16205[1] = 22;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      return null
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_16177 = new Array(18);
            statearr_16177[0] = state_machine__5331__auto__;
            statearr_16177[1] = 1;
            return statearr_16177
          };
          var state_machine__5331__auto____1 = function(state_16141) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_16141);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_16141) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_16141)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_16178 = f__5381__auto__.call(null);
      statearr_16178[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16179;
      return statearr_16178
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return m
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch)
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix)
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map)
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode)
};
cljs.core.async.Pub = {};
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if(function() {
    var and__3119__auto__ = p;
    if(and__3119__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4
    }else {
      return and__3119__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_)
  }else {
    var x__3723__auto__ = p == null ? null : p;
    return function() {
      var or__3128__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_)
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if(function() {
    var and__3119__auto__ = p;
    if(and__3119__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3
    }else {
      return and__3119__auto__
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch)
  }else {
    var x__3723__auto__ = p == null ? null : p;
    return function() {
      var or__3128__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch)
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if(function() {
      var and__3119__auto__ = p;
      if(and__3119__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1
      }else {
        return and__3119__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p)
    }else {
      var x__3723__auto__ = p == null ? null : p;
      return function() {
        var or__3128__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p)
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if(function() {
      var and__3119__auto__ = p;
      if(and__3119__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2
      }else {
        return and__3119__auto__
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v)
    }else {
      var x__3723__auto__ = p == null ? null : p;
      return function() {
        var or__3128__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__3723__auto__)];
        if(or__3128__auto__) {
          return or__3128__auto__
        }else {
          var or__3128__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if(or__3128__auto____$1) {
            return or__3128__auto____$1
          }else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v)
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null))
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3128__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3128__auto__, mults) {
            return function(p1__16206_SHARP_) {
              if(cljs.core.truth_(p1__16206_SHARP_.call(null, topic))) {
                return p1__16206_SHARP_
              }else {
                return cljs.core.assoc.call(null, p1__16206_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))))
              }
            }
          }(or__3128__auto__, mults)), topic)
        }
      }
    }(mults);
    var p = function() {
      if(typeof cljs.core.async.t16330 !== "undefined") {
      }else {
        cljs.core.async.t16330 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta16331) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta16331 = meta16331;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216
        };
        cljs.core.async.t16330.cljs$lang$type = true;
        cljs.core.async.t16330.cljs$lang$ctorStr = "cljs.core.async/t16330";
        cljs.core.async.t16330.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
            return cljs.core._write.call(null, writer__3665__auto__, "cljs.core.async/t16330")
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t16330.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$2, close_QMARK_)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$2) {
            var self__ = this;
            var p__$1 = this;
            var temp__4092__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if(cljs.core.truth_(temp__4092__auto__)) {
              var m = temp__4092__auto__;
              return cljs.core.async.untap.call(null, m, ch__$2)
            }else {
              return null
            }
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic)
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t16330.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_16332) {
            var self__ = this;
            var _16332__$1 = this;
            return self__.meta16331
          }
        }(mults, ensure_mult);
        cljs.core.async.t16330.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_16332, meta16331__$1) {
            var self__ = this;
            var _16332__$1 = this;
            return new cljs.core.async.t16330(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta16331__$1)
          }
        }(mults, ensure_mult);
        cljs.core.async.__GT_t16330 = function(mults, ensure_mult) {
          return function __GT_t16330(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta16331) {
            return new cljs.core.async.t16330(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta16331)
          }
        }(mults, ensure_mult)
      }
      return new cljs.core.async.t16330(ensure_mult, mults, buf_fn, topic_fn, ch, pub, null)
    }();
    var c__5380__auto___16453 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16405) {
          var state_val_16406 = state_16405[1];
          if(state_val_16406 === 1) {
            var state_16405__$1 = state_16405;
            var statearr_16407_16454 = state_16405__$1;
            statearr_16407_16454[2] = null;
            statearr_16407_16454[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16406 === 2) {
              var state_16405__$1 = state_16405;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16405__$1, 4, ch)
            }else {
              if(state_val_16406 === 3) {
                var inst_16403 = state_16405[2];
                var state_16405__$1 = state_16405;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16405__$1, inst_16403)
              }else {
                if(state_val_16406 === 4) {
                  var inst_16335 = state_16405[5];
                  var inst_16335__$1 = state_16405[2];
                  var inst_16336 = inst_16335__$1 == null;
                  var state_16405__$1 = function() {
                    var statearr_16408 = state_16405;
                    statearr_16408[5] = inst_16335__$1;
                    return statearr_16408
                  }();
                  if(cljs.core.truth_(inst_16336)) {
                    var statearr_16409_16455 = state_16405__$1;
                    statearr_16409_16455[1] = 5
                  }else {
                    var statearr_16410_16456 = state_16405__$1;
                    statearr_16410_16456[1] = 6
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16406 === 5) {
                    var inst_16342 = cljs.core.deref.call(null, mults);
                    var inst_16343 = cljs.core.vals.call(null, inst_16342);
                    var inst_16344 = cljs.core.seq.call(null, inst_16343);
                    var inst_16345 = inst_16344;
                    var inst_16346 = null;
                    var inst_16347 = 0;
                    var inst_16348 = 0;
                    var state_16405__$1 = function() {
                      var statearr_16411 = state_16405;
                      statearr_16411[6] = inst_16345;
                      statearr_16411[7] = inst_16346;
                      statearr_16411[8] = inst_16348;
                      statearr_16411[9] = inst_16347;
                      return statearr_16411
                    }();
                    var statearr_16412_16457 = state_16405__$1;
                    statearr_16412_16457[2] = null;
                    statearr_16412_16457[1] = 8;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_16406 === 6) {
                      var inst_16383 = state_16405[10];
                      var inst_16385 = state_16405[11];
                      var inst_16335 = state_16405[5];
                      var inst_16383__$1 = topic_fn.call(null, inst_16335);
                      var inst_16384 = cljs.core.deref.call(null, mults);
                      var inst_16385__$1 = cljs.core.get.call(null, inst_16384, inst_16383__$1);
                      var state_16405__$1 = function() {
                        var statearr_16413 = state_16405;
                        statearr_16413[10] = inst_16383__$1;
                        statearr_16413[11] = inst_16385__$1;
                        return statearr_16413
                      }();
                      if(cljs.core.truth_(inst_16385__$1)) {
                        var statearr_16414_16458 = state_16405__$1;
                        statearr_16414_16458[1] = 19
                      }else {
                        var statearr_16415_16459 = state_16405__$1;
                        statearr_16415_16459[1] = 20
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16406 === 7) {
                        var inst_16401 = state_16405[2];
                        var state_16405__$1 = state_16405;
                        var statearr_16416_16460 = state_16405__$1;
                        statearr_16416_16460[2] = inst_16401;
                        statearr_16416_16460[1] = 3;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16406 === 8) {
                          var inst_16348 = state_16405[8];
                          var inst_16347 = state_16405[9];
                          var inst_16350 = inst_16348 < inst_16347;
                          var inst_16351 = inst_16350;
                          var state_16405__$1 = state_16405;
                          if(cljs.core.truth_(inst_16351)) {
                            var statearr_16420_16461 = state_16405__$1;
                            statearr_16420_16461[1] = 10
                          }else {
                            var statearr_16421_16462 = state_16405__$1;
                            statearr_16421_16462[1] = 11
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16406 === 9) {
                            var inst_16381 = state_16405[2];
                            var state_16405__$1 = state_16405;
                            var statearr_16422_16463 = state_16405__$1;
                            statearr_16422_16463[2] = inst_16381;
                            statearr_16422_16463[1] = 7;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16406 === 10) {
                              var inst_16345 = state_16405[6];
                              var inst_16346 = state_16405[7];
                              var inst_16348 = state_16405[8];
                              var inst_16347 = state_16405[9];
                              var inst_16353 = cljs.core._nth.call(null, inst_16346, inst_16348);
                              var inst_16354 = cljs.core.async.muxch_STAR_.call(null, inst_16353);
                              var inst_16355 = cljs.core.async.close_BANG_.call(null, inst_16354);
                              var inst_16356 = inst_16348 + 1;
                              var tmp16417 = inst_16345;
                              var tmp16418 = inst_16346;
                              var tmp16419 = inst_16347;
                              var inst_16345__$1 = tmp16417;
                              var inst_16346__$1 = tmp16418;
                              var inst_16347__$1 = tmp16419;
                              var inst_16348__$1 = inst_16356;
                              var state_16405__$1 = function() {
                                var statearr_16423 = state_16405;
                                statearr_16423[6] = inst_16345__$1;
                                statearr_16423[7] = inst_16346__$1;
                                statearr_16423[12] = inst_16355;
                                statearr_16423[8] = inst_16348__$1;
                                statearr_16423[9] = inst_16347__$1;
                                return statearr_16423
                              }();
                              var statearr_16424_16464 = state_16405__$1;
                              statearr_16424_16464[2] = null;
                              statearr_16424_16464[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16406 === 11) {
                                var inst_16345 = state_16405[6];
                                var inst_16359 = state_16405[13];
                                var inst_16359__$1 = cljs.core.seq.call(null, inst_16345);
                                var state_16405__$1 = function() {
                                  var statearr_16425 = state_16405;
                                  statearr_16425[13] = inst_16359__$1;
                                  return statearr_16425
                                }();
                                if(inst_16359__$1) {
                                  var statearr_16426_16465 = state_16405__$1;
                                  statearr_16426_16465[1] = 13
                                }else {
                                  var statearr_16427_16466 = state_16405__$1;
                                  statearr_16427_16466[1] = 14
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                if(state_val_16406 === 12) {
                                  var inst_16379 = state_16405[2];
                                  var state_16405__$1 = state_16405;
                                  var statearr_16428_16467 = state_16405__$1;
                                  statearr_16428_16467[2] = inst_16379;
                                  statearr_16428_16467[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16406 === 13) {
                                    var inst_16359 = state_16405[13];
                                    var inst_16361 = cljs.core.chunked_seq_QMARK_.call(null, inst_16359);
                                    var state_16405__$1 = state_16405;
                                    if(inst_16361) {
                                      var statearr_16429_16468 = state_16405__$1;
                                      statearr_16429_16468[1] = 16
                                    }else {
                                      var statearr_16430_16469 = state_16405__$1;
                                      statearr_16430_16469[1] = 17
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16406 === 14) {
                                      var state_16405__$1 = state_16405;
                                      var statearr_16431_16470 = state_16405__$1;
                                      statearr_16431_16470[2] = null;
                                      statearr_16431_16470[1] = 15;
                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                    }else {
                                      if(state_val_16406 === 15) {
                                        var inst_16377 = state_16405[2];
                                        var state_16405__$1 = state_16405;
                                        var statearr_16432_16471 = state_16405__$1;
                                        statearr_16432_16471[2] = inst_16377;
                                        statearr_16432_16471[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16406 === 16) {
                                          var inst_16359 = state_16405[13];
                                          var inst_16363 = cljs.core.chunk_first.call(null, inst_16359);
                                          var inst_16364 = cljs.core.chunk_rest.call(null, inst_16359);
                                          var inst_16365 = cljs.core.count.call(null, inst_16363);
                                          var inst_16345 = inst_16364;
                                          var inst_16346 = inst_16363;
                                          var inst_16347 = inst_16365;
                                          var inst_16348 = 0;
                                          var state_16405__$1 = function() {
                                            var statearr_16433 = state_16405;
                                            statearr_16433[6] = inst_16345;
                                            statearr_16433[7] = inst_16346;
                                            statearr_16433[8] = inst_16348;
                                            statearr_16433[9] = inst_16347;
                                            return statearr_16433
                                          }();
                                          var statearr_16434_16472 = state_16405__$1;
                                          statearr_16434_16472[2] = null;
                                          statearr_16434_16472[1] = 8;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          if(state_val_16406 === 17) {
                                            var inst_16359 = state_16405[13];
                                            var inst_16368 = cljs.core.first.call(null, inst_16359);
                                            var inst_16369 = cljs.core.async.muxch_STAR_.call(null, inst_16368);
                                            var inst_16370 = cljs.core.async.close_BANG_.call(null, inst_16369);
                                            var inst_16371 = cljs.core.next.call(null, inst_16359);
                                            var inst_16345 = inst_16371;
                                            var inst_16346 = null;
                                            var inst_16347 = 0;
                                            var inst_16348 = 0;
                                            var state_16405__$1 = function() {
                                              var statearr_16435 = state_16405;
                                              statearr_16435[6] = inst_16345;
                                              statearr_16435[7] = inst_16346;
                                              statearr_16435[14] = inst_16370;
                                              statearr_16435[8] = inst_16348;
                                              statearr_16435[9] = inst_16347;
                                              return statearr_16435
                                            }();
                                            var statearr_16436_16473 = state_16405__$1;
                                            statearr_16436_16473[2] = null;
                                            statearr_16436_16473[1] = 8;
                                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                          }else {
                                            if(state_val_16406 === 18) {
                                              var inst_16374 = state_16405[2];
                                              var state_16405__$1 = state_16405;
                                              var statearr_16437_16474 = state_16405__$1;
                                              statearr_16437_16474[2] = inst_16374;
                                              statearr_16437_16474[1] = 15;
                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                            }else {
                                              if(state_val_16406 === 19) {
                                                var state_16405__$1 = state_16405;
                                                var statearr_16438_16475 = state_16405__$1;
                                                statearr_16438_16475[2] = null;
                                                statearr_16438_16475[1] = 24;
                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                              }else {
                                                if(state_val_16406 === 20) {
                                                  var state_16405__$1 = state_16405;
                                                  var statearr_16439_16476 = state_16405__$1;
                                                  statearr_16439_16476[2] = null;
                                                  statearr_16439_16476[1] = 21;
                                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                }else {
                                                  if(state_val_16406 === 21) {
                                                    var inst_16398 = state_16405[2];
                                                    var state_16405__$1 = function() {
                                                      var statearr_16440 = state_16405;
                                                      statearr_16440[15] = inst_16398;
                                                      return statearr_16440
                                                    }();
                                                    var statearr_16441_16477 = state_16405__$1;
                                                    statearr_16441_16477[2] = null;
                                                    statearr_16441_16477[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                  }else {
                                                    if(state_val_16406 === 22) {
                                                      var inst_16395 = state_16405[2];
                                                      var state_16405__$1 = state_16405;
                                                      var statearr_16442_16478 = state_16405__$1;
                                                      statearr_16442_16478[2] = inst_16395;
                                                      statearr_16442_16478[1] = 21;
                                                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                    }else {
                                                      if(state_val_16406 === 23) {
                                                        var inst_16383 = state_16405[10];
                                                        var inst_16387 = state_16405[2];
                                                        var inst_16388 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_16383);
                                                        var state_16405__$1 = function() {
                                                          var statearr_16443 = state_16405;
                                                          statearr_16443[16] = inst_16387;
                                                          return statearr_16443
                                                        }();
                                                        var statearr_16444_16479 = state_16405__$1;
                                                        statearr_16444_16479[2] = inst_16388;
                                                        statearr_16444_16479[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                      }else {
                                                        if(state_val_16406 === 24) {
                                                          try {
                                                            var inst_16385 = state_16405[11];
                                                            var inst_16335 = state_16405[5];
                                                            var inst_16391 = cljs.core.async.muxch_STAR_.call(null, inst_16385);
                                                            var state_16405__$1 = state_16405;
                                                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16405__$1, 25, inst_16391, inst_16335)
                                                          }catch(e16445) {
                                                            if(e16445 instanceof Object) {
                                                              var ex__5324__auto__ = e16445;
                                                              var statearr_16446_16480 = state_16405;
                                                              statearr_16446_16480[1] = 23;
                                                              statearr_16446_16480[2] = ex__5324__auto__;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }else {
                                                              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                throw e16445;
                                                              }else {
                                                                return null
                                                              }
                                                            }
                                                          }
                                                        }else {
                                                          if(state_val_16406 === 25) {
                                                            try {
                                                              var inst_16393 = state_16405[2];
                                                              var state_16405__$1 = state_16405;
                                                              var statearr_16449_16481 = state_16405__$1;
                                                              statearr_16449_16481[2] = inst_16393;
                                                              statearr_16449_16481[1] = 22;
                                                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                            }catch(e16447) {
                                                              if(e16447 instanceof Object) {
                                                                var ex__5324__auto__ = e16447;
                                                                var statearr_16448_16482 = state_16405;
                                                                statearr_16448_16482[1] = 23;
                                                                statearr_16448_16482[2] = ex__5324__auto__;
                                                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                                              }else {
                                                                if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                                                  throw e16447;
                                                                }else {
                                                                  return null
                                                                }
                                                              }
                                                            }
                                                          }else {
                                                            return null
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16451 = new Array(17);
              statearr_16451[0] = state_machine__5331__auto__;
              statearr_16451[1] = 1;
              return statearr_16451
            };
            var state_machine__5331__auto____1 = function(state_16405) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16405);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16405) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16405)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16452 = f__5381__auto__.call(null);
        statearr_16452[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16453;
        return statearr_16452
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return p
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true)
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_)
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch)
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p)
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic)
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null)
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if(cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, java.util.Arrays.copyOf.call(null, rets, cnt))
            }else {
              return null
            }
          }
        }(chs__$1, out, cnt, rets, dchan, dctr)
      }
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__5380__auto___16613 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16585) {
          var state_val_16586 = state_16585[1];
          if(state_val_16586 === 1) {
            var state_16585__$1 = state_16585;
            var statearr_16587_16614 = state_16585__$1;
            statearr_16587_16614[2] = null;
            statearr_16587_16614[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16586 === 2) {
              var inst_16549 = cljs.core.reset_BANG_.call(null, dctr, cnt);
              var inst_16550 = 0;
              var state_16585__$1 = function() {
                var statearr_16588 = state_16585;
                statearr_16588[5] = inst_16549;
                statearr_16588[6] = inst_16550;
                return statearr_16588
              }();
              var statearr_16589_16615 = state_16585__$1;
              statearr_16589_16615[2] = null;
              statearr_16589_16615[1] = 4;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16586 === 3) {
                var inst_16583 = state_16585[2];
                var state_16585__$1 = state_16585;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16585__$1, inst_16583)
              }else {
                if(state_val_16586 === 4) {
                  var inst_16550 = state_16585[6];
                  var inst_16552 = inst_16550 < cnt;
                  var state_16585__$1 = state_16585;
                  if(cljs.core.truth_(inst_16552)) {
                    var statearr_16590_16616 = state_16585__$1;
                    statearr_16590_16616[1] = 6
                  }else {
                    var statearr_16591_16617 = state_16585__$1;
                    statearr_16591_16617[1] = 7
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_16586 === 5) {
                    var inst_16569 = state_16585[2];
                    var state_16585__$1 = function() {
                      var statearr_16592 = state_16585;
                      statearr_16592[7] = inst_16569;
                      return statearr_16592
                    }();
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16585__$1, 12, dchan)
                  }else {
                    if(state_val_16586 === 6) {
                      var state_16585__$1 = state_16585;
                      var statearr_16593_16618 = state_16585__$1;
                      statearr_16593_16618[2] = null;
                      statearr_16593_16618[1] = 11;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16586 === 7) {
                        var state_16585__$1 = state_16585;
                        var statearr_16594_16619 = state_16585__$1;
                        statearr_16594_16619[2] = null;
                        statearr_16594_16619[1] = 8;
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16586 === 8) {
                          var inst_16567 = state_16585[2];
                          var state_16585__$1 = state_16585;
                          var statearr_16595_16620 = state_16585__$1;
                          statearr_16595_16620[2] = inst_16567;
                          statearr_16595_16620[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16586 === 9) {
                            var inst_16550 = state_16585[6];
                            var inst_16562 = state_16585[2];
                            var inst_16563 = inst_16550 + 1;
                            var inst_16550__$1 = inst_16563;
                            var state_16585__$1 = function() {
                              var statearr_16596 = state_16585;
                              statearr_16596[6] = inst_16550__$1;
                              statearr_16596[8] = inst_16562;
                              return statearr_16596
                            }();
                            var statearr_16597_16621 = state_16585__$1;
                            statearr_16597_16621[2] = null;
                            statearr_16597_16621[1] = 4;
                            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                          }else {
                            if(state_val_16586 === 10) {
                              var inst_16554 = state_16585[2];
                              var inst_16555 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                              var state_16585__$1 = function() {
                                var statearr_16598 = state_16585;
                                statearr_16598[9] = inst_16554;
                                return statearr_16598
                              }();
                              var statearr_16599_16622 = state_16585__$1;
                              statearr_16599_16622[2] = inst_16555;
                              statearr_16599_16622[1] = 9;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16586 === 11) {
                                try {
                                  var inst_16550 = state_16585[6];
                                  var inst_16558 = chs__$1.call(null, inst_16550);
                                  var inst_16559 = done.call(null, inst_16550);
                                  var inst_16560 = cljs.core.async.take_BANG_.call(null, inst_16558, inst_16559);
                                  var state_16585__$1 = state_16585;
                                  var statearr_16602_16623 = state_16585__$1;
                                  statearr_16602_16623[2] = inst_16560;
                                  statearr_16602_16623[1] = 9;
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }catch(e16600) {
                                  if(e16600 instanceof Object) {
                                    var ex__5324__auto__ = e16600;
                                    var statearr_16601_16624 = state_16585;
                                    statearr_16601_16624[1] = 10;
                                    statearr_16601_16624[2] = ex__5324__auto__;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                                      throw e16600;
                                    }else {
                                      return null
                                    }
                                  }
                                }
                              }else {
                                if(state_val_16586 === 12) {
                                  var inst_16571 = state_16585[10];
                                  var inst_16571__$1 = state_16585[2];
                                  var inst_16572 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_16571__$1);
                                  var state_16585__$1 = function() {
                                    var statearr_16603 = state_16585;
                                    statearr_16603[10] = inst_16571__$1;
                                    return statearr_16603
                                  }();
                                  if(cljs.core.truth_(inst_16572)) {
                                    var statearr_16604_16625 = state_16585__$1;
                                    statearr_16604_16625[1] = 13
                                  }else {
                                    var statearr_16605_16626 = state_16585__$1;
                                    statearr_16605_16626[1] = 14
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                }else {
                                  if(state_val_16586 === 13) {
                                    var inst_16574 = cljs.core.async.close_BANG_.call(null, out);
                                    var state_16585__$1 = state_16585;
                                    var statearr_16606_16627 = state_16585__$1;
                                    statearr_16606_16627[2] = inst_16574;
                                    statearr_16606_16627[1] = 15;
                                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                  }else {
                                    if(state_val_16586 === 14) {
                                      var inst_16571 = state_16585[10];
                                      var inst_16576 = cljs.core.apply.call(null, f, inst_16571);
                                      var state_16585__$1 = state_16585;
                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16585__$1, 16, out, inst_16576)
                                    }else {
                                      if(state_val_16586 === 15) {
                                        var inst_16581 = state_16585[2];
                                        var state_16585__$1 = state_16585;
                                        var statearr_16607_16628 = state_16585__$1;
                                        statearr_16607_16628[2] = inst_16581;
                                        statearr_16607_16628[1] = 3;
                                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                      }else {
                                        if(state_val_16586 === 16) {
                                          var inst_16578 = state_16585[2];
                                          var state_16585__$1 = function() {
                                            var statearr_16608 = state_16585;
                                            statearr_16608[11] = inst_16578;
                                            return statearr_16608
                                          }();
                                          var statearr_16609_16629 = state_16585__$1;
                                          statearr_16609_16629[2] = null;
                                          statearr_16609_16629[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                                        }else {
                                          return null
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16611 = new Array(12);
              statearr_16611[0] = state_machine__5331__auto__;
              statearr_16611[1] = 1;
              return statearr_16611
            };
            var state_machine__5331__auto____1 = function(state_16585) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16585);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16585) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16585)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16612 = f__5381__auto__.call(null);
        statearr_16612[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16613;
        return statearr_16612
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null)
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__5380__auto___16729 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_16709) {
          var state_val_16710 = state_16709[1];
          if(state_val_16710 === 1) {
            var inst_16680 = cljs.core.vec.call(null, chs);
            var inst_16681 = inst_16680;
            var state_16709__$1 = function() {
              var statearr_16711 = state_16709;
              statearr_16711[5] = inst_16681;
              return statearr_16711
            }();
            var statearr_16712_16730 = state_16709__$1;
            statearr_16712_16730[2] = null;
            statearr_16712_16730[1] = 2;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_16710 === 2) {
              var inst_16681 = state_16709[5];
              var inst_16683 = cljs.core.count.call(null, inst_16681);
              var inst_16684 = inst_16683 > 0;
              var state_16709__$1 = state_16709;
              if(cljs.core.truth_(inst_16684)) {
                var statearr_16713_16731 = state_16709__$1;
                statearr_16713_16731[1] = 4
              }else {
                var statearr_16714_16732 = state_16709__$1;
                statearr_16714_16732[1] = 5
              }
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_16710 === 3) {
                var inst_16707 = state_16709[2];
                var state_16709__$1 = state_16709;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16709__$1, inst_16707)
              }else {
                if(state_val_16710 === 4) {
                  var inst_16681 = state_16709[5];
                  var state_16709__$1 = state_16709;
                  return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_16709__$1, 7, inst_16681)
                }else {
                  if(state_val_16710 === 5) {
                    var inst_16703 = cljs.core.async.close_BANG_.call(null, out);
                    var state_16709__$1 = state_16709;
                    var statearr_16715_16733 = state_16709__$1;
                    statearr_16715_16733[2] = inst_16703;
                    statearr_16715_16733[1] = 6;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_16710 === 6) {
                      var inst_16705 = state_16709[2];
                      var state_16709__$1 = state_16709;
                      var statearr_16716_16734 = state_16709__$1;
                      statearr_16716_16734[2] = inst_16705;
                      statearr_16716_16734[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      if(state_val_16710 === 7) {
                        var inst_16689 = state_16709[6];
                        var inst_16688 = state_16709[7];
                        var inst_16688__$1 = state_16709[2];
                        var inst_16689__$1 = cljs.core.nth.call(null, inst_16688__$1, 0, null);
                        var inst_16690 = cljs.core.nth.call(null, inst_16688__$1, 1, null);
                        var inst_16691 = inst_16689__$1 == null;
                        var state_16709__$1 = function() {
                          var statearr_16717 = state_16709;
                          statearr_16717[8] = inst_16690;
                          statearr_16717[6] = inst_16689__$1;
                          statearr_16717[7] = inst_16688__$1;
                          return statearr_16717
                        }();
                        if(cljs.core.truth_(inst_16691)) {
                          var statearr_16718_16735 = state_16709__$1;
                          statearr_16718_16735[1] = 8
                        }else {
                          var statearr_16719_16736 = state_16709__$1;
                          statearr_16719_16736[1] = 9
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                      }else {
                        if(state_val_16710 === 8) {
                          var inst_16690 = state_16709[8];
                          var inst_16681 = state_16709[5];
                          var inst_16689 = state_16709[6];
                          var inst_16688 = state_16709[7];
                          var inst_16693 = function() {
                            var c = inst_16690;
                            var v = inst_16689;
                            var vec__16686 = inst_16688;
                            var cs = inst_16681;
                            return function(c, v, vec__16686, cs, inst_16690, inst_16681, inst_16689, inst_16688, state_val_16710) {
                              return function(p1__16630_SHARP_) {
                                return cljs.core.not_EQ_.call(null, c, p1__16630_SHARP_)
                              }
                            }(c, v, vec__16686, cs, inst_16690, inst_16681, inst_16689, inst_16688, state_val_16710)
                          }();
                          var inst_16694 = cljs.core.filterv.call(null, inst_16693, inst_16681);
                          var inst_16681__$1 = inst_16694;
                          var state_16709__$1 = function() {
                            var statearr_16720 = state_16709;
                            statearr_16720[5] = inst_16681__$1;
                            return statearr_16720
                          }();
                          var statearr_16721_16737 = state_16709__$1;
                          statearr_16721_16737[2] = null;
                          statearr_16721_16737[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                        }else {
                          if(state_val_16710 === 9) {
                            var inst_16689 = state_16709[6];
                            var state_16709__$1 = state_16709;
                            return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16709__$1, 11, out, inst_16689)
                          }else {
                            if(state_val_16710 === 10) {
                              var inst_16701 = state_16709[2];
                              var state_16709__$1 = state_16709;
                              var statearr_16723_16738 = state_16709__$1;
                              statearr_16723_16738[2] = inst_16701;
                              statearr_16723_16738[1] = 6;
                              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                            }else {
                              if(state_val_16710 === 11) {
                                var inst_16681 = state_16709[5];
                                var inst_16698 = state_16709[2];
                                var tmp16722 = inst_16681;
                                var inst_16681__$1 = tmp16722;
                                var state_16709__$1 = function() {
                                  var statearr_16724 = state_16709;
                                  statearr_16724[5] = inst_16681__$1;
                                  statearr_16724[9] = inst_16698;
                                  return statearr_16724
                                }();
                                var statearr_16725_16739 = state_16709__$1;
                                statearr_16725_16739[2] = null;
                                statearr_16725_16739[1] = 2;
                                return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                              }else {
                                return null
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_16727 = new Array(10);
              statearr_16727[0] = state_machine__5331__auto__;
              statearr_16727[1] = 1;
              return statearr_16727
            };
            var state_machine__5331__auto____1 = function(state_16709) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_16709);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_16709) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_16709)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_16728 = f__5381__auto__.call(null);
        statearr_16728[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___16729;
        return statearr_16728
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return out
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch)
};
goog.provide("koans.repl");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
koans.repl.output_chan = cljs.core.async.chan.call(null);
koans.repl.error_chan = cljs.core.async.chan.call(null);
koans.repl.channel_piping_fn = function channel_piping_fn(chan) {
  return function(text) {
    var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function() {
      var f__5381__auto__ = function() {
        var switch__5330__auto__ = function(state_12610) {
          var state_val_12611 = state_12610[1];
          if(state_val_12611 === 2) {
            var inst_12608 = state_12610[2];
            var state_12610__$1 = state_12610;
            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12610__$1, inst_12608)
          }else {
            if(state_val_12611 === 1) {
              var state_12610__$1 = state_12610;
              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12610__$1, 2, chan, text)
            }else {
              return null
            }
          }
        };
        return function(switch__5330__auto__) {
          return function() {
            var state_machine__5331__auto__ = null;
            var state_machine__5331__auto____0 = function() {
              var statearr_12613 = new Array(5);
              statearr_12613[0] = state_machine__5331__auto__;
              statearr_12613[1] = 1;
              return statearr_12613
            };
            var state_machine__5331__auto____1 = function(state_12610) {
              while(true) {
                var result__5332__auto__ = switch__5330__auto__.call(null, state_12610);
                if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                  continue
                }else {
                  return result__5332__auto__
                }
                break
              }
            };
            state_machine__5331__auto__ = function(state_12610) {
              switch(arguments.length) {
                case 0:
                  return state_machine__5331__auto____0.call(this);
                case 1:
                  return state_machine__5331__auto____1.call(this, state_12610)
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
            state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
            return state_machine__5331__auto__
          }()
        }(switch__5330__auto__)
      }();
      var state__5382__auto__ = function() {
        var statearr_12614 = f__5381__auto__.call(null);
        statearr_12614[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
        return statearr_12614
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
    });
    return c__5380__auto__
  }
};
koans.repl.eval = function eval(input_string) {
  return repl.evaluate(input_string)
};
goog.exportSymbol("koans.repl.eval", koans.repl.eval);
koans.repl.listen_for_output = function listen_for_output(handler) {
  repl.init_with_pipes(koans.repl.channel_piping_fn.call(null, koans.repl.output_chan), koans.repl.channel_piping_fn.call(null, koans.repl.error_chan), function(p1__12615_SHARP_) {
    return console.log(p1__12615_SHARP_)
  });
  var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function() {
    var f__5381__auto__ = function() {
      var switch__5330__auto__ = function(state_12660) {
        var state_val_12661 = state_12660[1];
        if(state_val_12661 === 7) {
          var inst_12649 = state_12660[2];
          var inst_12650 = cljs.core.nth.call(null, inst_12649, 0, null);
          var inst_12651 = cljs.core.nth.call(null, inst_12649, 1, null);
          var inst_12652 = handler.call(null, inst_12650);
          var state_12660__$1 = function() {
            var statearr_12662 = state_12660;
            statearr_12662[5] = inst_12652;
            statearr_12662[6] = inst_12651;
            return statearr_12662
          }();
          var statearr_12663_12672 = state_12660__$1;
          statearr_12663_12672[2] = null;
          statearr_12663_12672[1] = 2;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_12661 === 6) {
            var inst_12656 = state_12660[2];
            var state_12660__$1 = state_12660;
            var statearr_12664_12673 = state_12660__$1;
            statearr_12664_12673[2] = inst_12656;
            statearr_12664_12673[1] = 3;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12661 === 5) {
              var state_12660__$1 = state_12660;
              var statearr_12665_12674 = state_12660__$1;
              statearr_12665_12674[2] = null;
              statearr_12665_12674[1] = 6;
              return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
            }else {
              if(state_val_12661 === 4) {
                var inst_12647 = cljs.core.vector.call(null, koans.repl.error_chan, koans.repl.output_chan);
                var state_12660__$1 = state_12660;
                return cljs.core.async.impl.ioc_helpers.ioc_alts_BANG_.call(null, state_12660__$1, 7, inst_12647)
              }else {
                if(state_val_12661 === 3) {
                  var inst_12658 = state_12660[2];
                  var state_12660__$1 = state_12660;
                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12660__$1, inst_12658)
                }else {
                  if(state_val_12661 === 2) {
                    var state_12660__$1 = state_12660;
                    if(true) {
                      var statearr_12666_12675 = state_12660__$1;
                      statearr_12666_12675[1] = 4
                    }else {
                      var statearr_12667_12676 = state_12660__$1;
                      statearr_12667_12676[1] = 5
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    if(state_val_12661 === 1) {
                      var state_12660__$1 = state_12660;
                      var statearr_12668_12677 = state_12660__$1;
                      statearr_12668_12677[2] = null;
                      statearr_12668_12677[1] = 2;
                      return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                    }else {
                      return null
                    }
                  }
                }
              }
            }
          }
        }
      };
      return function(switch__5330__auto__) {
        return function() {
          var state_machine__5331__auto__ = null;
          var state_machine__5331__auto____0 = function() {
            var statearr_12670 = new Array(7);
            statearr_12670[0] = state_machine__5331__auto__;
            statearr_12670[1] = 1;
            return statearr_12670
          };
          var state_machine__5331__auto____1 = function(state_12660) {
            while(true) {
              var result__5332__auto__ = switch__5330__auto__.call(null, state_12660);
              if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                continue
              }else {
                return result__5332__auto__
              }
              break
            }
          };
          state_machine__5331__auto__ = function(state_12660) {
            switch(arguments.length) {
              case 0:
                return state_machine__5331__auto____0.call(this);
              case 1:
                return state_machine__5331__auto____1.call(this, state_12660)
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
          state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
          return state_machine__5331__auto__
        }()
      }(switch__5330__auto__)
    }();
    var state__5382__auto__ = function() {
      var statearr_12671 = f__5381__auto__.call(null);
      statearr_12671[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
      return statearr_12671
    }();
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
  });
  return c__5380__auto__
};
goog.exportSymbol("koans.repl.listen_for_output", koans.repl.listen_for_output);
goog.provide("koans.meditations.runtime_polymorphism");
goog.require("cljs.core");
koans.meditations.runtime_polymorphism.koans = cljs.core.list("Some functions can be used in different ways - with no arguments", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "hello", "hello", -1541369205, null))), "With one argument", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"hello", "hello", -1541369205, null), "world")), "Or with many arguments", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "hello", "hello", -1541369205, null), "Peter", "Paul", "Mary")));
koans.meditations.runtime_polymorphism.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "defn", "defn", -1637452094, null), new cljs.core.Symbol(null, "hello", "hello", -1541369205, null), cljs.core.list(cljs.core.PersistentVector.EMPTY, "Hello World!"), cljs.core.list(cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null)], true), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1640417302, null), "Hello, you silly ", 
new cljs.core.Symbol(null, "a", "a", -1640531430, null), ".")), cljs.core.list(cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "\x26", "\x26", -1640531489, null), new cljs.core.Symbol(null, "more", "more", -1637174002, null)], true), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1640417302, null), "Hello to this group: ", cljs.core.list(new cljs.core.Symbol(null, "apply", "apply", -1547502297, null), new cljs.core.Symbol(null, 
"str", "str", -1640417302, null), cljs.core.list(new cljs.core.Symbol(null, "interpose", "interpose", -1137596122, null), ", ", cljs.core.list(new cljs.core.Symbol(null, "concat", "concat", 1299640525, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), new cljs.core.Symbol(null, "a", "a", -1640531430, null)), new cljs.core.Symbol(null, "more", "more", -1637174002, null)))), "!"))), cljs.core.list(new cljs.core.Symbol(null, "defmulti", "defmulti", -985168371, null), 
new cljs.core.Symbol(null, "diet", "diet", -1637448275, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), cljs.core.list(new cljs.core.Keyword(null, "eater", "eater", 1110184311), new cljs.core.Symbol(null, "x", "x", -1640531407, null)))), cljs.core.list(new cljs.core.Symbol(null, "defmethod", "defmethod", 1481307871, null), new cljs.core.Symbol(null, "diet", "diet", 
-1637448275, null), new cljs.core.Keyword(null, "herbivore", "herbivore", 2949842490), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.list(new cljs.core.Symbol(null, "defmethod", "defmethod", 1481307871, null), new cljs.core.Symbol(null, "diet", "diet", -1637448275, null), new cljs.core.Keyword(null, "carnivore", "carnivore", 1064455981), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"a", "a", -1640531430, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.list(new cljs.core.Symbol(null, "defmethod", "defmethod", 1481307871, null), new cljs.core.Symbol(null, "diet", "diet", -1637448275, null), new cljs.core.Keyword(null, "default", "default", 2558708147), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282))], true);
goog.provide("koans.meditations.functions");
goog.require("cljs.core");
goog.require("koans.repl");
goog.require("koans.repl");
koans.meditations.functions.koans = cljs.core.list("Calling a function is like giving it a hug with parentheses", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "square", "square", 1759761110, null), 9)), "Functions are usually defined before they are used", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 
1013907282), cljs.core.list(new cljs.core.Symbol(null, "multiply-by-ten", "multiply-by-ten", -915076311, null), 2)), "But they can also be defined inline", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "n", "n", -1640531417, null)], true), cljs.core.list(new cljs.core.Symbol(null, 
"*", "*", -1640531485, null), 5, new cljs.core.Symbol(null, "n", "n", -1640531417, null))), 2)), "Or using an even shorter syntax", "(\x3d :__ (#(* 15 %) 4))", "Even anonymous functions may take multiple arguments", "(\x3d :__ (#(+ %1 %2 %3) 4 5 6))", "Arguments can also be skipped", "(\x3d :__ (#(* 15 %2) 1 2))", "One function can beget another", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 9, cljs.core.list(cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
"fn", "fn", -1640528255, null), cljs.core.PersistentVector.EMPTY, new cljs.core.Keyword(null, "__", "__", 1013907282))), 4, 5)), "Functions can also take other functions as input", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 20, cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "f", "f", -1640531425, null)], true), cljs.core.list(new cljs.core.Symbol(null, "f", 
"f", -1640531425, null), 4, 5)), new cljs.core.Keyword(null, "__", "__", 1013907282))), "Higher-order functions take function arguments", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 25, cljs.core.list(new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "n", "n", -1640531417, null)], true), cljs.core.list(new cljs.core.Symbol(null, 
"*", "*", -1640531485, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null))))), "But they are often better written using the names of functions", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 25, cljs.core.list(new cljs.core.Keyword(null, "__", "__", 1013907282), new cljs.core.Symbol(null, "square", "square", 1759761110, null))));
koans.meditations.functions.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "defn", "defn", -1637452094, null), new cljs.core.Symbol(null, "multiply-by-ten", "multiply-by-ten", -915076311, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "n", "n", -1640531417, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), 10, new cljs.core.Symbol(null, "n", "n", -1640531417, null))), cljs.core.list(new cljs.core.Symbol(null, 
"defn", "defn", -1637452094, null), new cljs.core.Symbol(null, "square", "square", 1759761110, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "n", "n", -1640531417, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null), new cljs.core.Symbol(null, "n", "n", -1640531417, null)))], true);
goog.provide("koans.meditations.higher_order_functions");
goog.require("cljs.core");
koans.meditations.higher_order_functions.koans = cljs.core.list("The map function relates a sequence to another", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "__", "__", 1013907282)], true), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"x", "x", -1640531407, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), 4, new cljs.core.Symbol(null, "x", "x", -1640531407, null))), cljs.core.PersistentVector.fromArray([1, 2, 3], true))), "You may create that mapping", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([1, 4, 9, 16, 25], true), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), cljs.core.list(new cljs.core.Symbol(null, 
"fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.PersistentVector.fromArray([1, 2, 3, 4, 5], true))), "Or use the names of existing functions", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1640423659, null), 
new cljs.core.Symbol(null, "nil?", "nil?", -1637150201, null), cljs.core.PersistentVector.fromArray([new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "b", "b", 1013904340), null, new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342)], true))), "A filter can be strong", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, 
"filter", "filter", 1379943729, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), false), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "anything", "anything", 683430388), new cljs.core.Keyword(null, "goes", "goes", 1017082632), new cljs.core.Keyword(null, "here", "here", 1017103202))))), 
"Or very weak", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "filter", "filter", 1379943729, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), true), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, 
"anything", "anything", 683430388), new cljs.core.Keyword(null, "goes", "goes", 1017082632), new cljs.core.Keyword(null, "here", "here", 1017103202))))), "Or somewhere in between", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.PersistentVector.fromArray([10, 20, 30], true), cljs.core.list(new cljs.core.Symbol(null, "filter", "filter", 1379943729, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"x", "x", -1640531407, null)], true), new cljs.core.Keyword(null, "__", "__", 1013907282)), cljs.core.PersistentVector.fromArray([10, 20, 30, 40, 50, 60, 70, 80], true))), "Reducing can increase the result", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "reduce", "reduce", 1719562015, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, 
"a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null))), cljs.core.PersistentVector.fromArray([1, 2, 3, 4], true))), "You can start somewhere else", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 2400, cljs.core.list(new cljs.core.Symbol(null, 
"reduce", "reduce", 1719562015, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null)], true), cljs.core.list(new cljs.core.Symbol(null, "*", "*", -1640531485, null), new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, null))), new cljs.core.Keyword(null, "__", "__", 
1013907282), cljs.core.PersistentVector.fromArray([1, 2, 3, 4], true))), "Numbers are not the only things one can reduce", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), "longest", cljs.core.list(new cljs.core.Symbol(null, "reduce", "reduce", 1719562015, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "a", "a", -1640531430, null), new cljs.core.Symbol(null, "b", "b", -1640531429, 
null)], true), cljs.core.list(new cljs.core.Symbol(null, "if", "if", -1640528170, null), cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", -1640531467, null), new cljs.core.Keyword(null, "__", "__", 1013907282)), new cljs.core.Symbol(null, "b", "b", -1640531429, null), new cljs.core.Symbol(null, "a", "a", -1640531430, null))), cljs.core.PersistentVector.fromArray(["which", "word", "is", "longest"], true))));
goog.provide("koans.meditations.lists");
goog.require("cljs.core");
koans.meditations.lists.koans = cljs.core.list("Lists can be expressed by function or a quoted form", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "__", "__", 1013907282))), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1637209513, null), 1, 2, 3, 4, 5)), "They are Clojure seqs (sequences), so they allow access to the first", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "first", "first", -1543091095, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(1, 2, 3, 4, 5)))), "As well as the rest", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "rest", "rest", -1637034611, 
null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(1, 2, 3, 4, 5)))), "Count your blessings", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Symbol(null, "dracula", "dracula", 271893299, 
null), new cljs.core.Symbol(null, "dooku", "dooku", -1544762521, null), new cljs.core.Symbol(null, "chocula", "chocula", -888972598, null))))), "Before they are gone", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.List.EMPTY))), "The rest, when nothing is left, is empty", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "rest", "rest", -1637034611, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(100)))), "Construction by adding an element to the front is easy", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), 
cljs.core.list(new cljs.core.Symbol(null, "cons", "cons", -1637472022, null), new cljs.core.Keyword(null, "a", "a", 1013904339), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "e", "e", 1013904343))))), "Conjoining an element to a list is strikingly similar", cljs.core.list(new cljs.core.Symbol(null, 
"\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "conj", "conj", -1637472031, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "e", "e", 1013904343))), new cljs.core.Keyword(null, "a", 
"a", 1013904339))), "You can use a list like a stack to get the first element", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "peek", "peek", -1637094636, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, "b", "b", 1013904340), new cljs.core.Keyword(null, 
"c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "e", "e", 1013904343))))), "Or the others", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "pop", "pop", -1640420342, null), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", -1532577739, null), cljs.core.list(new cljs.core.Keyword(null, "a", "a", 1013904339), new cljs.core.Keyword(null, 
"b", "b", 1013904340), new cljs.core.Keyword(null, "c", "c", 1013904341), new cljs.core.Keyword(null, "d", "d", 1013904342), new cljs.core.Keyword(null, "e", "e", 1013904343))))));
goog.provide("koans.meditations");
goog.require("cljs.core");
goog.require("koans.meditations.sequence_comprehensions");
goog.require("koans.meditations.datatypes");
goog.require("koans.meditations.destructuring");
goog.require("koans.meditations.maps");
goog.require("koans.meditations.functions");
goog.require("koans.meditations.atoms");
goog.require("koans.meditations.partition");
goog.require("koans.meditations.creating_functions");
goog.require("koans.meditations.conditionals");
goog.require("koans.meditations.maps");
goog.require("koans.meditations.lists");
goog.require("koans.meditations.atoms");
goog.require("koans.meditations.sequence_comprehensions");
goog.require("koans.meditations.vectors");
goog.require("koans.meditations.equality");
goog.require("koans.meditations.higher_order_functions");
goog.require("koans.meditations.lazy_sequences");
goog.require("koans.utils");
goog.require("koans.meditations.conditionals");
goog.require("koans.meditations.equality");
goog.require("koans.meditations.sets");
goog.require("koans.meditations.vectors");
goog.require("koans.meditations.destructuring");
goog.require("koans.meditations.datatypes");
goog.require("koans.utils");
goog.require("koans.repl");
goog.require("koans.meditations.runtime_polymorphism");
goog.require("koans.meditations.functions");
goog.require("koans.meditations.partition");
goog.require("koans.meditations.higher_order_functions");
goog.require("koans.repl");
goog.require("koans.meditations.runtime_polymorphism");
goog.require("koans.meditations.sets");
goog.require("koans.meditations.lists");
goog.require("koans.meditations.creating_functions");
goog.require("koans.meditations.lazy_sequences");
koans.meditations.Koan = function(description, before, after, __meta, __extmap) {
  this.description = description;
  this.before = before;
  this.after = after;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
koans.meditations.Koan.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3677__auto__) {
  var self__ = this;
  var this__3677__auto____$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, this__3677__auto____$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
koans.meditations.Koan.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3682__auto__, k__3683__auto__) {
  var self__ = this;
  var this__3682__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3682__auto____$1, k__3683__auto__, null)
};
koans.meditations.Koan.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3684__auto__, k12574, else__3685__auto__) {
  var self__ = this;
  var this__3684__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k12574, new cljs.core.Keyword(null, "description", "description", 3584325486))) {
    return self__.description
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k12574, new cljs.core.Keyword(null, "before", "before", 3915985649))) {
      return self__.before
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k12574, new cljs.core.Keyword(null, "after", "after", 1106639182))) {
        return self__.after
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k12574, else__3685__auto__)
        }else {
          return null
        }
      }
    }
  }
};
koans.meditations.Koan.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3689__auto__, k__3690__auto__, G__12573) {
  var self__ = this;
  var this__3689__auto____$1 = this;
  var pred__12576 = cljs.core.keyword_identical_QMARK_;
  var expr__12577 = k__3690__auto__;
  if(pred__12576.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), expr__12577)) {
    return new koans.meditations.Koan(G__12573, self__.before, self__.after, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__12576.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), expr__12577)) {
      return new koans.meditations.Koan(self__.description, G__12573, self__.after, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__12576.call(null, new cljs.core.Keyword(null, "after", "after", 1106639182), expr__12577)) {
        return new koans.meditations.Koan(self__.description, self__.before, G__12573, self__.__meta, self__.__extmap, null)
      }else {
        return new koans.meditations.Koan(self__.description, self__.before, self__.after, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3690__auto__, G__12573), null)
      }
    }
  }
};
koans.meditations.Koan.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3696__auto__, writer__3697__auto__, opts__3698__auto__) {
  var self__ = this;
  var this__3696__auto____$1 = this;
  var pr_pair__3699__auto__ = function(keyval__3700__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, cljs.core.pr_writer, "", " ", "", opts__3698__auto__, keyval__3700__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, pr_pair__3699__auto__, "#koans.meditations.Koan{", ", ", "}", opts__3698__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), self__.description), cljs.core.vector.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), self__.before), cljs.core.vector.call(null, new cljs.core.Keyword(null, 
  "after", "after", 1106639182), self__.after)], true), self__.__extmap))
};
koans.meditations.Koan.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3687__auto__, entry__3688__auto__) {
  var self__ = this;
  var this__3687__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3688__auto__)) {
    return cljs.core._assoc.call(null, this__3687__auto____$1, cljs.core._nth.call(null, entry__3688__auto__, 0), cljs.core._nth.call(null, entry__3688__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3687__auto____$1, entry__3688__auto__)
  }
};
koans.meditations.Koan.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3694__auto__) {
  var self__ = this;
  var this__3694__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "description", "description", 3584325486), self__.description), cljs.core.vector.call(null, new cljs.core.Keyword(null, "before", "before", 3915985649), self__.before), cljs.core.vector.call(null, new cljs.core.Keyword(null, "after", "after", 1106639182), self__.after)], true), self__.__extmap))
};
koans.meditations.Koan.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3686__auto__) {
  var self__ = this;
  var this__3686__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
koans.meditations.Koan.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3678__auto__, other__3679__auto__) {
  var self__ = this;
  var this__3678__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = other__3679__auto__;
    if(cljs.core.truth_(and__3119__auto__)) {
      var and__3119__auto____$1 = this__3678__auto____$1.constructor === other__3679__auto__.constructor;
      if(and__3119__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3678__auto____$1, other__3679__auto__)
      }else {
        return and__3119__auto____$1
      }
    }else {
      return and__3119__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
koans.meditations.Koan.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3681__auto__, G__12573) {
  var self__ = this;
  var this__3681__auto____$1 = this;
  return new koans.meditations.Koan(self__.description, self__.before, self__.after, G__12573, self__.__extmap, self__.__hash)
};
koans.meditations.Koan.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3680__auto__) {
  var self__ = this;
  var this__3680__auto____$1 = this;
  return self__.__meta
};
koans.meditations.Koan.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3691__auto__, k__3692__auto__) {
  var self__ = this;
  var this__3691__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "before", "before", 3915985649), null, new cljs.core.Keyword(null, "after", "after", 1106639182), null, new cljs.core.Keyword(null, "description", "description", 3584325486), null], true), k__3692__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3691__auto____$1), self__.__meta), k__3692__auto__)
  }else {
    return new koans.meditations.Koan(self__.description, self__.before, self__.after, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3692__auto__)), null)
  }
};
koans.meditations.Koan.cljs$lang$type = true;
koans.meditations.Koan.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "koans.meditations/Koan")
};
koans.meditations.Koan.cljs$lang$ctorPrWriter = function(this__3716__auto__, writer__3717__auto__) {
  return cljs.core._write.call(null, writer__3717__auto__, "koans.meditations/Koan")
};
koans.meditations.__GT_Koan = function __GT_Koan(description, before, after) {
  return new koans.meditations.Koan(description, before, after)
};
koans.meditations.map__GT_Koan = function map__GT_Koan(G__12575) {
  return new koans.meditations.Koan((new cljs.core.Keyword(null, "description", "description", 3584325486)).cljs$core$IFn$_invoke$arity$1(G__12575), (new cljs.core.Keyword(null, "before", "before", 3915985649)).cljs$core$IFn$_invoke$arity$1(G__12575), (new cljs.core.Keyword(null, "after", "after", 1106639182)).cljs$core$IFn$_invoke$arity$1(G__12575), null, cljs.core.dissoc.call(null, G__12575, new cljs.core.Keyword(null, "description", "description", 3584325486), new cljs.core.Keyword(null, "before", 
  "before", 3915985649), new cljs.core.Keyword(null, "after", "after", 1106639182)))
};
koans.meditations.KoanIndex = function(category, index, __meta, __extmap) {
  this.category = category;
  this.index = index;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 2) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3677__auto__) {
  var self__ = this;
  var this__3677__auto____$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, this__3677__auto____$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3682__auto__, k__3683__auto__) {
  var self__ = this;
  var this__3682__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3682__auto____$1, k__3683__auto__, null)
};
koans.meditations.KoanIndex.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3684__auto__, k12580, else__3685__auto__) {
  var self__ = this;
  var this__3684__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k12580, new cljs.core.Keyword(null, "category", "category", 1064415344))) {
    return self__.category
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k12580, new cljs.core.Keyword(null, "index", "index", 1114250308))) {
      return self__.index
    }else {
      if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
        return cljs.core.get.call(null, self__.__extmap, k12580, else__3685__auto__)
      }else {
        return null
      }
    }
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3689__auto__, k__3690__auto__, G__12579) {
  var self__ = this;
  var this__3689__auto____$1 = this;
  var pred__12582 = cljs.core.keyword_identical_QMARK_;
  var expr__12583 = k__3690__auto__;
  if(pred__12582.call(null, new cljs.core.Keyword(null, "category", "category", 1064415344), expr__12583)) {
    return new koans.meditations.KoanIndex(G__12579, self__.index, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__12582.call(null, new cljs.core.Keyword(null, "index", "index", 1114250308), expr__12583)) {
      return new koans.meditations.KoanIndex(self__.category, G__12579, self__.__meta, self__.__extmap, null)
    }else {
      return new koans.meditations.KoanIndex(self__.category, self__.index, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3690__auto__, G__12579), null)
    }
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3696__auto__, writer__3697__auto__, opts__3698__auto__) {
  var self__ = this;
  var this__3696__auto____$1 = this;
  var pr_pair__3699__auto__ = function(keyval__3700__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, cljs.core.pr_writer, "", " ", "", opts__3698__auto__, keyval__3700__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, pr_pair__3699__auto__, "#koans.meditations.KoanIndex{", ", ", "}", opts__3698__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category), cljs.core.vector.call(null, new cljs.core.Keyword(null, "index", "index", 1114250308), self__.index)], true), self__.__extmap))
};
koans.meditations.KoanIndex.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3687__auto__, entry__3688__auto__) {
  var self__ = this;
  var this__3687__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3688__auto__)) {
    return cljs.core._assoc.call(null, this__3687__auto____$1, cljs.core._nth.call(null, entry__3688__auto__, 0), cljs.core._nth.call(null, entry__3688__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3687__auto____$1, entry__3688__auto__)
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3694__auto__) {
  var self__ = this;
  var this__3694__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "category", "category", 1064415344), self__.category), cljs.core.vector.call(null, new cljs.core.Keyword(null, "index", "index", 1114250308), self__.index)], true), self__.__extmap))
};
koans.meditations.KoanIndex.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3686__auto__) {
  var self__ = this;
  var this__3686__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap)
};
koans.meditations.KoanIndex.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3678__auto__, other__3679__auto__) {
  var self__ = this;
  var this__3678__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = other__3679__auto__;
    if(cljs.core.truth_(and__3119__auto__)) {
      var and__3119__auto____$1 = this__3678__auto____$1.constructor === other__3679__auto__.constructor;
      if(and__3119__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3678__auto____$1, other__3679__auto__)
      }else {
        return and__3119__auto____$1
      }
    }else {
      return and__3119__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
koans.meditations.KoanIndex.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3681__auto__, G__12579) {
  var self__ = this;
  var this__3681__auto____$1 = this;
  return new koans.meditations.KoanIndex(self__.category, self__.index, G__12579, self__.__extmap, self__.__hash)
};
koans.meditations.KoanIndex.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3680__auto__) {
  var self__ = this;
  var this__3680__auto____$1 = this;
  return self__.__meta
};
koans.meditations.KoanIndex.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3691__auto__, k__3692__auto__) {
  var self__ = this;
  var this__3691__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "index", "index", 1114250308), null, new cljs.core.Keyword(null, "category", "category", 1064415344), null], true), k__3692__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3691__auto____$1), self__.__meta), k__3692__auto__)
  }else {
    return new koans.meditations.KoanIndex(self__.category, self__.index, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3692__auto__)), null)
  }
};
koans.meditations.KoanIndex.cljs$lang$type = true;
koans.meditations.KoanIndex.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "koans.meditations/KoanIndex")
};
koans.meditations.KoanIndex.cljs$lang$ctorPrWriter = function(this__3716__auto__, writer__3717__auto__) {
  return cljs.core._write.call(null, writer__3717__auto__, "koans.meditations/KoanIndex")
};
koans.meditations.__GT_KoanIndex = function __GT_KoanIndex(category, index) {
  return new koans.meditations.KoanIndex(category, index)
};
koans.meditations.map__GT_KoanIndex = function map__GT_KoanIndex(G__12581) {
  return new koans.meditations.KoanIndex((new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(G__12581), (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(G__12581), null, cljs.core.dissoc.call(null, G__12581, new cljs.core.Keyword(null, "category", "category", 1064415344), new cljs.core.Keyword(null, "index", "index", 1114250308)))
};
koans.meditations.Category = function(name, koans, fns, __meta, __extmap) {
  this.name = name;
  this.koans = koans;
  this.fns = fns;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  if(arguments.length > 3) {
    this.__meta = __meta;
    this.__extmap = __extmap
  }else {
    this.__meta = null;
    this.__extmap = null
  }
};
koans.meditations.Category.prototype.cljs$core$IHash$_hash$arity$1 = function(this__3677__auto__) {
  var self__ = this;
  var this__3677__auto____$1 = this;
  var h__3532__auto__ = self__.__hash;
  if(!(h__3532__auto__ == null)) {
    return h__3532__auto__
  }else {
    var h__3532__auto____$1 = cljs.core.hash_imap.call(null, this__3677__auto____$1);
    self__.__hash = h__3532__auto____$1;
    return h__3532__auto____$1
  }
};
koans.meditations.Category.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__3682__auto__, k__3683__auto__) {
  var self__ = this;
  var this__3682__auto____$1 = this;
  return cljs.core._lookup.call(null, this__3682__auto____$1, k__3683__auto__, null)
};
koans.meditations.Category.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__3684__auto__, k12586, else__3685__auto__) {
  var self__ = this;
  var this__3684__auto____$1 = this;
  if(cljs.core.keyword_identical_QMARK_.call(null, k12586, new cljs.core.Keyword(null, "name", "name", 1017277949))) {
    return self__.name
  }else {
    if(cljs.core.keyword_identical_QMARK_.call(null, k12586, new cljs.core.Keyword(null, "koans", "koans", 1116124532))) {
      return self__.koans
    }else {
      if(cljs.core.keyword_identical_QMARK_.call(null, k12586, new cljs.core.Keyword(null, "fns", "fns", 1014005789))) {
        return self__.fns
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return cljs.core.get.call(null, self__.__extmap, k12586, else__3685__auto__)
        }else {
          return null
        }
      }
    }
  }
};
koans.meditations.Category.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__3689__auto__, k__3690__auto__, G__12585) {
  var self__ = this;
  var this__3689__auto____$1 = this;
  var pred__12588 = cljs.core.keyword_identical_QMARK_;
  var expr__12589 = k__3690__auto__;
  if(pred__12588.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), expr__12589)) {
    return new koans.meditations.Category(G__12585, self__.koans, self__.fns, self__.__meta, self__.__extmap, null)
  }else {
    if(pred__12588.call(null, new cljs.core.Keyword(null, "koans", "koans", 1116124532), expr__12589)) {
      return new koans.meditations.Category(self__.name, G__12585, self__.fns, self__.__meta, self__.__extmap, null)
    }else {
      if(pred__12588.call(null, new cljs.core.Keyword(null, "fns", "fns", 1014005789), expr__12589)) {
        return new koans.meditations.Category(self__.name, self__.koans, G__12585, self__.__meta, self__.__extmap, null)
      }else {
        return new koans.meditations.Category(self__.name, self__.koans, self__.fns, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__3690__auto__, G__12585), null)
      }
    }
  }
};
koans.meditations.Category.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__3696__auto__, writer__3697__auto__, opts__3698__auto__) {
  var self__ = this;
  var this__3696__auto____$1 = this;
  var pr_pair__3699__auto__ = function(keyval__3700__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, cljs.core.pr_writer, "", " ", "", opts__3698__auto__, keyval__3700__auto__)
  };
  return cljs.core.pr_sequential_writer.call(null, writer__3697__auto__, pr_pair__3699__auto__, "#koans.meditations.Category{", ", ", "}", opts__3698__auto__, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), self__.name), cljs.core.vector.call(null, new cljs.core.Keyword(null, "koans", "koans", 1116124532), self__.koans), cljs.core.vector.call(null, new cljs.core.Keyword(null, "fns", "fns", 1014005789), 
  self__.fns)], true), self__.__extmap))
};
koans.meditations.Category.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__3687__auto__, entry__3688__auto__) {
  var self__ = this;
  var this__3687__auto____$1 = this;
  if(cljs.core.vector_QMARK_.call(null, entry__3688__auto__)) {
    return cljs.core._assoc.call(null, this__3687__auto____$1, cljs.core._nth.call(null, entry__3688__auto__, 0), cljs.core._nth.call(null, entry__3688__auto__, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__3687__auto____$1, entry__3688__auto__)
  }
};
koans.meditations.Category.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__3694__auto__) {
  var self__ = this;
  var this__3694__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([cljs.core.vector.call(null, new cljs.core.Keyword(null, "name", "name", 1017277949), self__.name), cljs.core.vector.call(null, new cljs.core.Keyword(null, "koans", "koans", 1116124532), self__.koans), cljs.core.vector.call(null, new cljs.core.Keyword(null, "fns", "fns", 1014005789), self__.fns)], true), self__.__extmap))
};
koans.meditations.Category.prototype.cljs$core$ICounted$_count$arity$1 = function(this__3686__auto__) {
  var self__ = this;
  var this__3686__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap)
};
koans.meditations.Category.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__3678__auto__, other__3679__auto__) {
  var self__ = this;
  var this__3678__auto____$1 = this;
  if(cljs.core.truth_(function() {
    var and__3119__auto__ = other__3679__auto__;
    if(cljs.core.truth_(and__3119__auto__)) {
      var and__3119__auto____$1 = this__3678__auto____$1.constructor === other__3679__auto__.constructor;
      if(and__3119__auto____$1) {
        return cljs.core.equiv_map.call(null, this__3678__auto____$1, other__3679__auto__)
      }else {
        return and__3119__auto____$1
      }
    }else {
      return and__3119__auto__
    }
  }())) {
    return true
  }else {
    return false
  }
};
koans.meditations.Category.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__3681__auto__, G__12585) {
  var self__ = this;
  var this__3681__auto____$1 = this;
  return new koans.meditations.Category(self__.name, self__.koans, self__.fns, G__12585, self__.__extmap, self__.__hash)
};
koans.meditations.Category.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__3680__auto__) {
  var self__ = this;
  var this__3680__auto____$1 = this;
  return self__.__meta
};
koans.meditations.Category.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__3691__auto__, k__3692__auto__) {
  var self__ = this;
  var this__3691__auto____$1 = this;
  if(cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "fns", "fns", 1014005789), null, new cljs.core.Keyword(null, "name", "name", 1017277949), null, new cljs.core.Keyword(null, "koans", "koans", 1116124532), null], true), k__3692__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__3691__auto____$1), self__.__meta), k__3692__auto__)
  }else {
    return new koans.meditations.Category(self__.name, self__.koans, self__.fns, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__3692__auto__)), null)
  }
};
koans.meditations.Category.cljs$lang$type = true;
koans.meditations.Category.cljs$lang$ctorPrSeq = function(this__3716__auto__) {
  return cljs.core.list.call(null, "koans.meditations/Category")
};
koans.meditations.Category.cljs$lang$ctorPrWriter = function(this__3716__auto__, writer__3717__auto__) {
  return cljs.core._write.call(null, writer__3717__auto__, "koans.meditations/Category")
};
koans.meditations.__GT_Category = function __GT_Category(name, koans__$1, fns) {
  return new koans.meditations.Category(name, koans__$1, fns)
};
koans.meditations.map__GT_Category = function map__GT_Category(G__12587) {
  return new koans.meditations.Category((new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(G__12587), (new cljs.core.Keyword(null, "koans", "koans", 1116124532)).cljs$core$IFn$_invoke$arity$1(G__12587), (new cljs.core.Keyword(null, "fns", "fns", 1014005789)).cljs$core$IFn$_invoke$arity$1(G__12587), null, cljs.core.dissoc.call(null, G__12587, new cljs.core.Keyword(null, "name", "name", 1017277949), new cljs.core.Keyword(null, "koans", "koans", 1116124532), new cljs.core.Keyword(null, 
  "fns", "fns", 1014005789)))
};
koans.meditations.categories = cljs.core.PersistentVector.fromArray([new koans.meditations.Category("equality", koans.meditations.equality.koans), new koans.meditations.Category("lists", koans.meditations.lists.koans), new koans.meditations.Category("vectors", koans.meditations.vectors.koans), new koans.meditations.Category("sets", koans.meditations.sets.koans), new koans.meditations.Category("maps", koans.meditations.maps.koans), new koans.meditations.Category("functions", koans.meditations.functions.koans, 
koans.meditations.functions.fns), new koans.meditations.Category("conditionals", koans.meditations.conditionals.koans, koans.meditations.conditionals.fns), new koans.meditations.Category("higher-order-functions", koans.meditations.higher_order_functions.koans), new koans.meditations.Category("runtime-polymorphism", koans.meditations.runtime_polymorphism.koans, koans.meditations.runtime_polymorphism.fns), new koans.meditations.Category("lazy-sequences", koans.meditations.lazy_sequences.koans), new koans.meditations.Category("sequence-comprehensions", 
koans.meditations.sequence_comprehensions.koans), new koans.meditations.Category("creating-functions", koans.meditations.creating_functions.koans, koans.meditations.creating_functions.fns), new koans.meditations.Category("destructuring", koans.meditations.destructuring.koans, koans.meditations.destructuring.fns), new koans.meditations.Category("atoms", koans.meditations.atoms.koans, koans.meditations.atoms.fns), new koans.meditations.Category("partition", koans.meditations.partition.koans)], true);
koans.meditations.category_from_koan_index = function category_from_koan_index(koan_index) {
  return cljs.core.first.call(null, cljs.core.filter.call(null, function(p1__12591_SHARP_) {
    return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(p1__12591_SHARP_), (new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(koan_index))
  }, koans.meditations.categories))
};
koans.meditations.koan_exists_QMARK_ = function koan_exists_QMARK_(koan_index) {
  return(new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koan_index) < cljs.core.count.call(null, cljs.core.partition.call(null, 2, (new cljs.core.Keyword(null, "koans", "koans", 1116124532)).cljs$core$IFn$_invoke$arity$1(koans.meditations.category_from_koan_index.call(null, koan_index))))
};
koans.meditations.next_category = function next_category(koan_index) {
  var index = koans.utils.index_of.call(null, koans.meditations.category_from_koan_index.call(null, koan_index), koans.meditations.categories) + 1;
  return(new cljs.core.Keyword(null, "name", "name", 1017277949)).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, koans.meditations.categories, index))
};
koans.meditations.expr_to_string = function expr_to_string(expr) {
  if(typeof expr === "string") {
    return expr
  }else {
    return clojure.string.replace.call(null, cljs.core.pr_str.call(null, expr), /\(quote (.*?)\)/, function(p1__12593_SHARP_, p2__12592_SHARP_) {
      return[cljs.core.str("'"), cljs.core.str(p2__12592_SHARP_)].join("")
    })
  }
};
koans.meditations.next_koan_index = function next_koan_index(koan) {
  var next_in_category = new koans.meditations.KoanIndex((new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(koan), (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koan) + 1);
  if(cljs.core.truth_(koans.meditations.koan_exists_QMARK_.call(null, next_in_category))) {
    return next_in_category
  }else {
    if(koans.meditations.category_from_koan_index.call(null, koan) == null) {
      return new koans.meditations.KoanIndex("equality", 0)
    }else {
      if(cljs.core.truth_(isNaN((new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(next_in_category)))) {
        return new koans.meditations.KoanIndex((new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(koan), 0)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          return new koans.meditations.KoanIndex(koans.meditations.next_category.call(null, koan), 0)
        }else {
          return null
        }
      }
    }
  }
};
koans.meditations.koan_for_index = function koan_for_index(koan_index) {
  var category = koans.meditations.category_from_koan_index.call(null, koan_index);
  var category_list = cljs.core.partition.call(null, 2, (new cljs.core.Keyword(null, "koans", "koans", 1116124532)).cljs$core$IFn$_invoke$arity$1(category));
  var item = function() {
    try {
      return cljs.core.nth.call(null, category_list, (new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koan_index))
    }catch(e12598) {
      if(e12598 instanceof Object) {
        var _ = e12598;
        return cljs.core.first.call(null, category_list)
      }else {
        if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
          throw e12598;
        }else {
          return null
        }
      }
    }
  }();
  var description = cljs.core.first.call(null, item);
  var full_text = koans.meditations.expr_to_string.call(null, cljs.core.last.call(null, item));
  var vec__12597 = clojure.string.split.call(null, full_text, /:__/);
  var before = cljs.core.nth.call(null, vec__12597, 0, null);
  var after = cljs.core.nth.call(null, vec__12597, 1, null);
  cljs.core.dorun.call(null, cljs.core.map.call(null, function(p1__12594_SHARP_) {
    return koans.repl.eval.call(null, cljs.core.pr_str.call(null, p1__12594_SHARP_))
  }, (new cljs.core.Keyword(null, "fns", "fns", 1014005789)).cljs$core$IFn$_invoke$arity$1(category)));
  return new koans.meditations.Koan(description, before, after)
};
goog.provide("koans.meditations_spec");
goog.require("cljs.core");
goog.require("koans.meditations");
goog.require("koans.meditations");
goog.require("specljs.core");
var description__12940__auto___13614 = specljs.components.new_description.call(null, "next-koan-index", "koans.meditations-spec");
var _STAR_parent_description_STAR_13599_13615 = specljs.config._STAR_parent_description_STAR_;
try {
  specljs.config._STAR_parent_description_STAR_ = description__12940__auto___13614;
  var seq__13600_13616 = cljs.core.seq.call(null, cljs.core.list.call(null, function() {
    var description__12940__auto____$1 = specljs.components.new_description.call(null, "when there are remaining items in the category", "koans.meditations-spec");
    var _STAR_parent_description_STAR_13604_13620 = specljs.config._STAR_parent_description_STAR_;
    try {
      specljs.config._STAR_parent_description_STAR_ = description__12940__auto____$1;
      var seq__13605_13621 = cljs.core.seq.call(null, cljs.core.list.call(null, specljs.components.new_characteristic.call(null, "should return the next index", function(_STAR_parent_description_STAR_13604_13620, description__12940__auto____$1) {
        return function() {
          koans.meditations_spec.original_koan_index = new koans.meditations.KoanIndex("equality", 0);
          koans.meditations_spec.expected_koan_index = new koans.meditations.KoanIndex("equality", 1);
          var expected__13020__auto__ = koans.meditations_spec.expected_koan_index;
          var actual__13021__auto__ = koans.meditations.next_koan_index.call(null, koans.meditations_spec.original_koan_index);
          if(!cljs.core._EQ_.call(null, expected__13020__auto__, actual__13021__auto__)) {
            throw new specljs.platform.SpecFailure([cljs.core.str("Expected: "), cljs.core.str(expected__13020__auto__ == null ? "nil" : cljs.core.pr_str.call(null, expected__13020__auto__)), cljs.core.str(specljs.platform.endl), cljs.core.str("     got: "), cljs.core.str(actual__13021__auto__ == null ? "nil" : cljs.core.pr_str.call(null, actual__13021__auto__)), cljs.core.str(" (using \x3d)")].join(""));
          }else {
            return null
          }
        }
      }(_STAR_parent_description_STAR_13604_13620, description__12940__auto____$1))));
      var chunk__13606_13622 = null;
      var count__13607_13623 = 0;
      var i__13608_13624 = 0;
      while(true) {
        if(i__13608_13624 < count__13607_13623) {
          var component__12941__auto___13625 = cljs.core._nth.call(null, chunk__13606_13622, i__13608_13624);
          specljs.components.install.call(null, component__12941__auto___13625, description__12940__auto____$1);
          var G__13626 = seq__13605_13621;
          var G__13627 = chunk__13606_13622;
          var G__13628 = count__13607_13623;
          var G__13629 = i__13608_13624 + 1;
          seq__13605_13621 = G__13626;
          chunk__13606_13622 = G__13627;
          count__13607_13623 = G__13628;
          i__13608_13624 = G__13629;
          continue
        }else {
          var temp__4092__auto___13630 = cljs.core.seq.call(null, seq__13605_13621);
          if(temp__4092__auto___13630) {
            var seq__13605_13631__$1 = temp__4092__auto___13630;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13605_13631__$1)) {
              var c__3844__auto___13632 = cljs.core.chunk_first.call(null, seq__13605_13631__$1);
              var G__13633 = cljs.core.chunk_rest.call(null, seq__13605_13631__$1);
              var G__13634 = c__3844__auto___13632;
              var G__13635 = cljs.core.count.call(null, c__3844__auto___13632);
              var G__13636 = 0;
              seq__13605_13621 = G__13633;
              chunk__13606_13622 = G__13634;
              count__13607_13623 = G__13635;
              i__13608_13624 = G__13636;
              continue
            }else {
              var component__12941__auto___13637 = cljs.core.first.call(null, seq__13605_13631__$1);
              specljs.components.install.call(null, component__12941__auto___13637, description__12940__auto____$1);
              var G__13638 = cljs.core.next.call(null, seq__13605_13631__$1);
              var G__13639 = null;
              var G__13640 = 0;
              var G__13641 = 0;
              seq__13605_13621 = G__13638;
              chunk__13606_13622 = G__13639;
              count__13607_13623 = G__13640;
              i__13608_13624 = G__13641;
              continue
            }
          }else {
          }
        }
        break
      }
    }finally {
      specljs.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_13604_13620
    }
    if(cljs.core.not.call(null, specljs.config._STAR_parent_description_STAR_)) {
      specljs.running.submit_description.call(null, specljs.config.active_runner.call(null), description__12940__auto____$1)
    }else {
    }
    return description__12940__auto____$1
  }(), function() {
    var description__12940__auto____$1 = specljs.components.new_description.call(null, "when the category is completed", "koans.meditations-spec");
    var _STAR_parent_description_STAR_13609_13642 = specljs.config._STAR_parent_description_STAR_;
    try {
      specljs.config._STAR_parent_description_STAR_ = description__12940__auto____$1;
      var seq__13610_13643 = cljs.core.seq.call(null, cljs.core.list.call(null));
      var chunk__13611_13644 = null;
      var count__13612_13645 = 0;
      var i__13613_13646 = 0;
      while(true) {
        if(i__13613_13646 < count__13612_13645) {
          var component__12941__auto___13647 = cljs.core._nth.call(null, chunk__13611_13644, i__13613_13646);
          specljs.components.install.call(null, component__12941__auto___13647, description__12940__auto____$1);
          var G__13648 = seq__13610_13643;
          var G__13649 = chunk__13611_13644;
          var G__13650 = count__13612_13645;
          var G__13651 = i__13613_13646 + 1;
          seq__13610_13643 = G__13648;
          chunk__13611_13644 = G__13649;
          count__13612_13645 = G__13650;
          i__13613_13646 = G__13651;
          continue
        }else {
          var temp__4092__auto___13652 = cljs.core.seq.call(null, seq__13610_13643);
          if(temp__4092__auto___13652) {
            var seq__13610_13653__$1 = temp__4092__auto___13652;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__13610_13653__$1)) {
              var c__3844__auto___13654 = cljs.core.chunk_first.call(null, seq__13610_13653__$1);
              var G__13655 = cljs.core.chunk_rest.call(null, seq__13610_13653__$1);
              var G__13656 = c__3844__auto___13654;
              var G__13657 = cljs.core.count.call(null, c__3844__auto___13654);
              var G__13658 = 0;
              seq__13610_13643 = G__13655;
              chunk__13611_13644 = G__13656;
              count__13612_13645 = G__13657;
              i__13613_13646 = G__13658;
              continue
            }else {
              var component__12941__auto___13659 = cljs.core.first.call(null, seq__13610_13653__$1);
              specljs.components.install.call(null, component__12941__auto___13659, description__12940__auto____$1);
              var G__13660 = cljs.core.next.call(null, seq__13610_13653__$1);
              var G__13661 = null;
              var G__13662 = 0;
              var G__13663 = 0;
              seq__13610_13643 = G__13660;
              chunk__13611_13644 = G__13661;
              count__13612_13645 = G__13662;
              i__13613_13646 = G__13663;
              continue
            }
          }else {
          }
        }
        break
      }
    }finally {
      specljs.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_13609_13642
    }
    if(cljs.core.not.call(null, specljs.config._STAR_parent_description_STAR_)) {
      specljs.running.submit_description.call(null, specljs.config.active_runner.call(null), description__12940__auto____$1)
    }else {
    }
    return description__12940__auto____$1
  }(), specljs.components.new_characteristic.call(null, "should return the first koan in the next category", function() {
    throw new specljs.platform.SpecPending("Not Yet Implemented");
  })));
  var chunk__13601_13617 = null;
  var count__13602_13618 = 0;
  var i__13603_13619 = 0;
  while(true) {
    if(i__13603_13619 < count__13602_13618) {
      var component__12941__auto___13664 = cljs.core._nth.call(null, chunk__13601_13617, i__13603_13619);
      specljs.components.install.call(null, component__12941__auto___13664, description__12940__auto___13614);
      var G__13665 = seq__13600_13616;
      var G__13666 = chunk__13601_13617;
      var G__13667 = count__13602_13618;
      var G__13668 = i__13603_13619 + 1;
      seq__13600_13616 = G__13665;
      chunk__13601_13617 = G__13666;
      count__13602_13618 = G__13667;
      i__13603_13619 = G__13668;
      continue
    }else {
      var temp__4092__auto___13669 = cljs.core.seq.call(null, seq__13600_13616);
      if(temp__4092__auto___13669) {
        var seq__13600_13670__$1 = temp__4092__auto___13669;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__13600_13670__$1)) {
          var c__3844__auto___13671 = cljs.core.chunk_first.call(null, seq__13600_13670__$1);
          var G__13672 = cljs.core.chunk_rest.call(null, seq__13600_13670__$1);
          var G__13673 = c__3844__auto___13671;
          var G__13674 = cljs.core.count.call(null, c__3844__auto___13671);
          var G__13675 = 0;
          seq__13600_13616 = G__13672;
          chunk__13601_13617 = G__13673;
          count__13602_13618 = G__13674;
          i__13603_13619 = G__13675;
          continue
        }else {
          var component__12941__auto___13676 = cljs.core.first.call(null, seq__13600_13670__$1);
          specljs.components.install.call(null, component__12941__auto___13676, description__12940__auto___13614);
          var G__13677 = cljs.core.next.call(null, seq__13600_13670__$1);
          var G__13678 = null;
          var G__13679 = 0;
          var G__13680 = 0;
          seq__13600_13616 = G__13677;
          chunk__13601_13617 = G__13678;
          count__13602_13618 = G__13679;
          i__13603_13619 = G__13680;
          continue
        }
      }else {
      }
    }
    break
  }
}finally {
  specljs.config._STAR_parent_description_STAR_ = _STAR_parent_description_STAR_13599_13615
}
if(cljs.core.not.call(null, specljs.config._STAR_parent_description_STAR_)) {
  specljs.running.submit_description.call(null, specljs.config.active_runner.call(null), description__12940__auto___13614)
}else {
}
;goog.provide("dommy.attrs");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.attrs.class_match_QMARK_ = function class_match_QMARK_(class_name, class$, idx) {
  var and__3119__auto__ = idx === 0 || " " === class_name.charAt(idx - 1);
  if(and__3119__auto__) {
    var total_len = class_name.length;
    var stop = idx + class$.length;
    if(stop <= total_len) {
      return stop === total_len || " " === class_name.charAt(stop)
    }else {
      return null
    }
  }else {
    return and__3119__auto__
  }
};
dommy.attrs.class_index = function class_index(class_name, class$) {
  var start_from = 0;
  while(true) {
    var i = class_name.indexOf(class$, start_from);
    if(i >= 0) {
      if(dommy.attrs.class_match_QMARK_.call(null, class_name, class$, i)) {
        return i
      }else {
        var G__17372 = i + class$.length;
        start_from = G__17372;
        continue
      }
    }else {
      return null
    }
    break
  }
};
dommy.attrs.has_class_QMARK_ = function has_class_QMARK_(elem, class$) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var class$__$1 = cljs.core.name.call(null, class$);
  var temp__4090__auto__ = elem__$1.classList;
  if(cljs.core.truth_(temp__4090__auto__)) {
    var class_list = temp__4090__auto__;
    return class_list.contains(class$__$1)
  }else {
    var temp__4092__auto__ = elem__$1.className;
    if(cljs.core.truth_(temp__4092__auto__)) {
      var class_name = temp__4092__auto__;
      var temp__4092__auto____$1 = dommy.attrs.class_index.call(null, class_name, class$__$1);
      if(cljs.core.truth_(temp__4092__auto____$1)) {
        var i = temp__4092__auto____$1;
        return i >= 0
      }else {
        return null
      }
    }else {
      return null
    }
  }
};
dommy.attrs.add_class_BANG_ = function() {
  var add_class_BANG_ = null;
  var add_class_BANG___2 = function(elem, classes) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var classes__$1 = clojure.string.trim.call(null, cljs.core.name.call(null, classes));
    if(cljs.core.seq.call(null, classes__$1)) {
      var temp__4090__auto___17397 = elem__$1.classList;
      if(cljs.core.truth_(temp__4090__auto___17397)) {
        var class_list_17398 = temp__4090__auto___17397;
        var seq__17385_17399 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__17386_17400 = null;
        var count__17387_17401 = 0;
        var i__17388_17402 = 0;
        while(true) {
          if(i__17388_17402 < count__17387_17401) {
            var class_17403 = cljs.core._nth.call(null, chunk__17386_17400, i__17388_17402);
            class_list_17398.add(class_17403);
            var G__17404 = seq__17385_17399;
            var G__17405 = chunk__17386_17400;
            var G__17406 = count__17387_17401;
            var G__17407 = i__17388_17402 + 1;
            seq__17385_17399 = G__17404;
            chunk__17386_17400 = G__17405;
            count__17387_17401 = G__17406;
            i__17388_17402 = G__17407;
            continue
          }else {
            var temp__4092__auto___17408 = cljs.core.seq.call(null, seq__17385_17399);
            if(temp__4092__auto___17408) {
              var seq__17385_17409__$1 = temp__4092__auto___17408;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17385_17409__$1)) {
                var c__3844__auto___17410 = cljs.core.chunk_first.call(null, seq__17385_17409__$1);
                var G__17411 = cljs.core.chunk_rest.call(null, seq__17385_17409__$1);
                var G__17412 = c__3844__auto___17410;
                var G__17413 = cljs.core.count.call(null, c__3844__auto___17410);
                var G__17414 = 0;
                seq__17385_17399 = G__17411;
                chunk__17386_17400 = G__17412;
                count__17387_17401 = G__17413;
                i__17388_17402 = G__17414;
                continue
              }else {
                var class_17415 = cljs.core.first.call(null, seq__17385_17409__$1);
                class_list_17398.add(class_17415);
                var G__17416 = cljs.core.next.call(null, seq__17385_17409__$1);
                var G__17417 = null;
                var G__17418 = 0;
                var G__17419 = 0;
                seq__17385_17399 = G__17416;
                chunk__17386_17400 = G__17417;
                count__17387_17401 = G__17418;
                i__17388_17402 = G__17419;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        var class_name_17420 = elem__$1.className;
        var seq__17389_17421 = cljs.core.seq.call(null, classes__$1.split(/\s+/));
        var chunk__17390_17422 = null;
        var count__17391_17423 = 0;
        var i__17392_17424 = 0;
        while(true) {
          if(i__17392_17424 < count__17391_17423) {
            var class_17425 = cljs.core._nth.call(null, chunk__17390_17422, i__17392_17424);
            if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_17420, class_17425))) {
            }else {
              elem__$1.className = class_name_17420 === "" ? class_17425 : [cljs.core.str(class_name_17420), cljs.core.str(" "), cljs.core.str(class_17425)].join("")
            }
            var G__17426 = seq__17389_17421;
            var G__17427 = chunk__17390_17422;
            var G__17428 = count__17391_17423;
            var G__17429 = i__17392_17424 + 1;
            seq__17389_17421 = G__17426;
            chunk__17390_17422 = G__17427;
            count__17391_17423 = G__17428;
            i__17392_17424 = G__17429;
            continue
          }else {
            var temp__4092__auto___17430 = cljs.core.seq.call(null, seq__17389_17421);
            if(temp__4092__auto___17430) {
              var seq__17389_17431__$1 = temp__4092__auto___17430;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17389_17431__$1)) {
                var c__3844__auto___17432 = cljs.core.chunk_first.call(null, seq__17389_17431__$1);
                var G__17433 = cljs.core.chunk_rest.call(null, seq__17389_17431__$1);
                var G__17434 = c__3844__auto___17432;
                var G__17435 = cljs.core.count.call(null, c__3844__auto___17432);
                var G__17436 = 0;
                seq__17389_17421 = G__17433;
                chunk__17390_17422 = G__17434;
                count__17391_17423 = G__17435;
                i__17392_17424 = G__17436;
                continue
              }else {
                var class_17437 = cljs.core.first.call(null, seq__17389_17431__$1);
                if(cljs.core.truth_(dommy.attrs.class_index.call(null, class_name_17420, class_17437))) {
                }else {
                  elem__$1.className = class_name_17420 === "" ? class_17437 : [cljs.core.str(class_name_17420), cljs.core.str(" "), cljs.core.str(class_17437)].join("")
                }
                var G__17438 = cljs.core.next.call(null, seq__17389_17431__$1);
                var G__17439 = null;
                var G__17440 = 0;
                var G__17441 = 0;
                seq__17389_17421 = G__17438;
                chunk__17390_17422 = G__17439;
                count__17391_17423 = G__17440;
                i__17392_17424 = G__17441;
                continue
              }
            }else {
            }
          }
          break
        }
      }
    }else {
    }
    return elem__$1
  };
  var add_class_BANG___3 = function() {
    var G__17442__delegate = function(elem, classes, more_classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17393_17443 = cljs.core.seq.call(null, cljs.core.conj.call(null, more_classes, classes));
      var chunk__17394_17444 = null;
      var count__17395_17445 = 0;
      var i__17396_17446 = 0;
      while(true) {
        if(i__17396_17446 < count__17395_17445) {
          var c_17447 = cljs.core._nth.call(null, chunk__17394_17444, i__17396_17446);
          add_class_BANG_.call(null, elem__$1, c_17447);
          var G__17448 = seq__17393_17443;
          var G__17449 = chunk__17394_17444;
          var G__17450 = count__17395_17445;
          var G__17451 = i__17396_17446 + 1;
          seq__17393_17443 = G__17448;
          chunk__17394_17444 = G__17449;
          count__17395_17445 = G__17450;
          i__17396_17446 = G__17451;
          continue
        }else {
          var temp__4092__auto___17452 = cljs.core.seq.call(null, seq__17393_17443);
          if(temp__4092__auto___17452) {
            var seq__17393_17453__$1 = temp__4092__auto___17452;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17393_17453__$1)) {
              var c__3844__auto___17454 = cljs.core.chunk_first.call(null, seq__17393_17453__$1);
              var G__17455 = cljs.core.chunk_rest.call(null, seq__17393_17453__$1);
              var G__17456 = c__3844__auto___17454;
              var G__17457 = cljs.core.count.call(null, c__3844__auto___17454);
              var G__17458 = 0;
              seq__17393_17443 = G__17455;
              chunk__17394_17444 = G__17456;
              count__17395_17445 = G__17457;
              i__17396_17446 = G__17458;
              continue
            }else {
              var c_17459 = cljs.core.first.call(null, seq__17393_17453__$1);
              add_class_BANG_.call(null, elem__$1, c_17459);
              var G__17460 = cljs.core.next.call(null, seq__17393_17453__$1);
              var G__17461 = null;
              var G__17462 = 0;
              var G__17463 = 0;
              seq__17393_17443 = G__17460;
              chunk__17394_17444 = G__17461;
              count__17395_17445 = G__17462;
              i__17396_17446 = G__17463;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17442 = function(elem, classes, var_args) {
      var more_classes = null;
      if(arguments.length > 2) {
        more_classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17442__delegate.call(this, elem, classes, more_classes)
    };
    G__17442.cljs$lang$maxFixedArity = 2;
    G__17442.cljs$lang$applyTo = function(arglist__17464) {
      var elem = cljs.core.first(arglist__17464);
      arglist__17464 = cljs.core.next(arglist__17464);
      var classes = cljs.core.first(arglist__17464);
      var more_classes = cljs.core.rest(arglist__17464);
      return G__17442__delegate(elem, classes, more_classes)
    };
    G__17442.cljs$core$IFn$_invoke$arity$variadic = G__17442__delegate;
    return G__17442
  }();
  add_class_BANG_ = function(elem, classes, var_args) {
    var more_classes = var_args;
    switch(arguments.length) {
      case 2:
        return add_class_BANG___2.call(this, elem, classes);
      default:
        return add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, classes, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_class_BANG_.cljs$lang$maxFixedArity = 2;
  add_class_BANG_.cljs$lang$applyTo = add_class_BANG___3.cljs$lang$applyTo;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$2 = add_class_BANG___2;
  add_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = add_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return add_class_BANG_
}();
dommy.attrs.remove_class_str = function remove_class_str(init_class_name, class$) {
  var class_name = init_class_name;
  while(true) {
    var class_len = class_name.length;
    var temp__4090__auto__ = dommy.attrs.class_index.call(null, class_name, class$);
    if(cljs.core.truth_(temp__4090__auto__)) {
      var i = temp__4090__auto__;
      var G__17465 = function() {
        var end = i + class$.length;
        return[cljs.core.str(end < class_len ? [cljs.core.str(class_name.substring(0, i)), cljs.core.str(class_name.substr(end + 1))].join("") : class_name.substring(0, i - 1))].join("")
      }();
      class_name = G__17465;
      continue
    }else {
      return class_name
    }
    break
  }
};
dommy.attrs.remove_class_BANG_ = function() {
  var remove_class_BANG_ = null;
  var remove_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___17474 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___17474)) {
      var class_list_17475 = temp__4090__auto___17474;
      class_list_17475.remove(class$__$1)
    }else {
      var class_name_17476 = elem__$1.className;
      var new_class_name_17477 = dommy.attrs.remove_class_str.call(null, class_name_17476, class$__$1);
      if(class_name_17476 === new_class_name_17477) {
      }else {
        elem__$1.className = new_class_name_17477
      }
    }
    return elem__$1
  };
  var remove_class_BANG___3 = function() {
    var G__17478__delegate = function(elem, class$, classes) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17470 = cljs.core.seq.call(null, cljs.core.conj.call(null, classes, class$));
      var chunk__17471 = null;
      var count__17472 = 0;
      var i__17473 = 0;
      while(true) {
        if(i__17473 < count__17472) {
          var c = cljs.core._nth.call(null, chunk__17471, i__17473);
          remove_class_BANG_.call(null, elem__$1, c);
          var G__17479 = seq__17470;
          var G__17480 = chunk__17471;
          var G__17481 = count__17472;
          var G__17482 = i__17473 + 1;
          seq__17470 = G__17479;
          chunk__17471 = G__17480;
          count__17472 = G__17481;
          i__17473 = G__17482;
          continue
        }else {
          var temp__4092__auto__ = cljs.core.seq.call(null, seq__17470);
          if(temp__4092__auto__) {
            var seq__17470__$1 = temp__4092__auto__;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17470__$1)) {
              var c__3844__auto__ = cljs.core.chunk_first.call(null, seq__17470__$1);
              var G__17483 = cljs.core.chunk_rest.call(null, seq__17470__$1);
              var G__17484 = c__3844__auto__;
              var G__17485 = cljs.core.count.call(null, c__3844__auto__);
              var G__17486 = 0;
              seq__17470 = G__17483;
              chunk__17471 = G__17484;
              count__17472 = G__17485;
              i__17473 = G__17486;
              continue
            }else {
              var c = cljs.core.first.call(null, seq__17470__$1);
              remove_class_BANG_.call(null, elem__$1, c);
              var G__17487 = cljs.core.next.call(null, seq__17470__$1);
              var G__17488 = null;
              var G__17489 = 0;
              var G__17490 = 0;
              seq__17470 = G__17487;
              chunk__17471 = G__17488;
              count__17472 = G__17489;
              i__17473 = G__17490;
              continue
            }
          }else {
            return null
          }
        }
        break
      }
    };
    var G__17478 = function(elem, class$, var_args) {
      var classes = null;
      if(arguments.length > 2) {
        classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17478__delegate.call(this, elem, class$, classes)
    };
    G__17478.cljs$lang$maxFixedArity = 2;
    G__17478.cljs$lang$applyTo = function(arglist__17491) {
      var elem = cljs.core.first(arglist__17491);
      arglist__17491 = cljs.core.next(arglist__17491);
      var class$ = cljs.core.first(arglist__17491);
      var classes = cljs.core.rest(arglist__17491);
      return G__17478__delegate(elem, class$, classes)
    };
    G__17478.cljs$core$IFn$_invoke$arity$variadic = G__17478__delegate;
    return G__17478
  }();
  remove_class_BANG_ = function(elem, class$, var_args) {
    var classes = var_args;
    switch(arguments.length) {
      case 2:
        return remove_class_BANG___2.call(this, elem, class$);
      default:
        return remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, class$, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_class_BANG_.cljs$lang$maxFixedArity = 2;
  remove_class_BANG_.cljs$lang$applyTo = remove_class_BANG___3.cljs$lang$applyTo;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_class_BANG___2;
  remove_class_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_class_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_class_BANG_
}();
dommy.attrs.toggle_class_BANG_ = function() {
  var toggle_class_BANG_ = null;
  var toggle_class_BANG___2 = function(elem, class$) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var class$__$1 = cljs.core.name.call(null, class$);
    var temp__4090__auto___17492 = elem__$1.classList;
    if(cljs.core.truth_(temp__4090__auto___17492)) {
      var class_list_17493 = temp__4090__auto___17492;
      class_list_17493.toggle(class$__$1)
    }else {
      toggle_class_BANG_.call(null, elem__$1, class$__$1, !dommy.attrs.has_class_QMARK_.call(null, elem__$1, class$__$1))
    }
    return elem__$1
  };
  var toggle_class_BANG___3 = function(elem, class$, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      dommy.attrs.add_class_BANG_.call(null, elem__$1, class$)
    }else {
      dommy.attrs.remove_class_BANG_.call(null, elem__$1, class$)
    }
    return elem__$1
  };
  toggle_class_BANG_ = function(elem, class$, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_class_BANG___2.call(this, elem, class$);
      case 3:
        return toggle_class_BANG___3.call(this, elem, class$, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_class_BANG___2;
  toggle_class_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_class_BANG___3;
  return toggle_class_BANG_
}();
dommy.attrs.style_str = function style_str(x) {
  if(typeof x === "string") {
    return x
  }else {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, function(p__17496) {
      var vec__17497 = p__17496;
      var k = cljs.core.nth.call(null, vec__17497, 0, null);
      var v = cljs.core.nth.call(null, vec__17497, 1, null);
      return[cljs.core.str(cljs.core.name.call(null, k)), cljs.core.str(":"), cljs.core.str(cljs.core.name.call(null, v)), cljs.core.str(";")].join("")
    }, x))
  }
};
dommy.attrs.set_style_BANG_ = function() {
  var set_style_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var style = elem__$1.style;
    var seq__17504_17510 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__17505_17511 = null;
    var count__17506_17512 = 0;
    var i__17507_17513 = 0;
    while(true) {
      if(i__17507_17513 < count__17506_17512) {
        var vec__17508_17514 = cljs.core._nth.call(null, chunk__17505_17511, i__17507_17513);
        var k_17515 = cljs.core.nth.call(null, vec__17508_17514, 0, null);
        var v_17516 = cljs.core.nth.call(null, vec__17508_17514, 1, null);
        style[cljs.core.name.call(null, k_17515)] = v_17516;
        var G__17517 = seq__17504_17510;
        var G__17518 = chunk__17505_17511;
        var G__17519 = count__17506_17512;
        var G__17520 = i__17507_17513 + 1;
        seq__17504_17510 = G__17517;
        chunk__17505_17511 = G__17518;
        count__17506_17512 = G__17519;
        i__17507_17513 = G__17520;
        continue
      }else {
        var temp__4092__auto___17521 = cljs.core.seq.call(null, seq__17504_17510);
        if(temp__4092__auto___17521) {
          var seq__17504_17522__$1 = temp__4092__auto___17521;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17504_17522__$1)) {
            var c__3844__auto___17523 = cljs.core.chunk_first.call(null, seq__17504_17522__$1);
            var G__17524 = cljs.core.chunk_rest.call(null, seq__17504_17522__$1);
            var G__17525 = c__3844__auto___17523;
            var G__17526 = cljs.core.count.call(null, c__3844__auto___17523);
            var G__17527 = 0;
            seq__17504_17510 = G__17524;
            chunk__17505_17511 = G__17525;
            count__17506_17512 = G__17526;
            i__17507_17513 = G__17527;
            continue
          }else {
            var vec__17509_17528 = cljs.core.first.call(null, seq__17504_17522__$1);
            var k_17529 = cljs.core.nth.call(null, vec__17509_17528, 0, null);
            var v_17530 = cljs.core.nth.call(null, vec__17509_17528, 1, null);
            style[cljs.core.name.call(null, k_17529)] = v_17530;
            var G__17531 = cljs.core.next.call(null, seq__17504_17522__$1);
            var G__17532 = null;
            var G__17533 = 0;
            var G__17534 = 0;
            seq__17504_17510 = G__17531;
            chunk__17505_17511 = G__17532;
            count__17506_17512 = G__17533;
            i__17507_17513 = G__17534;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_style_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_style_BANG___delegate.call(this, elem, kvs)
  };
  set_style_BANG_.cljs$lang$maxFixedArity = 1;
  set_style_BANG_.cljs$lang$applyTo = function(arglist__17535) {
    var elem = cljs.core.first(arglist__17535);
    var kvs = cljs.core.rest(arglist__17535);
    return set_style_BANG___delegate(elem, kvs)
  };
  set_style_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_style_BANG___delegate;
  return set_style_BANG_
}();
dommy.attrs.style = function style(elem, k) {
  if(cljs.core.truth_(k)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "k", "k", -1640531420, null)))].join(""));
  }
  return window.getComputedStyle(dommy.template.__GT_node_like.call(null, elem))[cljs.core.name.call(null, k)]
};
dommy.attrs.set_px_BANG_ = function() {
  var set_px_BANG___delegate = function(elem, kvs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
    }
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    var seq__17542_17548 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, kvs));
    var chunk__17543_17549 = null;
    var count__17544_17550 = 0;
    var i__17545_17551 = 0;
    while(true) {
      if(i__17545_17551 < count__17544_17550) {
        var vec__17546_17552 = cljs.core._nth.call(null, chunk__17543_17549, i__17545_17551);
        var k_17553 = cljs.core.nth.call(null, vec__17546_17552, 0, null);
        var v_17554 = cljs.core.nth.call(null, vec__17546_17552, 1, null);
        dommy.attrs.set_style_BANG_.call(null, elem__$1, k_17553, [cljs.core.str(v_17554), cljs.core.str("px")].join(""));
        var G__17555 = seq__17542_17548;
        var G__17556 = chunk__17543_17549;
        var G__17557 = count__17544_17550;
        var G__17558 = i__17545_17551 + 1;
        seq__17542_17548 = G__17555;
        chunk__17543_17549 = G__17556;
        count__17544_17550 = G__17557;
        i__17545_17551 = G__17558;
        continue
      }else {
        var temp__4092__auto___17559 = cljs.core.seq.call(null, seq__17542_17548);
        if(temp__4092__auto___17559) {
          var seq__17542_17560__$1 = temp__4092__auto___17559;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17542_17560__$1)) {
            var c__3844__auto___17561 = cljs.core.chunk_first.call(null, seq__17542_17560__$1);
            var G__17562 = cljs.core.chunk_rest.call(null, seq__17542_17560__$1);
            var G__17563 = c__3844__auto___17561;
            var G__17564 = cljs.core.count.call(null, c__3844__auto___17561);
            var G__17565 = 0;
            seq__17542_17548 = G__17562;
            chunk__17543_17549 = G__17563;
            count__17544_17550 = G__17564;
            i__17545_17551 = G__17565;
            continue
          }else {
            var vec__17547_17566 = cljs.core.first.call(null, seq__17542_17560__$1);
            var k_17567 = cljs.core.nth.call(null, vec__17547_17566, 0, null);
            var v_17568 = cljs.core.nth.call(null, vec__17547_17566, 1, null);
            dommy.attrs.set_style_BANG_.call(null, elem__$1, k_17567, [cljs.core.str(v_17568), cljs.core.str("px")].join(""));
            var G__17569 = cljs.core.next.call(null, seq__17542_17560__$1);
            var G__17570 = null;
            var G__17571 = 0;
            var G__17572 = 0;
            seq__17542_17548 = G__17569;
            chunk__17543_17549 = G__17570;
            count__17544_17550 = G__17571;
            i__17545_17551 = G__17572;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem__$1
  };
  var set_px_BANG_ = function(elem, var_args) {
    var kvs = null;
    if(arguments.length > 1) {
      kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return set_px_BANG___delegate.call(this, elem, kvs)
  };
  set_px_BANG_.cljs$lang$maxFixedArity = 1;
  set_px_BANG_.cljs$lang$applyTo = function(arglist__17573) {
    var elem = cljs.core.first(arglist__17573);
    var kvs = cljs.core.rest(arglist__17573);
    return set_px_BANG___delegate(elem, kvs)
  };
  set_px_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_px_BANG___delegate;
  return set_px_BANG_
}();
dommy.attrs.px = function px(elem, k) {
  var pixels = dommy.attrs.style.call(null, dommy.template.__GT_node_like.call(null, elem), k);
  if(cljs.core.seq.call(null, pixels)) {
    return parseInt(pixels)
  }else {
    return null
  }
};
dommy.attrs.set_attr_BANG_ = function() {
  var set_attr_BANG_ = null;
  var set_attr_BANG___2 = function(elem, k) {
    return set_attr_BANG_.call(null, dommy.template.__GT_node_like.call(null, elem), k, "true")
  };
  var set_attr_BANG___3 = function(elem, k, v) {
    if(cljs.core.truth_(v)) {
      if(cljs.core.fn_QMARK_.call(null, v)) {
        var G__17582 = dommy.template.__GT_node_like.call(null, elem);
        G__17582[cljs.core.name.call(null, k)] = v;
        return G__17582
      }else {
        var G__17583 = dommy.template.__GT_node_like.call(null, elem);
        G__17583.setAttribute(cljs.core.name.call(null, k), k === new cljs.core.Keyword(null, "style", "style", 1123684643) ? dommy.attrs.style_str.call(null, v) : v);
        return G__17583
      }
    }else {
      return null
    }
  };
  var set_attr_BANG___4 = function() {
    var G__17590__delegate = function(elem, k, v, kvs) {
      if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, kvs))) {
      }else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "kvs", "kvs", -1640424927, null)))))].join(""));
      }
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17584_17591 = cljs.core.seq.call(null, cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([k, v], true), cljs.core.partition.call(null, 2, kvs)));
      var chunk__17585_17592 = null;
      var count__17586_17593 = 0;
      var i__17587_17594 = 0;
      while(true) {
        if(i__17587_17594 < count__17586_17593) {
          var vec__17588_17595 = cljs.core._nth.call(null, chunk__17585_17592, i__17587_17594);
          var k_17596__$1 = cljs.core.nth.call(null, vec__17588_17595, 0, null);
          var v_17597__$1 = cljs.core.nth.call(null, vec__17588_17595, 1, null);
          set_attr_BANG_.call(null, elem__$1, k_17596__$1, v_17597__$1);
          var G__17598 = seq__17584_17591;
          var G__17599 = chunk__17585_17592;
          var G__17600 = count__17586_17593;
          var G__17601 = i__17587_17594 + 1;
          seq__17584_17591 = G__17598;
          chunk__17585_17592 = G__17599;
          count__17586_17593 = G__17600;
          i__17587_17594 = G__17601;
          continue
        }else {
          var temp__4092__auto___17602 = cljs.core.seq.call(null, seq__17584_17591);
          if(temp__4092__auto___17602) {
            var seq__17584_17603__$1 = temp__4092__auto___17602;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17584_17603__$1)) {
              var c__3844__auto___17604 = cljs.core.chunk_first.call(null, seq__17584_17603__$1);
              var G__17605 = cljs.core.chunk_rest.call(null, seq__17584_17603__$1);
              var G__17606 = c__3844__auto___17604;
              var G__17607 = cljs.core.count.call(null, c__3844__auto___17604);
              var G__17608 = 0;
              seq__17584_17591 = G__17605;
              chunk__17585_17592 = G__17606;
              count__17586_17593 = G__17607;
              i__17587_17594 = G__17608;
              continue
            }else {
              var vec__17589_17609 = cljs.core.first.call(null, seq__17584_17603__$1);
              var k_17610__$1 = cljs.core.nth.call(null, vec__17589_17609, 0, null);
              var v_17611__$1 = cljs.core.nth.call(null, vec__17589_17609, 1, null);
              set_attr_BANG_.call(null, elem__$1, k_17610__$1, v_17611__$1);
              var G__17612 = cljs.core.next.call(null, seq__17584_17603__$1);
              var G__17613 = null;
              var G__17614 = 0;
              var G__17615 = 0;
              seq__17584_17591 = G__17612;
              chunk__17585_17592 = G__17613;
              count__17586_17593 = G__17614;
              i__17587_17594 = G__17615;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17590 = function(elem, k, v, var_args) {
      var kvs = null;
      if(arguments.length > 3) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__17590__delegate.call(this, elem, k, v, kvs)
    };
    G__17590.cljs$lang$maxFixedArity = 3;
    G__17590.cljs$lang$applyTo = function(arglist__17616) {
      var elem = cljs.core.first(arglist__17616);
      arglist__17616 = cljs.core.next(arglist__17616);
      var k = cljs.core.first(arglist__17616);
      arglist__17616 = cljs.core.next(arglist__17616);
      var v = cljs.core.first(arglist__17616);
      var kvs = cljs.core.rest(arglist__17616);
      return G__17590__delegate(elem, k, v, kvs)
    };
    G__17590.cljs$core$IFn$_invoke$arity$variadic = G__17590__delegate;
    return G__17590
  }();
  set_attr_BANG_ = function(elem, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 2:
        return set_attr_BANG___2.call(this, elem, k);
      case 3:
        return set_attr_BANG___3.call(this, elem, k, v);
      default:
        return set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic(elem, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  set_attr_BANG_.cljs$lang$maxFixedArity = 3;
  set_attr_BANG_.cljs$lang$applyTo = set_attr_BANG___4.cljs$lang$applyTo;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = set_attr_BANG___2;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = set_attr_BANG___3;
  set_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = set_attr_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return set_attr_BANG_
}();
dommy.attrs.remove_attr_BANG_ = function() {
  var remove_attr_BANG_ = null;
  var remove_attr_BANG___2 = function(elem, k) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([new cljs.core.Keyword(null, "class", "class", 1108647146), null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), null], true).call(null, k))) {
      elem__$1.className = ""
    }else {
      elem__$1.removeAttribute(cljs.core.name.call(null, k))
    }
    return elem__$1
  };
  var remove_attr_BANG___3 = function() {
    var G__17625__delegate = function(elem, k, ks) {
      var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
      var seq__17621_17626 = cljs.core.seq.call(null, cljs.core.cons.call(null, k, ks));
      var chunk__17622_17627 = null;
      var count__17623_17628 = 0;
      var i__17624_17629 = 0;
      while(true) {
        if(i__17624_17629 < count__17623_17628) {
          var k_17630__$1 = cljs.core._nth.call(null, chunk__17622_17627, i__17624_17629);
          remove_attr_BANG_.call(null, elem__$1, k_17630__$1);
          var G__17631 = seq__17621_17626;
          var G__17632 = chunk__17622_17627;
          var G__17633 = count__17623_17628;
          var G__17634 = i__17624_17629 + 1;
          seq__17621_17626 = G__17631;
          chunk__17622_17627 = G__17632;
          count__17623_17628 = G__17633;
          i__17624_17629 = G__17634;
          continue
        }else {
          var temp__4092__auto___17635 = cljs.core.seq.call(null, seq__17621_17626);
          if(temp__4092__auto___17635) {
            var seq__17621_17636__$1 = temp__4092__auto___17635;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__17621_17636__$1)) {
              var c__3844__auto___17637 = cljs.core.chunk_first.call(null, seq__17621_17636__$1);
              var G__17638 = cljs.core.chunk_rest.call(null, seq__17621_17636__$1);
              var G__17639 = c__3844__auto___17637;
              var G__17640 = cljs.core.count.call(null, c__3844__auto___17637);
              var G__17641 = 0;
              seq__17621_17626 = G__17638;
              chunk__17622_17627 = G__17639;
              count__17623_17628 = G__17640;
              i__17624_17629 = G__17641;
              continue
            }else {
              var k_17642__$1 = cljs.core.first.call(null, seq__17621_17636__$1);
              remove_attr_BANG_.call(null, elem__$1, k_17642__$1);
              var G__17643 = cljs.core.next.call(null, seq__17621_17636__$1);
              var G__17644 = null;
              var G__17645 = 0;
              var G__17646 = 0;
              seq__17621_17626 = G__17643;
              chunk__17622_17627 = G__17644;
              count__17623_17628 = G__17645;
              i__17624_17629 = G__17646;
              continue
            }
          }else {
          }
        }
        break
      }
      return elem__$1
    };
    var G__17625 = function(elem, k, var_args) {
      var ks = null;
      if(arguments.length > 2) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__17625__delegate.call(this, elem, k, ks)
    };
    G__17625.cljs$lang$maxFixedArity = 2;
    G__17625.cljs$lang$applyTo = function(arglist__17647) {
      var elem = cljs.core.first(arglist__17647);
      arglist__17647 = cljs.core.next(arglist__17647);
      var k = cljs.core.first(arglist__17647);
      var ks = cljs.core.rest(arglist__17647);
      return G__17625__delegate(elem, k, ks)
    };
    G__17625.cljs$core$IFn$_invoke$arity$variadic = G__17625__delegate;
    return G__17625
  }();
  remove_attr_BANG_ = function(elem, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return remove_attr_BANG___2.call(this, elem, k);
      default:
        return remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic(elem, k, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_attr_BANG_.cljs$lang$maxFixedArity = 2;
  remove_attr_BANG_.cljs$lang$applyTo = remove_attr_BANG___3.cljs$lang$applyTo;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = remove_attr_BANG___2;
  remove_attr_BANG_.cljs$core$IFn$_invoke$arity$variadic = remove_attr_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return remove_attr_BANG_
}();
dommy.attrs.attr = function attr(elem, k) {
  if(cljs.core.truth_(k)) {
    return dommy.template.__GT_node_like.call(null, elem).getAttribute(cljs.core.name.call(null, k))
  }else {
    return null
  }
};
dommy.attrs.toggle_attr_BANG_ = function() {
  var toggle_attr_BANG_ = null;
  var toggle_attr_BANG___2 = function(elem, k) {
    return toggle_attr_BANG_.call(null, elem, k, cljs.core.boolean$.call(null, dommy.attrs.attr.call(null, elem, k)))
  };
  var toggle_attr_BANG___3 = function(elem, k, add_QMARK_) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    if(add_QMARK_) {
      return dommy.attrs.set_attr_BANG_.call(null, elem__$1, k)
    }else {
      return dommy.attrs.remove_attr_BANG_.call(null, elem__$1, k)
    }
  };
  toggle_attr_BANG_ = function(elem, k, add_QMARK_) {
    switch(arguments.length) {
      case 2:
        return toggle_attr_BANG___2.call(this, elem, k);
      case 3:
        return toggle_attr_BANG___3.call(this, elem, k, add_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_attr_BANG___2;
  toggle_attr_BANG_.cljs$core$IFn$_invoke$arity$3 = toggle_attr_BANG___3;
  return toggle_attr_BANG_
}();
dommy.attrs.hidden_QMARK_ = function hidden_QMARK_(elem) {
  return"none" === dommy.template.__GT_node_like.call(null, elem).style.display
};
dommy.attrs.toggle_BANG_ = function() {
  var toggle_BANG_ = null;
  var toggle_BANG___1 = function(elem) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    toggle_BANG_.call(null, elem__$1, dommy.attrs.hidden_QMARK_.call(null, elem__$1));
    return elem__$1
  };
  var toggle_BANG___2 = function(elem, show_QMARK_) {
    var G__17649 = dommy.template.__GT_node_like.call(null, elem);
    G__17649.style.display = show_QMARK_ ? "" : "none";
    return G__17649
  };
  toggle_BANG_ = function(elem, show_QMARK_) {
    switch(arguments.length) {
      case 1:
        return toggle_BANG___1.call(this, elem);
      case 2:
        return toggle_BANG___2.call(this, elem, show_QMARK_)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  toggle_BANG_.cljs$core$IFn$_invoke$arity$1 = toggle_BANG___1;
  toggle_BANG_.cljs$core$IFn$_invoke$arity$2 = toggle_BANG___2;
  return toggle_BANG_
}();
dommy.attrs.hide_BANG_ = function hide_BANG_(elem) {
  var G__17651 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__17651, false);
  return G__17651
};
dommy.attrs.show_BANG_ = function show_BANG_(elem) {
  var G__17653 = dommy.template.__GT_node_like.call(null, elem);
  dommy.attrs.toggle_BANG_.call(null, G__17653, true);
  return G__17653
};
dommy.attrs.bounding_client_rect = function bounding_client_rect(elem) {
  return cljs.core.js__GT_clj.call(null, function() {
    var G__17655 = dommy.template.__GT_node_like.call(null, elem).getBoundingClientRect();
    G__17655["constructor"] = Object;
    return G__17655
  }(), new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 4191781672), true)
};
dommy.attrs.scroll_into_view = function scroll_into_view(elem, align_with_top_QMARK_) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var top = (new cljs.core.Keyword(null, "top", "top", 1014019271)).cljs$core$IFn$_invoke$arity$1(dommy.attrs.bounding_client_rect.call(null, elem__$1));
  if(window.innerHeight < top + elem__$1.offsetHeight) {
    return elem__$1.scrollIntoView(align_with_top_QMARK_)
  }else {
    return null
  }
};
goog.provide("koans.meditations.refs");
goog.require("cljs.core");
koans.meditations.refs.koans = cljs.core.list("In the beginning, there was a word", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "deref", "deref", -1545057749, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null))), "You can get the word more succinctly, but it's the same", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 
new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null))), "You can be the change you wish to see in the world.", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "do", "do", -1640528316, null), cljs.core.list(new cljs.core.Symbol(null, 
"dosync", "dosync", 1328440159, null), cljs.core.list(new cljs.core.Symbol(null, "ref-set", "ref-set", -557129247, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), "better")), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null)))), "Alter where you need not replace", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), new cljs.core.Keyword(null, 
"__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol(null, "let", "let", -1640424492, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "exclamator", "exclamator", -1473352553, null), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", -1640528255, null), cljs.core.PersistentVector.fromArray([new cljs.core.Symbol(null, "x", "x", -1640531407, null)], true), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1640417302, null), new cljs.core.Symbol(null, "x", "x", 
-1640531407, null), "!"))], true), cljs.core.list(new cljs.core.Symbol(null, "dosync", "dosync", 1328440159, null), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), new cljs.core.Symbol(null, "exclamator", "exclamator", -1473352553, null)), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), new cljs.core.Symbol(null, 
"exclamator", "exclamator", -1473352553, null)), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), new cljs.core.Symbol(null, "exclamator", "exclamator", -1473352553, null))), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null)))), "Don't forget to do your work in a transaction!", 
cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 0, cljs.core.list(new cljs.core.Symbol(null, "do", "do", -1640528316, null), new cljs.core.Keyword(null, "__", "__", 1013907282), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", -564909588, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null)))), "Functions passed to alter may depend on the data in the ref", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", 
-1640531466, null), 20, cljs.core.list(new cljs.core.Symbol(null, "do", "do", -1640528316, null), cljs.core.list(new cljs.core.Symbol(null, "dosync", "dosync", 1328440159, null), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), new cljs.core.Keyword(null, "___", "___", 1013998577))))), "Two worlds are better than one", cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1640531466, null), 
cljs.core.PersistentVector.fromArray(["Real Jerry", "Bizarro Jerry"], true), cljs.core.list(new cljs.core.Symbol(null, "do", "do", -1640528316, null), cljs.core.list(new cljs.core.Symbol(null, "dosync", "dosync", 1328440159, null), cljs.core.list(new cljs.core.Symbol(null, "ref-set", "ref-set", -557129247, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), cljs.core.PersistentArrayMap.EMPTY), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), 
new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), new cljs.core.Keyword(null, "jerry", "jerry", 1114919568), "Real Jerry"), cljs.core.list(new cljs.core.Symbol(null, "alter", "alter", -1547617841, null), new cljs.core.Symbol(null, "bizarro-world", "bizarro-world", 623649343, null), new cljs.core.Symbol(null, "assoc", "assoc", -1547409970, null), new cljs.core.Keyword(null, "jerry", "jerry", 1114919568), "Bizarro Jerry"), 
new cljs.core.Keyword(null, "__", "__", 1013907282)))));
koans.meditations.refs.fns = cljs.core.PersistentVector.fromArray([cljs.core.list(new cljs.core.Symbol(null, "def", "def", -1640432194, null), new cljs.core.Symbol(null, "the-world", "the-world", 856985839, null), cljs.core.list(new cljs.core.Symbol(null, "ref", "ref", -1640418740, null), "hello")), cljs.core.list(new cljs.core.Symbol(null, "def", "def", -1640432194, null), new cljs.core.Symbol(null, "bizarro-world", "bizarro-world", 623649343, null), cljs.core.list(new cljs.core.Symbol(null, "ref", 
"ref", -1640418740, null), cljs.core.PersistentArrayMap.EMPTY))], true);
goog.provide("dommy.utils");
goog.require("cljs.core");
dommy.utils.dissoc_in = function dissoc_in(m, p__14832) {
  var vec__14834 = p__14832;
  var k = cljs.core.nth.call(null, vec__14834, 0, null);
  var ks = cljs.core.nthnext.call(null, vec__14834, 1);
  if(cljs.core.truth_(m)) {
    var temp__4090__auto__ = function() {
      var and__3119__auto__ = ks;
      if(cljs.core.truth_(and__3119__auto__)) {
        return dissoc_in.call(null, m.call(null, k), ks)
      }else {
        return and__3119__auto__
      }
    }();
    if(cljs.core.truth_(temp__4090__auto__)) {
      var res = temp__4090__auto__;
      return cljs.core.assoc.call(null, m, k, res)
    }else {
      var res = cljs.core.dissoc.call(null, m, k);
      if(cljs.core.empty_QMARK_.call(null, res)) {
        return null
      }else {
        return res
      }
    }
  }else {
    return null
  }
};
dommy.utils.__GT_Array = function __GT_Array(array_like) {
  return Array.prototype.slice.call(array_like)
};
goog.provide("dommy.template");
goog.require("cljs.core");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.template._PLUS_svg_ns_PLUS_ = "http://www.w3.org/2000/svg";
dommy.template._PLUS_svg_tags_PLUS_ = cljs.core.PersistentHashSet.fromArray(["svg", null, "line", null], true);
dommy.template.PElement = {};
dommy.template._elem = function _elem(this$) {
  if(function() {
    var and__3119__auto__ = this$;
    if(and__3119__auto__) {
      return this$.dommy$template$PElement$_elem$arity$1
    }else {
      return and__3119__auto__
    }
  }()) {
    return this$.dommy$template$PElement$_elem$arity$1(this$)
  }else {
    var x__3723__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3128__auto__ = dommy.template._elem[goog.typeOf(x__3723__auto__)];
      if(or__3128__auto__) {
        return or__3128__auto__
      }else {
        var or__3128__auto____$1 = dommy.template._elem["_"];
        if(or__3128__auto____$1) {
          return or__3128__auto____$1
        }else {
          throw cljs.core.missing_protocol.call(null, "PElement.-elem", this$);
        }
      }
    }().call(null, this$)
  }
};
dommy.template.next_css_index = function next_css_index(s, start_idx) {
  var id_idx = s.indexOf("#", start_idx);
  var class_idx = s.indexOf(".", start_idx);
  var idx = Math.min(id_idx, class_idx);
  if(idx < 0) {
    return Math.max(id_idx, class_idx)
  }else {
    return idx
  }
};
dommy.template.base_element = function base_element(node_key) {
  var node_str = cljs.core.name.call(null, node_key);
  var base_idx = dommy.template.next_css_index.call(null, node_str, 0);
  var tag = base_idx > 0 ? node_str.substring(0, base_idx) : base_idx === 0 ? "div" : new cljs.core.Keyword(null, "else", "else", 1017020587) ? node_str : null;
  var node = cljs.core.truth_(dommy.template._PLUS_svg_tags_PLUS_.call(null, tag)) ? document.createElementNS(dommy.template._PLUS_svg_ns_PLUS_, tag) : document.createElement(tag);
  if(base_idx >= 0) {
    var str_17222 = node_str.substring(base_idx);
    while(true) {
      var next_idx_17223 = dommy.template.next_css_index.call(null, str_17222, 1);
      var frag_17224 = next_idx_17223 >= 0 ? str_17222.substring(0, next_idx_17223) : str_17222;
      var G__17221_17225 = frag_17224.charAt(0);
      if(cljs.core._EQ_.call(null, "#", G__17221_17225)) {
        node.setAttribute("id", frag_17224.substring(1))
      }else {
        if(cljs.core._EQ_.call(null, ".", G__17221_17225)) {
          dommy.attrs.add_class_BANG_.call(null, node, frag_17224.substring(1))
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(frag_17224.charAt(0))].join(""));
          }else {
          }
        }
      }
      if(next_idx_17223 >= 0) {
        var G__17226 = str_17222.substring(next_idx_17223);
        str_17222 = G__17226;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return node
};
dommy.template.throw_unable_to_make_node = function throw_unable_to_make_node(node_data) {
  throw[cljs.core.str("Don't know how to make node from: "), cljs.core.str(cljs.core.pr_str.call(null, node_data))].join("");
};
dommy.template.__GT_document_fragment = function() {
  var __GT_document_fragment = null;
  var __GT_document_fragment__1 = function(data) {
    return __GT_document_fragment.call(null, document.createDocumentFragment(), data)
  };
  var __GT_document_fragment__2 = function(result_frag, data) {
    if(function() {
      var G__17232 = data;
      if(G__17232) {
        var bit__3746__auto__ = null;
        if(cljs.core.truth_(function() {
          var or__3128__auto__ = bit__3746__auto__;
          if(cljs.core.truth_(or__3128__auto__)) {
            return or__3128__auto__
          }else {
            return G__17232.dommy$template$PElement$
          }
        }())) {
          return true
        }else {
          if(!G__17232.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17232)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17232)
      }
    }()) {
      result_frag.appendChild(dommy.template._elem.call(null, data));
      return result_frag
    }else {
      if(cljs.core.seq_QMARK_.call(null, data)) {
        var seq__17233_17237 = cljs.core.seq.call(null, data);
        var chunk__17234_17238 = null;
        var count__17235_17239 = 0;
        var i__17236_17240 = 0;
        while(true) {
          if(i__17236_17240 < count__17235_17239) {
            var child_17241 = cljs.core._nth.call(null, chunk__17234_17238, i__17236_17240);
            __GT_document_fragment.call(null, result_frag, child_17241);
            var G__17242 = seq__17233_17237;
            var G__17243 = chunk__17234_17238;
            var G__17244 = count__17235_17239;
            var G__17245 = i__17236_17240 + 1;
            seq__17233_17237 = G__17242;
            chunk__17234_17238 = G__17243;
            count__17235_17239 = G__17244;
            i__17236_17240 = G__17245;
            continue
          }else {
            var temp__4092__auto___17246 = cljs.core.seq.call(null, seq__17233_17237);
            if(temp__4092__auto___17246) {
              var seq__17233_17247__$1 = temp__4092__auto___17246;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17233_17247__$1)) {
                var c__3844__auto___17248 = cljs.core.chunk_first.call(null, seq__17233_17247__$1);
                var G__17249 = cljs.core.chunk_rest.call(null, seq__17233_17247__$1);
                var G__17250 = c__3844__auto___17248;
                var G__17251 = cljs.core.count.call(null, c__3844__auto___17248);
                var G__17252 = 0;
                seq__17233_17237 = G__17249;
                chunk__17234_17238 = G__17250;
                count__17235_17239 = G__17251;
                i__17236_17240 = G__17252;
                continue
              }else {
                var child_17253 = cljs.core.first.call(null, seq__17233_17247__$1);
                __GT_document_fragment.call(null, result_frag, child_17253);
                var G__17254 = cljs.core.next.call(null, seq__17233_17247__$1);
                var G__17255 = null;
                var G__17256 = 0;
                var G__17257 = 0;
                seq__17233_17237 = G__17254;
                chunk__17234_17238 = G__17255;
                count__17235_17239 = G__17256;
                i__17236_17240 = G__17257;
                continue
              }
            }else {
            }
          }
          break
        }
        return result_frag
      }else {
        if(data == null) {
          return result_frag
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            return dommy.template.throw_unable_to_make_node.call(null, data)
          }else {
            return null
          }
        }
      }
    }
  };
  __GT_document_fragment = function(result_frag, data) {
    switch(arguments.length) {
      case 1:
        return __GT_document_fragment__1.call(this, result_frag);
      case 2:
        return __GT_document_fragment__2.call(this, result_frag, data)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$1 = __GT_document_fragment__1;
  __GT_document_fragment.cljs$core$IFn$_invoke$arity$2 = __GT_document_fragment__2;
  return __GT_document_fragment
}();
dommy.template.__GT_node_like = function __GT_node_like(data) {
  if(function() {
    var G__17259 = data;
    if(G__17259) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17259.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17259.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17259)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17259)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.__GT_document_fragment.call(null, data)
  }
};
dommy.template.compound_element = function compound_element(p__17260) {
  var vec__17280 = p__17260;
  var tag_name = cljs.core.nth.call(null, vec__17280, 0, null);
  var maybe_attrs = cljs.core.nth.call(null, vec__17280, 1, null);
  var children = cljs.core.nthnext.call(null, vec__17280, 2);
  var n = dommy.template.base_element.call(null, tag_name);
  var attrs = cljs.core.map_QMARK_.call(null, maybe_attrs) && !function() {
    var G__17282 = maybe_attrs;
    if(G__17282) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17282.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17282.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17282)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17282)
    }
  }() ? maybe_attrs : null;
  var children__$1 = cljs.core.truth_(attrs) ? children : cljs.core.cons.call(null, maybe_attrs, children);
  var seq__17283_17299 = cljs.core.seq.call(null, attrs);
  var chunk__17284_17300 = null;
  var count__17285_17301 = 0;
  var i__17286_17302 = 0;
  while(true) {
    if(i__17286_17302 < count__17285_17301) {
      var vec__17287_17303 = cljs.core._nth.call(null, chunk__17284_17300, i__17286_17302);
      var k_17304 = cljs.core.nth.call(null, vec__17287_17303, 0, null);
      var v_17305 = cljs.core.nth.call(null, vec__17287_17303, 1, null);
      var G__17288_17306 = k_17304;
      if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__17288_17306)) {
        var seq__17289_17307 = cljs.core.seq.call(null, v_17305);
        var chunk__17290_17308 = null;
        var count__17291_17309 = 0;
        var i__17292_17310 = 0;
        while(true) {
          if(i__17292_17310 < count__17291_17309) {
            var c_17311 = cljs.core._nth.call(null, chunk__17290_17308, i__17292_17310);
            dommy.attrs.add_class_BANG_.call(null, n, c_17311);
            var G__17312 = seq__17289_17307;
            var G__17313 = chunk__17290_17308;
            var G__17314 = count__17291_17309;
            var G__17315 = i__17292_17310 + 1;
            seq__17289_17307 = G__17312;
            chunk__17290_17308 = G__17313;
            count__17291_17309 = G__17314;
            i__17292_17310 = G__17315;
            continue
          }else {
            var temp__4092__auto___17316 = cljs.core.seq.call(null, seq__17289_17307);
            if(temp__4092__auto___17316) {
              var seq__17289_17317__$1 = temp__4092__auto___17316;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17289_17317__$1)) {
                var c__3844__auto___17318 = cljs.core.chunk_first.call(null, seq__17289_17317__$1);
                var G__17319 = cljs.core.chunk_rest.call(null, seq__17289_17317__$1);
                var G__17320 = c__3844__auto___17318;
                var G__17321 = cljs.core.count.call(null, c__3844__auto___17318);
                var G__17322 = 0;
                seq__17289_17307 = G__17319;
                chunk__17290_17308 = G__17320;
                count__17291_17309 = G__17321;
                i__17292_17310 = G__17322;
                continue
              }else {
                var c_17323 = cljs.core.first.call(null, seq__17289_17317__$1);
                dommy.attrs.add_class_BANG_.call(null, n, c_17323);
                var G__17324 = cljs.core.next.call(null, seq__17289_17317__$1);
                var G__17325 = null;
                var G__17326 = 0;
                var G__17327 = 0;
                seq__17289_17307 = G__17324;
                chunk__17290_17308 = G__17325;
                count__17291_17309 = G__17326;
                i__17292_17310 = G__17327;
                continue
              }
            }else {
            }
          }
          break
        }
      }else {
        if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__17288_17306)) {
          dommy.attrs.add_class_BANG_.call(null, n, v_17305)
        }else {
          if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
            dommy.attrs.set_attr_BANG_.call(null, n, k_17304, v_17305)
          }else {
          }
        }
      }
      var G__17328 = seq__17283_17299;
      var G__17329 = chunk__17284_17300;
      var G__17330 = count__17285_17301;
      var G__17331 = i__17286_17302 + 1;
      seq__17283_17299 = G__17328;
      chunk__17284_17300 = G__17329;
      count__17285_17301 = G__17330;
      i__17286_17302 = G__17331;
      continue
    }else {
      var temp__4092__auto___17332 = cljs.core.seq.call(null, seq__17283_17299);
      if(temp__4092__auto___17332) {
        var seq__17283_17333__$1 = temp__4092__auto___17332;
        if(cljs.core.chunked_seq_QMARK_.call(null, seq__17283_17333__$1)) {
          var c__3844__auto___17334 = cljs.core.chunk_first.call(null, seq__17283_17333__$1);
          var G__17335 = cljs.core.chunk_rest.call(null, seq__17283_17333__$1);
          var G__17336 = c__3844__auto___17334;
          var G__17337 = cljs.core.count.call(null, c__3844__auto___17334);
          var G__17338 = 0;
          seq__17283_17299 = G__17335;
          chunk__17284_17300 = G__17336;
          count__17285_17301 = G__17337;
          i__17286_17302 = G__17338;
          continue
        }else {
          var vec__17293_17339 = cljs.core.first.call(null, seq__17283_17333__$1);
          var k_17340 = cljs.core.nth.call(null, vec__17293_17339, 0, null);
          var v_17341 = cljs.core.nth.call(null, vec__17293_17339, 1, null);
          var G__17294_17342 = k_17340;
          if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "classes", "classes", 1867525016), G__17294_17342)) {
            var seq__17295_17343 = cljs.core.seq.call(null, v_17341);
            var chunk__17296_17344 = null;
            var count__17297_17345 = 0;
            var i__17298_17346 = 0;
            while(true) {
              if(i__17298_17346 < count__17297_17345) {
                var c_17347 = cljs.core._nth.call(null, chunk__17296_17344, i__17298_17346);
                dommy.attrs.add_class_BANG_.call(null, n, c_17347);
                var G__17348 = seq__17295_17343;
                var G__17349 = chunk__17296_17344;
                var G__17350 = count__17297_17345;
                var G__17351 = i__17298_17346 + 1;
                seq__17295_17343 = G__17348;
                chunk__17296_17344 = G__17349;
                count__17297_17345 = G__17350;
                i__17298_17346 = G__17351;
                continue
              }else {
                var temp__4092__auto___17352__$1 = cljs.core.seq.call(null, seq__17295_17343);
                if(temp__4092__auto___17352__$1) {
                  var seq__17295_17353__$1 = temp__4092__auto___17352__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__17295_17353__$1)) {
                    var c__3844__auto___17354 = cljs.core.chunk_first.call(null, seq__17295_17353__$1);
                    var G__17355 = cljs.core.chunk_rest.call(null, seq__17295_17353__$1);
                    var G__17356 = c__3844__auto___17354;
                    var G__17357 = cljs.core.count.call(null, c__3844__auto___17354);
                    var G__17358 = 0;
                    seq__17295_17343 = G__17355;
                    chunk__17296_17344 = G__17356;
                    count__17297_17345 = G__17357;
                    i__17298_17346 = G__17358;
                    continue
                  }else {
                    var c_17359 = cljs.core.first.call(null, seq__17295_17353__$1);
                    dommy.attrs.add_class_BANG_.call(null, n, c_17359);
                    var G__17360 = cljs.core.next.call(null, seq__17295_17353__$1);
                    var G__17361 = null;
                    var G__17362 = 0;
                    var G__17363 = 0;
                    seq__17295_17343 = G__17360;
                    chunk__17296_17344 = G__17361;
                    count__17297_17345 = G__17362;
                    i__17298_17346 = G__17363;
                    continue
                  }
                }else {
                }
              }
              break
            }
          }else {
            if(cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "class", "class", 1108647146), G__17294_17342)) {
              dommy.attrs.add_class_BANG_.call(null, n, v_17341)
            }else {
              if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
                dommy.attrs.set_attr_BANG_.call(null, n, k_17340, v_17341)
              }else {
              }
            }
          }
          var G__17364 = cljs.core.next.call(null, seq__17283_17333__$1);
          var G__17365 = null;
          var G__17366 = 0;
          var G__17367 = 0;
          seq__17283_17299 = G__17364;
          chunk__17284_17300 = G__17365;
          count__17285_17301 = G__17366;
          i__17286_17302 = G__17367;
          continue
        }
      }else {
      }
    }
    break
  }
  n.appendChild(dommy.template.__GT_node_like.call(null, children__$1));
  return n
};
dommy.template.PElement["string"] = true;
dommy.template._elem["string"] = function(this$) {
  if(this$ instanceof cljs.core.Keyword) {
    return dommy.template.base_element.call(null, this$)
  }else {
    return document.createTextNode([cljs.core.str(this$)].join(""))
  }
};
dommy.template.PElement["number"] = true;
dommy.template._elem["number"] = function(this$) {
  return document.createTextNode([cljs.core.str(this$)].join(""))
};
cljs.core.PersistentVector.prototype.dommy$template$PElement$ = true;
cljs.core.PersistentVector.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return dommy.template.compound_element.call(null, this$__$1)
};
SVGElement.prototype.dommy$template$PElement$ = true;
SVGElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
Document.prototype.dommy$template$PElement$ = true;
Document.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
Text.prototype.dommy$template$PElement$ = true;
Text.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
DocumentFragment.prototype.dommy$template$PElement$ = true;
DocumentFragment.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
HTMLElement.prototype.dommy$template$PElement$ = true;
HTMLElement.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
  var this$__$1 = this;
  return this$__$1
};
try {
  Window.prototype.dommy$template$PElement$ = true;
  Window.prototype.dommy$template$PElement$_elem$arity$1 = function(this$) {
    var this$__$1 = this;
    return this$__$1
  }
}catch(e17368) {
  if(e17368 instanceof ReferenceError) {
    var __17369 = e17368;
    console.log("PElement: js/Window not defined by browser, skipping it... (running on phantomjs?)")
  }else {
    if(new cljs.core.Keyword(null, "else", "else", 1017020587)) {
      throw e17368;
    }else {
    }
  }
}
dommy.template.node = function node(data) {
  if(function() {
    var G__17371 = data;
    if(G__17371) {
      var bit__3746__auto__ = null;
      if(cljs.core.truth_(function() {
        var or__3128__auto__ = bit__3746__auto__;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return G__17371.dommy$template$PElement$
        }
      }())) {
        return true
      }else {
        if(!G__17371.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17371)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.native_satisfies_QMARK_.call(null, dommy.template.PElement, G__17371)
    }
  }()) {
    return dommy.template._elem.call(null, data)
  }else {
    return dommy.template.throw_unable_to_make_node.call(null, data)
  }
};
dommy.template.html__GT_nodes = function html__GT_nodes(html) {
  var parent = document.createElement("div");
  parent.insertAdjacentHTML("beforeend", html);
  return cljs.core.seq.call(null, Array.prototype.slice.call(parent.childNodes))
};
goog.provide("dommy.core");
goog.require("cljs.core");
goog.require("dommy.template");
goog.require("dommy.template");
goog.require("dommy.attrs");
goog.require("dommy.attrs");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("clojure.string");
goog.require("clojure.string");
dommy.core.has_class_QMARK_ = dommy.attrs.has_class_QMARK_;
dommy.core.add_class_BANG_ = dommy.attrs.add_class_BANG_;
dommy.core.remove_class_BANG_ = dommy.attrs.remove_class_BANG_;
dommy.core.toggle_class_BANG_ = dommy.attrs.toggle_class_BANG_;
dommy.core.set_attr_BANG_ = dommy.attrs.set_attr_BANG_;
dommy.core.set_style_BANG_ = dommy.attrs.set_style_BANG_;
dommy.core.set_px_BANG_ = dommy.attrs.set_px_BANG_;
dommy.core.px = dommy.attrs.px;
dommy.core.style_str = dommy.attrs.style_str;
dommy.core.style = dommy.attrs.style;
dommy.core.remove_attr_BANG_ = dommy.attrs.remove_attr_BANG_;
dommy.core.toggle_attr_BANG_ = dommy.attrs.toggle_attr_BANG_;
dommy.core.attr = dommy.attrs.attr;
dommy.core.hidden_QMARK_ = dommy.attrs.hidden_QMARK_;
dommy.core.toggle_BANG_ = dommy.attrs.toggle_BANG_;
dommy.core.hide_BANG_ = dommy.attrs.hide_BANG_;
dommy.core.show_BANG_ = dommy.attrs.show_BANG_;
dommy.core.bounding_client_rect = dommy.attrs.bounding_client_rect;
dommy.core.scroll_into_view = dommy.attrs.scroll_into_view;
dommy.core.dissoc_in = dommy.utils.dissoc_in;
dommy.core.__GT_Array = dommy.utils.__GT_Array;
dommy.core.set_html_BANG_ = function set_html_BANG_(elem, html) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.innerHTML = html;
  return elem__$1
};
dommy.core.html = function html(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML
};
dommy.core.set_text_BANG_ = function set_text_BANG_(elem, text) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var prop = cljs.core.truth_(elem__$1.textContent) ? "textContent" : "innerText";
  elem__$1[prop] = text;
  return elem__$1
};
dommy.core.text = function text(elem) {
  var or__3128__auto__ = elem.textContent;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return elem.innerText
  }
};
dommy.core.value = function value(elem) {
  return dommy.template.__GT_node_like.call(null, elem).value
};
dommy.core.set_value_BANG_ = function set_value_BANG_(elem, value) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  elem__$1.value = value;
  return elem__$1
};
dommy.core.append_BANG_ = function() {
  var append_BANG_ = null;
  var append_BANG___2 = function(parent, child) {
    var G__16816 = dommy.template.__GT_node_like.call(null, parent);
    G__16816.appendChild(dommy.template.__GT_node_like.call(null, child));
    return G__16816
  };
  var append_BANG___3 = function() {
    var G__16821__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__16817_16822 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__16818_16823 = null;
      var count__16819_16824 = 0;
      var i__16820_16825 = 0;
      while(true) {
        if(i__16820_16825 < count__16819_16824) {
          var c_16826 = cljs.core._nth.call(null, chunk__16818_16823, i__16820_16825);
          append_BANG_.call(null, parent__$1, c_16826);
          var G__16827 = seq__16817_16822;
          var G__16828 = chunk__16818_16823;
          var G__16829 = count__16819_16824;
          var G__16830 = i__16820_16825 + 1;
          seq__16817_16822 = G__16827;
          chunk__16818_16823 = G__16828;
          count__16819_16824 = G__16829;
          i__16820_16825 = G__16830;
          continue
        }else {
          var temp__4092__auto___16831 = cljs.core.seq.call(null, seq__16817_16822);
          if(temp__4092__auto___16831) {
            var seq__16817_16832__$1 = temp__4092__auto___16831;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__16817_16832__$1)) {
              var c__3844__auto___16833 = cljs.core.chunk_first.call(null, seq__16817_16832__$1);
              var G__16834 = cljs.core.chunk_rest.call(null, seq__16817_16832__$1);
              var G__16835 = c__3844__auto___16833;
              var G__16836 = cljs.core.count.call(null, c__3844__auto___16833);
              var G__16837 = 0;
              seq__16817_16822 = G__16834;
              chunk__16818_16823 = G__16835;
              count__16819_16824 = G__16836;
              i__16820_16825 = G__16837;
              continue
            }else {
              var c_16838 = cljs.core.first.call(null, seq__16817_16832__$1);
              append_BANG_.call(null, parent__$1, c_16838);
              var G__16839 = cljs.core.next.call(null, seq__16817_16832__$1);
              var G__16840 = null;
              var G__16841 = 0;
              var G__16842 = 0;
              seq__16817_16822 = G__16839;
              chunk__16818_16823 = G__16840;
              count__16819_16824 = G__16841;
              i__16820_16825 = G__16842;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__16821 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16821__delegate.call(this, parent, child, more_children)
    };
    G__16821.cljs$lang$maxFixedArity = 2;
    G__16821.cljs$lang$applyTo = function(arglist__16843) {
      var parent = cljs.core.first(arglist__16843);
      arglist__16843 = cljs.core.next(arglist__16843);
      var child = cljs.core.first(arglist__16843);
      var more_children = cljs.core.rest(arglist__16843);
      return G__16821__delegate(parent, child, more_children)
    };
    G__16821.cljs$core$IFn$_invoke$arity$variadic = G__16821__delegate;
    return G__16821
  }();
  append_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return append_BANG___2.call(this, parent, child);
      default:
        return append_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  append_BANG_.cljs$lang$maxFixedArity = 2;
  append_BANG_.cljs$lang$applyTo = append_BANG___3.cljs$lang$applyTo;
  append_BANG_.cljs$core$IFn$_invoke$arity$2 = append_BANG___2;
  append_BANG_.cljs$core$IFn$_invoke$arity$variadic = append_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return append_BANG_
}();
dommy.core.prepend_BANG_ = function() {
  var prepend_BANG_ = null;
  var prepend_BANG___2 = function(parent, child) {
    var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
    return parent__$1.insertBefore(dommy.template.__GT_node_like.call(null, child), parent__$1.firstChild)
  };
  var prepend_BANG___3 = function() {
    var G__16852__delegate = function(parent, child, more_children) {
      var parent__$1 = dommy.template.__GT_node_like.call(null, parent);
      var seq__16848_16853 = cljs.core.seq.call(null, cljs.core.cons.call(null, child, more_children));
      var chunk__16849_16854 = null;
      var count__16850_16855 = 0;
      var i__16851_16856 = 0;
      while(true) {
        if(i__16851_16856 < count__16850_16855) {
          var c_16857 = cljs.core._nth.call(null, chunk__16849_16854, i__16851_16856);
          prepend_BANG_.call(null, parent__$1, c_16857);
          var G__16858 = seq__16848_16853;
          var G__16859 = chunk__16849_16854;
          var G__16860 = count__16850_16855;
          var G__16861 = i__16851_16856 + 1;
          seq__16848_16853 = G__16858;
          chunk__16849_16854 = G__16859;
          count__16850_16855 = G__16860;
          i__16851_16856 = G__16861;
          continue
        }else {
          var temp__4092__auto___16862 = cljs.core.seq.call(null, seq__16848_16853);
          if(temp__4092__auto___16862) {
            var seq__16848_16863__$1 = temp__4092__auto___16862;
            if(cljs.core.chunked_seq_QMARK_.call(null, seq__16848_16863__$1)) {
              var c__3844__auto___16864 = cljs.core.chunk_first.call(null, seq__16848_16863__$1);
              var G__16865 = cljs.core.chunk_rest.call(null, seq__16848_16863__$1);
              var G__16866 = c__3844__auto___16864;
              var G__16867 = cljs.core.count.call(null, c__3844__auto___16864);
              var G__16868 = 0;
              seq__16848_16853 = G__16865;
              chunk__16849_16854 = G__16866;
              count__16850_16855 = G__16867;
              i__16851_16856 = G__16868;
              continue
            }else {
              var c_16869 = cljs.core.first.call(null, seq__16848_16863__$1);
              prepend_BANG_.call(null, parent__$1, c_16869);
              var G__16870 = cljs.core.next.call(null, seq__16848_16863__$1);
              var G__16871 = null;
              var G__16872 = 0;
              var G__16873 = 0;
              seq__16848_16853 = G__16870;
              chunk__16849_16854 = G__16871;
              count__16850_16855 = G__16872;
              i__16851_16856 = G__16873;
              continue
            }
          }else {
          }
        }
        break
      }
      return parent__$1
    };
    var G__16852 = function(parent, child, var_args) {
      var more_children = null;
      if(arguments.length > 2) {
        more_children = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__16852__delegate.call(this, parent, child, more_children)
    };
    G__16852.cljs$lang$maxFixedArity = 2;
    G__16852.cljs$lang$applyTo = function(arglist__16874) {
      var parent = cljs.core.first(arglist__16874);
      arglist__16874 = cljs.core.next(arglist__16874);
      var child = cljs.core.first(arglist__16874);
      var more_children = cljs.core.rest(arglist__16874);
      return G__16852__delegate(parent, child, more_children)
    };
    G__16852.cljs$core$IFn$_invoke$arity$variadic = G__16852__delegate;
    return G__16852
  }();
  prepend_BANG_ = function(parent, child, var_args) {
    var more_children = var_args;
    switch(arguments.length) {
      case 2:
        return prepend_BANG___2.call(this, parent, child);
      default:
        return prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic(parent, child, cljs.core.array_seq(arguments, 2))
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prepend_BANG_.cljs$lang$maxFixedArity = 2;
  prepend_BANG_.cljs$lang$applyTo = prepend_BANG___3.cljs$lang$applyTo;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$2 = prepend_BANG___2;
  prepend_BANG_.cljs$core$IFn$_invoke$arity$variadic = prepend_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return prepend_BANG_
}();
dommy.core.insert_before_BANG_ = function insert_before_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  if(cljs.core.truth_(other__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "other", "other", -1534461751, null))))].join(""));
  }
  other__$1.parentNode.insertBefore(actual_node, other__$1);
  return actual_node
};
dommy.core.insert_after_BANG_ = function insert_after_BANG_(elem, other) {
  var actual_node = dommy.template.__GT_node_like.call(null, elem);
  var other__$1 = dommy.template.__GT_node_like.call(null, other);
  var parent = other__$1.parentNode;
  var temp__4090__auto___16875 = other__$1.nextSibling;
  if(cljs.core.truth_(temp__4090__auto___16875)) {
    var next_16876 = temp__4090__auto___16875;
    parent.insertBefore(actual_node, next_16876)
  }else {
    parent.appendChild(actual_node)
  }
  return actual_node
};
dommy.core.replace_BANG_ = function replace_BANG_(elem, new$) {
  var new$__$1 = dommy.template.__GT_node_like.call(null, new$);
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  if(cljs.core.truth_(elem__$1.parentNode)) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, ".-parentNode", ".-parentNode", 499016324, null), new cljs.core.Symbol(null, "elem", "elem", -1637415608, null))))].join(""));
  }
  elem__$1.parentNode.replaceChild(new$__$1, elem__$1);
  return new$__$1
};
dommy.core.replace_contents_BANG_ = function replace_contents_BANG_(parent, node_like) {
  var G__16878 = dommy.template.__GT_node_like.call(null, parent);
  G__16878.innerHTML = "";
  dommy.core.append_BANG_.call(null, G__16878, node_like);
  return G__16878
};
dommy.core.remove_BANG_ = function remove_BANG_(elem) {
  var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
  var G__16880 = elem__$1.parentNode;
  G__16880.removeChild(elem__$1);
  return G__16880
};
dommy.core.clear_BANG_ = function clear_BANG_(elem) {
  return dommy.template.__GT_node_like.call(null, elem).innerHTML = ""
};
dommy.core.selector = function selector(data) {
  if(cljs.core.coll_QMARK_.call(null, data)) {
    return clojure.string.join.call(null, " ", cljs.core.map.call(null, selector, data))
  }else {
    if(typeof data === "string" || data instanceof cljs.core.Keyword) {
      return cljs.core.name.call(null, data)
    }else {
      return null
    }
  }
};
dommy.core.selector_map = function selector_map(template, key_selectors_map) {
  var container = dommy.template.__GT_node_like.call(null, template);
  if(!cljs.core.contains_QMARK_.call(null, key_selectors_map, new cljs.core.Keyword(null, "container", "container", 602947571))) {
  }else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", -1640422260, null), cljs.core.list(new cljs.core.Symbol(null, "contains?", "contains?", -2051487815, null), new cljs.core.Symbol(null, "key-selectors-map", "key-selectors-map", 19054414, null), new cljs.core.Keyword(null, "container", "container", 602947571)))))].join(""));
  }
  return cljs.core.merge.call(null, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "container", "container", 602947571), container], true), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__16886) {
    var vec__16887 = p__16886;
    var k = cljs.core.nth.call(null, vec__16887, 0, null);
    var v = cljs.core.nth.call(null, vec__16887, 1, null);
    return cljs.core.PersistentVector.fromArray([k, cljs.core.truth_((new cljs.core.Keyword(null, "live", "live", 1017226334)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v))) ? function() {
      if(typeof dommy.core.t16888 !== "undefined") {
      }else {
        dommy.core.t16888 = function(v, k, vec__16887, p__16886, container, key_selectors_map, template, selector_map, meta16889) {
          this.v = v;
          this.k = k;
          this.vec__16887 = vec__16887;
          this.p__16886 = p__16886;
          this.container = container;
          this.key_selectors_map = key_selectors_map;
          this.template = template;
          this.selector_map = selector_map;
          this.meta16889 = meta16889;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 425984
        };
        dommy.core.t16888.cljs$lang$type = true;
        dommy.core.t16888.cljs$lang$ctorStr = "dommy.core/t16888";
        dommy.core.t16888.cljs$lang$ctorPrWriter = function(this__3664__auto__, writer__3665__auto__, opt__3666__auto__) {
          return cljs.core._write.call(null, writer__3665__auto__, "dommy.core/t16888")
        };
        dommy.core.t16888.prototype.cljs$core$IDeref$_deref$arity$1 = function(this$) {
          var self__ = this;
          var this$__$1 = this;
          return dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, self__.container).querySelectorAll(dommy.core.selector.call(null, self__.v)))
        };
        dommy.core.t16888.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16890) {
          var self__ = this;
          var _16890__$1 = this;
          return self__.meta16889
        };
        dommy.core.t16888.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16890, meta16889__$1) {
          var self__ = this;
          var _16890__$1 = this;
          return new dommy.core.t16888(self__.v, self__.k, self__.vec__16887, self__.p__16886, self__.container, self__.key_selectors_map, self__.template, self__.selector_map, meta16889__$1)
        };
        dommy.core.__GT_t16888 = function __GT_t16888(v__$1, k__$1, vec__16887__$1, p__16886__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta16889) {
          return new dommy.core.t16888(v__$1, k__$1, vec__16887__$1, p__16886__$1, container__$1, key_selectors_map__$1, template__$1, selector_map__$1, meta16889)
        }
      }
      return new dommy.core.t16888(v, k, vec__16887, p__16886, container, key_selectors_map, template, selector_map, null)
    }() : dommy.template.__GT_node_like.call(null, container).querySelector(dommy.core.selector.call(null, v))], true)
  }, key_selectors_map)))
};
dommy.core.ancestor_nodes = function ancestor_nodes(elem) {
  return cljs.core.take_while.call(null, cljs.core.identity, cljs.core.iterate.call(null, function(p1__16891_SHARP_) {
    return p1__16891_SHARP_.parentNode
  }, dommy.template.__GT_node_like.call(null, elem)))
};
dommy.core.matches_pred = function() {
  var matches_pred = null;
  var matches_pred__1 = function(selector) {
    return matches_pred.call(null, document, selector)
  };
  var matches_pred__2 = function(base, selector) {
    var matches = dommy.utils.__GT_Array.call(null, dommy.template.__GT_node_like.call(null, dommy.template.__GT_node_like.call(null, base)).querySelectorAll(dommy.core.selector.call(null, selector)));
    return function(elem) {
      return matches.indexOf(elem) >= 0
    }
  };
  matches_pred = function(base, selector) {
    switch(arguments.length) {
      case 1:
        return matches_pred__1.call(this, base);
      case 2:
        return matches_pred__2.call(this, base, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  matches_pred.cljs$core$IFn$_invoke$arity$1 = matches_pred__1;
  matches_pred.cljs$core$IFn$_invoke$arity$2 = matches_pred__2;
  return matches_pred
}();
dommy.core.closest = function() {
  var closest = null;
  var closest__2 = function(elem, selector) {
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, selector), dommy.core.ancestor_nodes.call(null, dommy.template.__GT_node_like.call(null, elem))))
  };
  var closest__3 = function(base, elem, selector) {
    var base__$1 = dommy.template.__GT_node_like.call(null, base);
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return cljs.core.first.call(null, cljs.core.filter.call(null, dommy.core.matches_pred.call(null, base__$1, selector), cljs.core.take_while.call(null, function(p1__16892_SHARP_) {
      return!(p1__16892_SHARP_ === base__$1)
    }, dommy.core.ancestor_nodes.call(null, elem__$1))))
  };
  closest = function(base, elem, selector) {
    switch(arguments.length) {
      case 2:
        return closest__2.call(this, base, elem);
      case 3:
        return closest__3.call(this, base, elem, selector)
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  closest.cljs$core$IFn$_invoke$arity$2 = closest__2;
  closest.cljs$core$IFn$_invoke$arity$3 = closest__3;
  return closest
}();
dommy.core.descendant_QMARK_ = function descendant_QMARK_(descendant, ancestor) {
  var descendant__$1 = dommy.template.__GT_node_like.call(null, descendant);
  var ancestor__$1 = dommy.template.__GT_node_like.call(null, ancestor);
  if(cljs.core.truth_(ancestor__$1.contains)) {
    return ancestor__$1.contains(descendant__$1)
  }else {
    if(cljs.core.truth_(ancestor__$1.compareDocumentPosition)) {
      return(ancestor__$1.compareDocumentPosition(descendant__$1) & 1 << 4) != 0
    }else {
      return null
    }
  }
};
dommy.core.special_listener_makers = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__16893) {
  var vec__16894 = p__16893;
  var special_mouse_event = cljs.core.nth.call(null, vec__16894, 0, null);
  var real_mouse_event = cljs.core.nth.call(null, vec__16894, 1, null);
  return cljs.core.PersistentVector.fromArray([special_mouse_event, cljs.core.PersistentArrayMap.fromArray([real_mouse_event, function(f) {
    return function(event) {
      var related_target = event.relatedTarget;
      var listener_target = function() {
        var or__3128__auto__ = event.selectedTarget;
        if(cljs.core.truth_(or__3128__auto__)) {
          return or__3128__auto__
        }else {
          return event.currentTarget
        }
      }();
      if(cljs.core.truth_(function() {
        var and__3119__auto__ = related_target;
        if(cljs.core.truth_(and__3119__auto__)) {
          return dommy.core.descendant_QMARK_.call(null, related_target, listener_target)
        }else {
          return and__3119__auto__
        }
      }())) {
        return null
      }else {
        return f.call(null, event)
      }
    }
  }], true)], true)
}, cljs.core.PersistentArrayMap.fromArray([new cljs.core.Keyword(null, "mouseenter", "mouseenter", 2027084997), new cljs.core.Keyword(null, "mouseover", "mouseover", 1601081963), new cljs.core.Keyword(null, "mouseleave", "mouseleave", 2033263780), new cljs.core.Keyword(null, "mouseout", "mouseout", 894298107)], true)));
dommy.core.live_listener = function live_listener(elem, selector, f) {
  return function(event) {
    var selected_target = dommy.core.closest.call(null, dommy.template.__GT_node_like.call(null, elem), event.target, selector);
    if(cljs.core.truth_(function() {
      var and__3119__auto__ = selected_target;
      if(cljs.core.truth_(and__3119__auto__)) {
        return cljs.core.not.call(null, dommy.core.attr.call(null, selected_target, new cljs.core.Keyword(null, "disabled", "disabled", 1284845038)))
      }else {
        return and__3119__auto__
      }
    }())) {
      event.selectedTarget = selected_target;
      return f.call(null, event)
    }else {
      return null
    }
  }
};
dommy.core.event_listeners = function event_listeners(elem) {
  var or__3128__auto__ = dommy.template.__GT_node_like.call(null, elem).dommyEventListeners;
  if(cljs.core.truth_(or__3128__auto__)) {
    return or__3128__auto__
  }else {
    return cljs.core.PersistentArrayMap.EMPTY
  }
};
dommy.core.update_event_listeners_BANG_ = function() {
  var update_event_listeners_BANG___delegate = function(elem, f, args) {
    var elem__$1 = dommy.template.__GT_node_like.call(null, elem);
    return elem__$1.dommyEventListeners = cljs.core.apply.call(null, f, dommy.core.event_listeners.call(null, elem__$1), args)
  };
  var update_event_listeners_BANG_ = function(elem, f, var_args) {
    var args = null;
    if(arguments.length > 2) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return update_event_listeners_BANG___delegate.call(this, elem, f, args)
  };
  update_event_listeners_BANG_.cljs$lang$maxFixedArity = 2;
  update_event_listeners_BANG_.cljs$lang$applyTo = function(arglist__16895) {
    var elem = cljs.core.first(arglist__16895);
    arglist__16895 = cljs.core.next(arglist__16895);
    var f = cljs.core.first(arglist__16895);
    var args = cljs.core.rest(arglist__16895);
    return update_event_listeners_BANG___delegate(elem, f, args)
  };
  update_event_listeners_BANG_.cljs$core$IFn$_invoke$arity$variadic = update_event_listeners_BANG___delegate;
  return update_event_listeners_BANG_
}();
dommy.core.elem_and_selector = function elem_and_selector(elem_sel) {
  if(cljs.core.sequential_QMARK_.call(null, elem_sel)) {
    return cljs.core.juxt.call(null, function(p1__16896_SHARP_) {
      return dommy.template.__GT_node_like.call(null, cljs.core.first.call(null, p1__16896_SHARP_))
    }, cljs.core.rest).call(null, elem_sel)
  }else {
    return cljs.core.PersistentVector.fromArray([dommy.template.__GT_node_like.call(null, elem_sel), null], true)
  }
};
dommy.core.listen_BANG_ = function() {
  var listen_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__16920_16943 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_16944 = cljs.core.nth.call(null, vec__16920_16943, 0, null);
    var selector_16945 = cljs.core.nth.call(null, vec__16920_16943, 1, null);
    var seq__16921_16946 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__16928_16947 = null;
    var count__16929_16948 = 0;
    var i__16930_16949 = 0;
    while(true) {
      if(i__16930_16949 < count__16929_16948) {
        var vec__16937_16950 = cljs.core._nth.call(null, chunk__16928_16947, i__16930_16949);
        var orig_type_16951 = cljs.core.nth.call(null, vec__16937_16950, 0, null);
        var f_16952 = cljs.core.nth.call(null, vec__16937_16950, 1, null);
        var seq__16931_16953 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16951, cljs.core.PersistentArrayMap.fromArray([orig_type_16951, cljs.core.identity], true)));
        var chunk__16933_16954 = null;
        var count__16934_16955 = 0;
        var i__16935_16956 = 0;
        while(true) {
          if(i__16935_16956 < count__16934_16955) {
            var vec__16938_16957 = cljs.core._nth.call(null, chunk__16933_16954, i__16935_16956);
            var actual_type_16958 = cljs.core.nth.call(null, vec__16938_16957, 0, null);
            var factory_16959 = cljs.core.nth.call(null, vec__16938_16957, 1, null);
            var canonical_f_16960 = (cljs.core.truth_(selector_16945) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16944, selector_16945) : cljs.core.identity).call(null, factory_16959.call(null, f_16952));
            dommy.core.update_event_listeners_BANG_.call(null, elem_16944, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16945, actual_type_16958, f_16952], true), canonical_f_16960);
            if(cljs.core.truth_(elem_16944.addEventListener)) {
              elem_16944.addEventListener(cljs.core.name.call(null, actual_type_16958), canonical_f_16960)
            }else {
              elem_16944.attachEvent(cljs.core.name.call(null, actual_type_16958), canonical_f_16960)
            }
            var G__16961 = seq__16931_16953;
            var G__16962 = chunk__16933_16954;
            var G__16963 = count__16934_16955;
            var G__16964 = i__16935_16956 + 1;
            seq__16931_16953 = G__16961;
            chunk__16933_16954 = G__16962;
            count__16934_16955 = G__16963;
            i__16935_16956 = G__16964;
            continue
          }else {
            var temp__4092__auto___16965 = cljs.core.seq.call(null, seq__16931_16953);
            if(temp__4092__auto___16965) {
              var seq__16931_16966__$1 = temp__4092__auto___16965;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__16931_16966__$1)) {
                var c__3844__auto___16967 = cljs.core.chunk_first.call(null, seq__16931_16966__$1);
                var G__16968 = cljs.core.chunk_rest.call(null, seq__16931_16966__$1);
                var G__16969 = c__3844__auto___16967;
                var G__16970 = cljs.core.count.call(null, c__3844__auto___16967);
                var G__16971 = 0;
                seq__16931_16953 = G__16968;
                chunk__16933_16954 = G__16969;
                count__16934_16955 = G__16970;
                i__16935_16956 = G__16971;
                continue
              }else {
                var vec__16939_16972 = cljs.core.first.call(null, seq__16931_16966__$1);
                var actual_type_16973 = cljs.core.nth.call(null, vec__16939_16972, 0, null);
                var factory_16974 = cljs.core.nth.call(null, vec__16939_16972, 1, null);
                var canonical_f_16975 = (cljs.core.truth_(selector_16945) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16944, selector_16945) : cljs.core.identity).call(null, factory_16974.call(null, f_16952));
                dommy.core.update_event_listeners_BANG_.call(null, elem_16944, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16945, actual_type_16973, f_16952], true), canonical_f_16975);
                if(cljs.core.truth_(elem_16944.addEventListener)) {
                  elem_16944.addEventListener(cljs.core.name.call(null, actual_type_16973), canonical_f_16975)
                }else {
                  elem_16944.attachEvent(cljs.core.name.call(null, actual_type_16973), canonical_f_16975)
                }
                var G__16976 = cljs.core.next.call(null, seq__16931_16966__$1);
                var G__16977 = null;
                var G__16978 = 0;
                var G__16979 = 0;
                seq__16931_16953 = G__16976;
                chunk__16933_16954 = G__16977;
                count__16934_16955 = G__16978;
                i__16935_16956 = G__16979;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__16980 = seq__16921_16946;
        var G__16981 = chunk__16928_16947;
        var G__16982 = count__16929_16948;
        var G__16983 = i__16930_16949 + 1;
        seq__16921_16946 = G__16980;
        chunk__16928_16947 = G__16981;
        count__16929_16948 = G__16982;
        i__16930_16949 = G__16983;
        continue
      }else {
        var temp__4092__auto___16984 = cljs.core.seq.call(null, seq__16921_16946);
        if(temp__4092__auto___16984) {
          var seq__16921_16985__$1 = temp__4092__auto___16984;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__16921_16985__$1)) {
            var c__3844__auto___16986 = cljs.core.chunk_first.call(null, seq__16921_16985__$1);
            var G__16987 = cljs.core.chunk_rest.call(null, seq__16921_16985__$1);
            var G__16988 = c__3844__auto___16986;
            var G__16989 = cljs.core.count.call(null, c__3844__auto___16986);
            var G__16990 = 0;
            seq__16921_16946 = G__16987;
            chunk__16928_16947 = G__16988;
            count__16929_16948 = G__16989;
            i__16930_16949 = G__16990;
            continue
          }else {
            var vec__16940_16991 = cljs.core.first.call(null, seq__16921_16985__$1);
            var orig_type_16992 = cljs.core.nth.call(null, vec__16940_16991, 0, null);
            var f_16993 = cljs.core.nth.call(null, vec__16940_16991, 1, null);
            var seq__16922_16994 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_16992, cljs.core.PersistentArrayMap.fromArray([orig_type_16992, cljs.core.identity], true)));
            var chunk__16924_16995 = null;
            var count__16925_16996 = 0;
            var i__16926_16997 = 0;
            while(true) {
              if(i__16926_16997 < count__16925_16996) {
                var vec__16941_16998 = cljs.core._nth.call(null, chunk__16924_16995, i__16926_16997);
                var actual_type_16999 = cljs.core.nth.call(null, vec__16941_16998, 0, null);
                var factory_17000 = cljs.core.nth.call(null, vec__16941_16998, 1, null);
                var canonical_f_17001 = (cljs.core.truth_(selector_16945) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16944, selector_16945) : cljs.core.identity).call(null, factory_17000.call(null, f_16993));
                dommy.core.update_event_listeners_BANG_.call(null, elem_16944, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16945, actual_type_16999, f_16993], true), canonical_f_17001);
                if(cljs.core.truth_(elem_16944.addEventListener)) {
                  elem_16944.addEventListener(cljs.core.name.call(null, actual_type_16999), canonical_f_17001)
                }else {
                  elem_16944.attachEvent(cljs.core.name.call(null, actual_type_16999), canonical_f_17001)
                }
                var G__17002 = seq__16922_16994;
                var G__17003 = chunk__16924_16995;
                var G__17004 = count__16925_16996;
                var G__17005 = i__16926_16997 + 1;
                seq__16922_16994 = G__17002;
                chunk__16924_16995 = G__17003;
                count__16925_16996 = G__17004;
                i__16926_16997 = G__17005;
                continue
              }else {
                var temp__4092__auto___17006__$1 = cljs.core.seq.call(null, seq__16922_16994);
                if(temp__4092__auto___17006__$1) {
                  var seq__16922_17007__$1 = temp__4092__auto___17006__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__16922_17007__$1)) {
                    var c__3844__auto___17008 = cljs.core.chunk_first.call(null, seq__16922_17007__$1);
                    var G__17009 = cljs.core.chunk_rest.call(null, seq__16922_17007__$1);
                    var G__17010 = c__3844__auto___17008;
                    var G__17011 = cljs.core.count.call(null, c__3844__auto___17008);
                    var G__17012 = 0;
                    seq__16922_16994 = G__17009;
                    chunk__16924_16995 = G__17010;
                    count__16925_16996 = G__17011;
                    i__16926_16997 = G__17012;
                    continue
                  }else {
                    var vec__16942_17013 = cljs.core.first.call(null, seq__16922_17007__$1);
                    var actual_type_17014 = cljs.core.nth.call(null, vec__16942_17013, 0, null);
                    var factory_17015 = cljs.core.nth.call(null, vec__16942_17013, 1, null);
                    var canonical_f_17016 = (cljs.core.truth_(selector_16945) ? cljs.core.partial.call(null, dommy.core.live_listener, elem_16944, selector_16945) : cljs.core.identity).call(null, factory_17015.call(null, f_16993));
                    dommy.core.update_event_listeners_BANG_.call(null, elem_16944, cljs.core.assoc_in, cljs.core.PersistentVector.fromArray([selector_16945, actual_type_17014, f_16993], true), canonical_f_17016);
                    if(cljs.core.truth_(elem_16944.addEventListener)) {
                      elem_16944.addEventListener(cljs.core.name.call(null, actual_type_17014), canonical_f_17016)
                    }else {
                      elem_16944.attachEvent(cljs.core.name.call(null, actual_type_17014), canonical_f_17016)
                    }
                    var G__17017 = cljs.core.next.call(null, seq__16922_17007__$1);
                    var G__17018 = null;
                    var G__17019 = 0;
                    var G__17020 = 0;
                    seq__16922_16994 = G__17017;
                    chunk__16924_16995 = G__17018;
                    count__16925_16996 = G__17019;
                    i__16926_16997 = G__17020;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__17021 = cljs.core.next.call(null, seq__16921_16985__$1);
            var G__17022 = null;
            var G__17023 = 0;
            var G__17024 = 0;
            seq__16921_16946 = G__17021;
            chunk__16928_16947 = G__17022;
            count__16929_16948 = G__17023;
            i__16930_16949 = G__17024;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_BANG_.cljs$lang$maxFixedArity = 1;
  listen_BANG_.cljs$lang$applyTo = function(arglist__17025) {
    var elem_sel = cljs.core.first(arglist__17025);
    var type_fs = cljs.core.rest(arglist__17025);
    return listen_BANG___delegate(elem_sel, type_fs)
  };
  listen_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_BANG___delegate;
  return listen_BANG_
}();
dommy.core.unlisten_BANG_ = function() {
  var unlisten_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__17049_17072 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_17073 = cljs.core.nth.call(null, vec__17049_17072, 0, null);
    var selector_17074 = cljs.core.nth.call(null, vec__17049_17072, 1, null);
    var seq__17050_17075 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__17057_17076 = null;
    var count__17058_17077 = 0;
    var i__17059_17078 = 0;
    while(true) {
      if(i__17059_17078 < count__17058_17077) {
        var vec__17066_17079 = cljs.core._nth.call(null, chunk__17057_17076, i__17059_17078);
        var orig_type_17080 = cljs.core.nth.call(null, vec__17066_17079, 0, null);
        var f_17081 = cljs.core.nth.call(null, vec__17066_17079, 1, null);
        var seq__17060_17082 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_17080, cljs.core.PersistentArrayMap.fromArray([orig_type_17080, cljs.core.identity], true)));
        var chunk__17062_17083 = null;
        var count__17063_17084 = 0;
        var i__17064_17085 = 0;
        while(true) {
          if(i__17064_17085 < count__17063_17084) {
            var vec__17067_17086 = cljs.core._nth.call(null, chunk__17062_17083, i__17064_17085);
            var actual_type_17087 = cljs.core.nth.call(null, vec__17067_17086, 0, null);
            var __17088 = cljs.core.nth.call(null, vec__17067_17086, 1, null);
            var keys_17089 = cljs.core.PersistentVector.fromArray([selector_17074, actual_type_17087, f_17081], true);
            var canonical_f_17090 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_17073), keys_17089);
            dommy.core.update_event_listeners_BANG_.call(null, elem_17073, dommy.utils.dissoc_in, keys_17089);
            if(cljs.core.truth_(elem_17073.removeEventListener)) {
              elem_17073.removeEventListener(cljs.core.name.call(null, actual_type_17087), canonical_f_17090)
            }else {
              elem_17073.detachEvent(cljs.core.name.call(null, actual_type_17087), canonical_f_17090)
            }
            var G__17091 = seq__17060_17082;
            var G__17092 = chunk__17062_17083;
            var G__17093 = count__17063_17084;
            var G__17094 = i__17064_17085 + 1;
            seq__17060_17082 = G__17091;
            chunk__17062_17083 = G__17092;
            count__17063_17084 = G__17093;
            i__17064_17085 = G__17094;
            continue
          }else {
            var temp__4092__auto___17095 = cljs.core.seq.call(null, seq__17060_17082);
            if(temp__4092__auto___17095) {
              var seq__17060_17096__$1 = temp__4092__auto___17095;
              if(cljs.core.chunked_seq_QMARK_.call(null, seq__17060_17096__$1)) {
                var c__3844__auto___17097 = cljs.core.chunk_first.call(null, seq__17060_17096__$1);
                var G__17098 = cljs.core.chunk_rest.call(null, seq__17060_17096__$1);
                var G__17099 = c__3844__auto___17097;
                var G__17100 = cljs.core.count.call(null, c__3844__auto___17097);
                var G__17101 = 0;
                seq__17060_17082 = G__17098;
                chunk__17062_17083 = G__17099;
                count__17063_17084 = G__17100;
                i__17064_17085 = G__17101;
                continue
              }else {
                var vec__17068_17102 = cljs.core.first.call(null, seq__17060_17096__$1);
                var actual_type_17103 = cljs.core.nth.call(null, vec__17068_17102, 0, null);
                var __17104 = cljs.core.nth.call(null, vec__17068_17102, 1, null);
                var keys_17105 = cljs.core.PersistentVector.fromArray([selector_17074, actual_type_17103, f_17081], true);
                var canonical_f_17106 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_17073), keys_17105);
                dommy.core.update_event_listeners_BANG_.call(null, elem_17073, dommy.utils.dissoc_in, keys_17105);
                if(cljs.core.truth_(elem_17073.removeEventListener)) {
                  elem_17073.removeEventListener(cljs.core.name.call(null, actual_type_17103), canonical_f_17106)
                }else {
                  elem_17073.detachEvent(cljs.core.name.call(null, actual_type_17103), canonical_f_17106)
                }
                var G__17107 = cljs.core.next.call(null, seq__17060_17096__$1);
                var G__17108 = null;
                var G__17109 = 0;
                var G__17110 = 0;
                seq__17060_17082 = G__17107;
                chunk__17062_17083 = G__17108;
                count__17063_17084 = G__17109;
                i__17064_17085 = G__17110;
                continue
              }
            }else {
            }
          }
          break
        }
        var G__17111 = seq__17050_17075;
        var G__17112 = chunk__17057_17076;
        var G__17113 = count__17058_17077;
        var G__17114 = i__17059_17078 + 1;
        seq__17050_17075 = G__17111;
        chunk__17057_17076 = G__17112;
        count__17058_17077 = G__17113;
        i__17059_17078 = G__17114;
        continue
      }else {
        var temp__4092__auto___17115 = cljs.core.seq.call(null, seq__17050_17075);
        if(temp__4092__auto___17115) {
          var seq__17050_17116__$1 = temp__4092__auto___17115;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17050_17116__$1)) {
            var c__3844__auto___17117 = cljs.core.chunk_first.call(null, seq__17050_17116__$1);
            var G__17118 = cljs.core.chunk_rest.call(null, seq__17050_17116__$1);
            var G__17119 = c__3844__auto___17117;
            var G__17120 = cljs.core.count.call(null, c__3844__auto___17117);
            var G__17121 = 0;
            seq__17050_17075 = G__17118;
            chunk__17057_17076 = G__17119;
            count__17058_17077 = G__17120;
            i__17059_17078 = G__17121;
            continue
          }else {
            var vec__17069_17122 = cljs.core.first.call(null, seq__17050_17116__$1);
            var orig_type_17123 = cljs.core.nth.call(null, vec__17069_17122, 0, null);
            var f_17124 = cljs.core.nth.call(null, vec__17069_17122, 1, null);
            var seq__17051_17125 = cljs.core.seq.call(null, cljs.core.get.call(null, dommy.core.special_listener_makers, orig_type_17123, cljs.core.PersistentArrayMap.fromArray([orig_type_17123, cljs.core.identity], true)));
            var chunk__17053_17126 = null;
            var count__17054_17127 = 0;
            var i__17055_17128 = 0;
            while(true) {
              if(i__17055_17128 < count__17054_17127) {
                var vec__17070_17129 = cljs.core._nth.call(null, chunk__17053_17126, i__17055_17128);
                var actual_type_17130 = cljs.core.nth.call(null, vec__17070_17129, 0, null);
                var __17131 = cljs.core.nth.call(null, vec__17070_17129, 1, null);
                var keys_17132 = cljs.core.PersistentVector.fromArray([selector_17074, actual_type_17130, f_17124], true);
                var canonical_f_17133 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_17073), keys_17132);
                dommy.core.update_event_listeners_BANG_.call(null, elem_17073, dommy.utils.dissoc_in, keys_17132);
                if(cljs.core.truth_(elem_17073.removeEventListener)) {
                  elem_17073.removeEventListener(cljs.core.name.call(null, actual_type_17130), canonical_f_17133)
                }else {
                  elem_17073.detachEvent(cljs.core.name.call(null, actual_type_17130), canonical_f_17133)
                }
                var G__17134 = seq__17051_17125;
                var G__17135 = chunk__17053_17126;
                var G__17136 = count__17054_17127;
                var G__17137 = i__17055_17128 + 1;
                seq__17051_17125 = G__17134;
                chunk__17053_17126 = G__17135;
                count__17054_17127 = G__17136;
                i__17055_17128 = G__17137;
                continue
              }else {
                var temp__4092__auto___17138__$1 = cljs.core.seq.call(null, seq__17051_17125);
                if(temp__4092__auto___17138__$1) {
                  var seq__17051_17139__$1 = temp__4092__auto___17138__$1;
                  if(cljs.core.chunked_seq_QMARK_.call(null, seq__17051_17139__$1)) {
                    var c__3844__auto___17140 = cljs.core.chunk_first.call(null, seq__17051_17139__$1);
                    var G__17141 = cljs.core.chunk_rest.call(null, seq__17051_17139__$1);
                    var G__17142 = c__3844__auto___17140;
                    var G__17143 = cljs.core.count.call(null, c__3844__auto___17140);
                    var G__17144 = 0;
                    seq__17051_17125 = G__17141;
                    chunk__17053_17126 = G__17142;
                    count__17054_17127 = G__17143;
                    i__17055_17128 = G__17144;
                    continue
                  }else {
                    var vec__17071_17145 = cljs.core.first.call(null, seq__17051_17139__$1);
                    var actual_type_17146 = cljs.core.nth.call(null, vec__17071_17145, 0, null);
                    var __17147 = cljs.core.nth.call(null, vec__17071_17145, 1, null);
                    var keys_17148 = cljs.core.PersistentVector.fromArray([selector_17074, actual_type_17146, f_17124], true);
                    var canonical_f_17149 = cljs.core.get_in.call(null, dommy.core.event_listeners.call(null, elem_17073), keys_17148);
                    dommy.core.update_event_listeners_BANG_.call(null, elem_17073, dommy.utils.dissoc_in, keys_17148);
                    if(cljs.core.truth_(elem_17073.removeEventListener)) {
                      elem_17073.removeEventListener(cljs.core.name.call(null, actual_type_17146), canonical_f_17149)
                    }else {
                      elem_17073.detachEvent(cljs.core.name.call(null, actual_type_17146), canonical_f_17149)
                    }
                    var G__17150 = cljs.core.next.call(null, seq__17051_17139__$1);
                    var G__17151 = null;
                    var G__17152 = 0;
                    var G__17153 = 0;
                    seq__17051_17125 = G__17150;
                    chunk__17053_17126 = G__17151;
                    count__17054_17127 = G__17152;
                    i__17055_17128 = G__17153;
                    continue
                  }
                }else {
                }
              }
              break
            }
            var G__17154 = cljs.core.next.call(null, seq__17050_17116__$1);
            var G__17155 = null;
            var G__17156 = 0;
            var G__17157 = 0;
            seq__17050_17075 = G__17154;
            chunk__17057_17076 = G__17155;
            count__17058_17077 = G__17156;
            i__17059_17078 = G__17157;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var unlisten_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return unlisten_BANG___delegate.call(this, elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$lang$maxFixedArity = 1;
  unlisten_BANG_.cljs$lang$applyTo = function(arglist__17158) {
    var elem_sel = cljs.core.first(arglist__17158);
    var type_fs = cljs.core.rest(arglist__17158);
    return unlisten_BANG___delegate(elem_sel, type_fs)
  };
  unlisten_BANG_.cljs$core$IFn$_invoke$arity$variadic = unlisten_BANG___delegate;
  return unlisten_BANG_
}();
dommy.core.listen_once_BANG_ = function() {
  var listen_once_BANG___delegate = function(elem_sel, type_fs) {
    if(cljs.core.even_QMARK_.call(null, cljs.core.count.call(null, type_fs))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1543640034, null), cljs.core.list(new cljs.core.Symbol(null, "count", "count", -1545680184, null), new cljs.core.Symbol(null, "type-fs", "type-fs", 1801297401, null)))))].join(""));
    }
    var vec__17166_17173 = dommy.core.elem_and_selector.call(null, elem_sel);
    var elem_17174 = cljs.core.nth.call(null, vec__17166_17173, 0, null);
    var selector_17175 = cljs.core.nth.call(null, vec__17166_17173, 1, null);
    var seq__17167_17176 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, type_fs));
    var chunk__17168_17177 = null;
    var count__17169_17178 = 0;
    var i__17170_17179 = 0;
    while(true) {
      if(i__17170_17179 < count__17169_17178) {
        var vec__17171_17180 = cljs.core._nth.call(null, chunk__17168_17177, i__17170_17179);
        var type_17181 = cljs.core.nth.call(null, vec__17171_17180, 0, null);
        var f_17182 = cljs.core.nth.call(null, vec__17171_17180, 1, null);
        dommy.core.listen_BANG_.call(null, elem_sel, type_17181, function(seq__17167_17176, chunk__17168_17177, count__17169_17178, i__17170_17179, vec__17171_17180, type_17181, f_17182) {
          return function this_fn(e) {
            dommy.core.unlisten_BANG_.call(null, elem_sel, type_17181, this_fn);
            return f_17182.call(null, e)
          }
        }(seq__17167_17176, chunk__17168_17177, count__17169_17178, i__17170_17179, vec__17171_17180, type_17181, f_17182));
        var G__17183 = seq__17167_17176;
        var G__17184 = chunk__17168_17177;
        var G__17185 = count__17169_17178;
        var G__17186 = i__17170_17179 + 1;
        seq__17167_17176 = G__17183;
        chunk__17168_17177 = G__17184;
        count__17169_17178 = G__17185;
        i__17170_17179 = G__17186;
        continue
      }else {
        var temp__4092__auto___17187 = cljs.core.seq.call(null, seq__17167_17176);
        if(temp__4092__auto___17187) {
          var seq__17167_17188__$1 = temp__4092__auto___17187;
          if(cljs.core.chunked_seq_QMARK_.call(null, seq__17167_17188__$1)) {
            var c__3844__auto___17189 = cljs.core.chunk_first.call(null, seq__17167_17188__$1);
            var G__17190 = cljs.core.chunk_rest.call(null, seq__17167_17188__$1);
            var G__17191 = c__3844__auto___17189;
            var G__17192 = cljs.core.count.call(null, c__3844__auto___17189);
            var G__17193 = 0;
            seq__17167_17176 = G__17190;
            chunk__17168_17177 = G__17191;
            count__17169_17178 = G__17192;
            i__17170_17179 = G__17193;
            continue
          }else {
            var vec__17172_17194 = cljs.core.first.call(null, seq__17167_17188__$1);
            var type_17195 = cljs.core.nth.call(null, vec__17172_17194, 0, null);
            var f_17196 = cljs.core.nth.call(null, vec__17172_17194, 1, null);
            dommy.core.listen_BANG_.call(null, elem_sel, type_17195, function(seq__17167_17176, chunk__17168_17177, count__17169_17178, i__17170_17179, vec__17172_17194, type_17195, f_17196, seq__17167_17188__$1, temp__4092__auto___17187) {
              return function this_fn(e) {
                dommy.core.unlisten_BANG_.call(null, elem_sel, type_17195, this_fn);
                return f_17196.call(null, e)
              }
            }(seq__17167_17176, chunk__17168_17177, count__17169_17178, i__17170_17179, vec__17172_17194, type_17195, f_17196, seq__17167_17188__$1, temp__4092__auto___17187));
            var G__17197 = cljs.core.next.call(null, seq__17167_17188__$1);
            var G__17198 = null;
            var G__17199 = 0;
            var G__17200 = 0;
            seq__17167_17176 = G__17197;
            chunk__17168_17177 = G__17198;
            count__17169_17178 = G__17199;
            i__17170_17179 = G__17200;
            continue
          }
        }else {
        }
      }
      break
    }
    return elem_sel
  };
  var listen_once_BANG_ = function(elem_sel, var_args) {
    var type_fs = null;
    if(arguments.length > 1) {
      type_fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return listen_once_BANG___delegate.call(this, elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$lang$maxFixedArity = 1;
  listen_once_BANG_.cljs$lang$applyTo = function(arglist__17201) {
    var elem_sel = cljs.core.first(arglist__17201);
    var type_fs = cljs.core.rest(arglist__17201);
    return listen_once_BANG___delegate(elem_sel, type_fs)
  };
  listen_once_BANG_.cljs$core$IFn$_invoke$arity$variadic = listen_once_BANG___delegate;
  return listen_once_BANG_
}();
dommy.core.fire_BANG_ = function() {
  var fire_BANG___delegate = function(node, event_type, p__17202) {
    var vec__17204 = p__17202;
    var update_event_BANG_ = cljs.core.nth.call(null, vec__17204, 0, null);
    if(dommy.core.descendant_QMARK_.call(null, node, document.documentElement)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "descendant?", "descendant?", -1886221157, null), new cljs.core.Symbol(null, "node", "node", -1637144645, null), new cljs.core.Symbol("js", "document.documentElement", "js/document.documentElement", -1449696112, null))))].join(""));
    }
    var update_event_BANG___$1 = function() {
      var or__3128__auto__ = update_event_BANG_;
      if(cljs.core.truth_(or__3128__auto__)) {
        return or__3128__auto__
      }else {
        return cljs.core.identity
      }
    }();
    if(cljs.core.truth_(document.createEvent)) {
      var event = document.createEvent("Event");
      event.initEvent(cljs.core.name.call(null, event_type), true, true);
      return node.dispatchEvent(update_event_BANG___$1.call(null, event))
    }else {
      return node.fireEvent([cljs.core.str("on"), cljs.core.str(cljs.core.name.call(null, event_type))].join(""), update_event_BANG___$1.call(null, document.createEventObject()))
    }
  };
  var fire_BANG_ = function(node, event_type, var_args) {
    var p__17202 = null;
    if(arguments.length > 2) {
      p__17202 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return fire_BANG___delegate.call(this, node, event_type, p__17202)
  };
  fire_BANG_.cljs$lang$maxFixedArity = 2;
  fire_BANG_.cljs$lang$applyTo = function(arglist__17205) {
    var node = cljs.core.first(arglist__17205);
    arglist__17205 = cljs.core.next(arglist__17205);
    var event_type = cljs.core.first(arglist__17205);
    var p__17202 = cljs.core.rest(arglist__17205);
    return fire_BANG___delegate(node, event_type, p__17202)
  };
  fire_BANG_.cljs$core$IFn$_invoke$arity$variadic = fire_BANG___delegate;
  return fire_BANG_
}();
goog.provide("koans.core");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("dommy.utils");
goog.require("dommy.utils");
goog.require("koans.repl");
goog.require("dommy.core");
goog.require("cljs.core.async");
goog.require("koans.meditations");
goog.require("koans.meditations");
goog.require("koans.repl");
goog.require("dommy.core");
koans.core.hash_objects = function hash_objects() {
  return clojure.string.split.call(null, location.hash, "/")
};
koans.core.current_koan_index = function current_koan_index() {
  return new koans.meditations.KoanIndex(cljs.core.subs.call(null, cljs.core.first.call(null, koans.core.hash_objects.call(null)), 1), cljs.core.last.call(null, koans.core.hash_objects.call(null)) - 1)
};
koans.core.update_location_hash = function update_location_hash() {
  var koan = koans.meditations.next_koan_index.call(null, koans.core.current_koan_index.call(null));
  return location.hash = [cljs.core.str((new cljs.core.Keyword(null, "category", "category", 1064415344)).cljs$core$IFn$_invoke$arity$1(koan)), cljs.core.str("/"), cljs.core.str((new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koan) + 1)].join("")
};
koans.core.fadeout_time = 600;
koans.core.char_width = 14;
koans.core.enter_key = 13;
koans.core.fade_in_BANG_ = function fade_in_BANG_(elem) {
  return setTimeout(function() {
    return dommy.core.add_class_BANG_.call(null, elem, "unfaded")
  }, 0)
};
koans.core.input_with_code = function input_with_code(koan) {
  var dom12517 = document.createElement("div");
  if(cljs.core.truth_([cljs.core.str("koan koan-"), cljs.core.str((new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koans.core.current_koan_index.call(null)))].join(""))) {
    dom12517.className = [cljs.core.str(dom12517.className), cljs.core.str(" "), cljs.core.str([cljs.core.str("koan koan-"), cljs.core.str((new cljs.core.Keyword(null, "index", "index", 1114250308)).cljs$core$IFn$_invoke$arity$1(koans.core.current_koan_index.call(null)))].join(""))].join("").trim()
  }else {
  }
  dom12517.appendChild(function() {
    var dom12518 = document.createElement("div");
    if("description") {
      dom12518.className = [cljs.core.str(dom12518.className), cljs.core.str(" "), cljs.core.str("description")].join("").trim()
    }else {
    }
    dom12518.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "description", "description", 3584325486)).cljs$core$IFn$_invoke$arity$1(koan)));
    return dom12518
  }());
  dom12517.appendChild(function() {
    var dom12519 = document.createElement("div");
    if("code") {
      dom12519.className = [cljs.core.str(dom12519.className), cljs.core.str(" "), cljs.core.str("code")].join("").trim()
    }else {
    }
    dom12519.appendChild(function() {
      var dom12520 = document.createElement("span");
      if("shadow") {
        dom12520.className = [cljs.core.str(dom12520.className), cljs.core.str(" "), cljs.core.str("shadow")].join("").trim()
      }else {
      }
      return dom12520
    }());
    dom12519.appendChild(function() {
      var dom12521 = document.createElement("span");
      if("before") {
        dom12521.className = [cljs.core.str(dom12521.className), cljs.core.str(" "), cljs.core.str("before")].join("").trim()
      }else {
      }
      dom12521.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "before", "before", 3915985649)).cljs$core$IFn$_invoke$arity$1(koan)));
      return dom12521
    }());
    dom12519.appendChild(function() {
      var dom12522 = document.createElement("input");
      if("user-input") {
        dom12522.className = [cljs.core.str(dom12522.className), cljs.core.str(" "), cljs.core.str("user-input")].join("").trim()
      }else {
      }
      if("code") {
        dom12522.setAttribute("name", "code")
      }else {
      }
      return dom12522
    }());
    dom12519.appendChild(function() {
      var dom12523 = document.createElement("span");
      if("after") {
        dom12523.className = [cljs.core.str(dom12523.className), cljs.core.str(" "), cljs.core.str("after")].join("").trim()
      }else {
      }
      dom12523.appendChild(dommy.template.__GT_node_like.call(null, (new cljs.core.Keyword(null, "after", "after", 1106639182)).cljs$core$IFn$_invoke$arity$1(koan)));
      return dom12523
    }());
    return dom12519
  }());
  return dom12517
};
koans.core.error_message = function error_message() {
  var dom12525 = document.createElement("div");
  if("error") {
    dom12525.className = [cljs.core.str(dom12525.className), cljs.core.str(" "), cljs.core.str("error")].join("").trim()
  }else {
  }
  dom12525.appendChild(document.createTextNode("You have not yet attained enlightenment."));
  return dom12525
};
koans.core.input_string = function input_string() {
  var before = dommy.core.text.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("before"))[0]);
  var input = dommy.core.value.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByTagName("input"))[0]);
  var after = dommy.core.text.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("after"))[0]);
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, input))) {
    return""
  }else {
    return clojure.string.join.call(null, " ", cljs.core.PersistentVector.fromArray([before, input, after], true))
  }
};
koans.core.evaluate_koan = function evaluate_koan() {
  return koans.repl.eval.call(null, koans.core.input_string.call(null))
};
koans.core.resize_chan = cljs.core.async.chan.call(null);
koans.core.load_next_koan = function load_next_koan() {
  return koans.core.update_location_hash.call(null)
};
koans.core.remove_active_koan = function remove_active_koan() {
  var koan = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("koan"))[0];
  if(!(koan == null)) {
    dommy.core.remove_class_BANG_.call(null, koan, "unfaded");
    return setTimeout(function() {
      return dommy.core.remove_BANG_.call(null, koan)
    }, koans.core.fadeout_time)
  }else {
    return null
  }
};
koans.core.render_koan = function render_koan(koan) {
  koans.core.remove_active_koan.call(null);
  var elem = koans.core.input_with_code.call(null, koan);
  return setTimeout(function() {
    return dommy.core.append_BANG_.call(null, document.body, elem).call(null, koans.core.fade_in_BANG_.call(null, elem), function() {
      var input = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("user-input"))[0];
      input.focus();
      dommy.core.listen_BANG_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0], new cljs.core.Keyword(null, "click", "click", 1108654330), function(e) {
        return input.focus()
      });
      dommy.core.listen_BANG_.call(null, input, new cljs.core.Keyword(null, "keypress", "keypress", 1530666166), function(e) {
        if(cljs.core._EQ_.call(null, e.charCode, koans.core.enter_key)) {
          return koans.core.evaluate_koan.call(null)
        }else {
          return null
        }
      });
      return dommy.core.listen_BANG_.call(null, input, new cljs.core.Keyword(null, "input", "input", 1114262332), function(e) {
        var c__5380__auto__ = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function() {
          var f__5381__auto__ = function() {
            var switch__5330__auto__ = function(state_12537) {
              var state_val_12538 = state_12537[1];
              if(state_val_12538 === 2) {
                var inst_12535 = state_12537[2];
                var state_12537__$1 = state_12537;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12537__$1, inst_12535)
              }else {
                if(state_val_12538 === 1) {
                  var state_12537__$1 = state_12537;
                  return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_12537__$1, 2, koans.core.resize_chan, e)
                }else {
                  return null
                }
              }
            };
            return function(switch__5330__auto__) {
              return function() {
                var state_machine__5331__auto__ = null;
                var state_machine__5331__auto____0 = function() {
                  var statearr_12540 = new Array(5);
                  statearr_12540[0] = state_machine__5331__auto__;
                  statearr_12540[1] = 1;
                  return statearr_12540
                };
                var state_machine__5331__auto____1 = function(state_12537) {
                  while(true) {
                    var result__5332__auto__ = switch__5330__auto__.call(null, state_12537);
                    if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
                      continue
                    }else {
                      return result__5332__auto__
                    }
                    break
                  }
                };
                state_machine__5331__auto__ = function(state_12537) {
                  switch(arguments.length) {
                    case 0:
                      return state_machine__5331__auto____0.call(this);
                    case 1:
                      return state_machine__5331__auto____1.call(this, state_12537)
                  }
                  throw new Error("Invalid arity: " + arguments.length);
                };
                state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
                state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
                return state_machine__5331__auto__
              }()
            }(switch__5330__auto__)
          }();
          var state__5382__auto__ = function() {
            var statearr_12541 = f__5381__auto__.call(null);
            statearr_12541[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto__;
            return statearr_12541
          }();
          return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
        });
        return c__5380__auto__
      })
    }())
  }, koans.core.fadeout_time)
};
koans.core.render_current_koan = function render_current_koan() {
  if(cljs.core.truth_(koans.meditations.koan_exists_QMARK_.call(null, koans.core.current_koan_index.call(null)))) {
    var current_koan = koans.meditations.koan_for_index.call(null, koans.core.current_koan_index.call(null));
    return koans.core.render_koan.call(null, current_koan)
  }else {
    return koans.core.update_location_hash.call(null)
  }
};
koans.core.resize_input = function resize_input() {
  koans.core.remove_spaces = function remove_spaces(text) {
    return clojure.string.replace.call(null, text, " ", "_")
  };
  var input = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("user-input"))[0];
  var shadow = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("shadow"))[0];
  dommy.core.set_text_BANG_.call(null, shadow, koans.core.remove_spaces.call(null, dommy.core.value.call(null, input)));
  var shadow_width = shadow.getBoundingClientRect().width;
  var input_width = input.getBoundingClientRect().width;
  if(shadow_width >= input_width) {
    return dommy.core.set_px_BANG_.call(null, input, new cljs.core.Keyword(null, "width", "width", 1127031096), shadow_width + 4 * koans.core.char_width)
  }else {
    if(input_width - 4 * koans.core.char_width >= shadow_width) {
      return dommy.core.set_px_BANG_.call(null, input, new cljs.core.Keyword(null, "width", "width", 1127031096), shadow_width + 4 * koans.core.char_width)
    }else {
      return null
    }
  }
};
var c__5380__auto___12566 = cljs.core.async.chan.call(null, 1);
cljs.core.async.impl.dispatch.run.call(null, function() {
  var f__5381__auto__ = function() {
    var switch__5330__auto__ = function(state_12554) {
      var state_val_12555 = state_12554[1];
      if(state_val_12555 === 7) {
        var inst_12545 = state_12554[2];
        var inst_12546 = koans.core.resize_input.call(null);
        var state_12554__$1 = function() {
          var statearr_12556 = state_12554;
          statearr_12556[5] = inst_12545;
          statearr_12556[6] = inst_12546;
          return statearr_12556
        }();
        var statearr_12557_12567 = state_12554__$1;
        statearr_12557_12567[2] = null;
        statearr_12557_12567[1] = 2;
        return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
      }else {
        if(state_val_12555 === 6) {
          var inst_12550 = state_12554[2];
          var state_12554__$1 = state_12554;
          var statearr_12558_12568 = state_12554__$1;
          statearr_12558_12568[2] = inst_12550;
          statearr_12558_12568[1] = 3;
          return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
        }else {
          if(state_val_12555 === 5) {
            var state_12554__$1 = state_12554;
            var statearr_12559_12569 = state_12554__$1;
            statearr_12559_12569[2] = null;
            statearr_12559_12569[1] = 6;
            return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
          }else {
            if(state_val_12555 === 4) {
              var state_12554__$1 = state_12554;
              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_12554__$1, 7, koans.core.resize_chan)
            }else {
              if(state_val_12555 === 3) {
                var inst_12552 = state_12554[2];
                var state_12554__$1 = state_12554;
                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_12554__$1, inst_12552)
              }else {
                if(state_val_12555 === 2) {
                  var state_12554__$1 = state_12554;
                  if(true) {
                    var statearr_12560_12570 = state_12554__$1;
                    statearr_12560_12570[1] = 4
                  }else {
                    var statearr_12561_12571 = state_12554__$1;
                    statearr_12561_12571[1] = 5
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                }else {
                  if(state_val_12555 === 1) {
                    var state_12554__$1 = state_12554;
                    var statearr_12562_12572 = state_12554__$1;
                    statearr_12562_12572[2] = null;
                    statearr_12562_12572[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", 1122293407)
                  }else {
                    return null
                  }
                }
              }
            }
          }
        }
      }
    };
    return function(switch__5330__auto__) {
      return function() {
        var state_machine__5331__auto__ = null;
        var state_machine__5331__auto____0 = function() {
          var statearr_12564 = new Array(7);
          statearr_12564[0] = state_machine__5331__auto__;
          statearr_12564[1] = 1;
          return statearr_12564
        };
        var state_machine__5331__auto____1 = function(state_12554) {
          while(true) {
            var result__5332__auto__ = switch__5330__auto__.call(null, state_12554);
            if(cljs.core.keyword_identical_QMARK_.call(null, result__5332__auto__, new cljs.core.Keyword(null, "recur", "recur", 1122293407))) {
              continue
            }else {
              return result__5332__auto__
            }
            break
          }
        };
        state_machine__5331__auto__ = function(state_12554) {
          switch(arguments.length) {
            case 0:
              return state_machine__5331__auto____0.call(this);
            case 1:
              return state_machine__5331__auto____1.call(this, state_12554)
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__5331__auto____0;
        state_machine__5331__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__5331__auto____1;
        return state_machine__5331__auto__
      }()
    }(switch__5330__auto__)
  }();
  var state__5382__auto__ = function() {
    var statearr_12565 = f__5381__auto__.call(null);
    statearr_12565[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__5380__auto___12566;
    return statearr_12565
  }();
  return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__5382__auto__)
});
window.onload = function() {
  if(cljs.core.truth_(clojure.string.blank_QMARK_.call(null, location.hash))) {
    return location.hash = "equality/1"
  }else {
    return koans.core.render_current_koan.call(null)
  }
};
window.onhashchange = function() {
  return koans.core.render_current_koan.call(null)
};
koans.core.show_error_message = function show_error_message() {
  if(cljs.core.truth_(dommy.core.has_class_QMARK_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0], "incorrect"))) {
    var code_box = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0];
    var error = dommy.utils.__GT_Array.call(null, document.getElementsByClassName("error"))[0];
    dommy.core.remove_class_BANG_.call(null, code_box, "incorrect");
    dommy.core.remove_class_BANG_.call(null, error, "unfaded");
    return setTimeout(function() {
      return dommy.core.add_class_BANG_.call(null, code_box, "incorrect").call(null, dommy.core.add_class_BANG_.call(null, error, "unfaded"))
    }, 300)
  }else {
    var error = koans.core.error_message.call(null);
    dommy.core.append_BANG_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("koan"))[0], error);
    koans.core.fade_in_BANG_.call(null, error);
    return dommy.core.add_class_BANG_.call(null, dommy.utils.__GT_Array.call(null, document.getElementsByClassName("code"))[0], "incorrect")
  }
};
koans.core.evaluate_response = function evaluate_response(text) {
  console.log(text);
  if(cljs.core._EQ_.call(null, text, "true")) {
    return koans.core.load_next_koan.call(null)
  }else {
    if(cljs.core._EQ_.call(null, text, "false") || !(cljs.core.re_find.call(null, /\#\<[A-Za-z]*?Error:/, text) == null)) {
      return koans.core.show_error_message.call(null)
    }else {
      return null
    }
  }
};
koans.repl.listen_for_output.call(null, koans.core.evaluate_response);
goog.provide("koans.core_spec");
goog.require("cljs.core");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("cljs.core.async");
goog.require("dommy.core");
goog.require("dommy.core");
goog.require("koans.core");
goog.require("koans.core");
goog.require("specljs.core");
goog.provide("koans.meditations.recursion");
goog.require("cljs.core");
