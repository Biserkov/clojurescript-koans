// Compiled by ClojureScript 1.7.228 {}
goog.provide('koans.meditations.functions');
goog.require('cljs.core');
koans.meditations.functions.koans = cljs.core.list("Calling a function is like giving it a hug with parentheses",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"square","square",-1842001092,null),(9))),"Functions are usually defined before they are used",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"multiply-by-ten","multiply-by-ten",1857273106,null),(2))),"But they can also be defined inline",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",465265323,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),cljs.core.list(new cljs.core.Symbol(null,"*","*",345799209,null),(5),new cljs.core.Symbol(null,"n","n",-2092305744,null))),(2))),"Or using an even shorter syntax","(= :__ (#(* 15 %) 4))","Even anonymous functions may take multiple arguments","(= :__ (#(+ %1 %2 %3) 4 5 6))","Arguments can also be skipped","(= :__ (#(* 15 %2) 1 2))","One function can beget another",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),(9),cljs.core.list(cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",465265323,null),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,"__","__",-223697812))),(4),(5))),"Functions can also take other functions as input",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),(20),cljs.core.list(cljs.core.list(new cljs.core.Symbol(null,"fn","fn",465265323,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"f","f",43394975,null)], null),cljs.core.list(new cljs.core.Symbol(null,"f","f",43394975,null),(4),(5))),new cljs.core.Keyword(null,"__","__",-223697812))),"Higher-order functions take function arguments",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),(25),cljs.core.list(new cljs.core.Keyword(null,"__","__",-223697812),cljs.core.list(new cljs.core.Symbol(null,"fn","fn",465265323,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),cljs.core.list(new cljs.core.Symbol(null,"*","*",345799209,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"n","n",-2092305744,null))))),"But they are often better written using the names of functions",cljs.core.list(new cljs.core.Symbol(null,"=","=",-1501502141,null),(25),cljs.core.list(new cljs.core.Keyword(null,"__","__",-223697812),new cljs.core.Symbol(null,"square","square",-1842001092,null))));
koans.meditations.functions.fns = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(defn multiply-by-ten [n]\n  (* 10 n))",cljs.core.list(new cljs.core.Symbol(null,"defn","defn",-126010802,null),new cljs.core.Symbol(null,"square","square",-1842001092,null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,"n","n",-2092305744,null)], null),cljs.core.list(new cljs.core.Symbol(null,"*","*",345799209,null),new cljs.core.Symbol(null,"n","n",-2092305744,null),new cljs.core.Symbol(null,"n","n",-2092305744,null)))], null);

//# sourceMappingURL=functions.js.map